/**
 * name: @alvarosabu/ui
 * version: v3.0.0
 * (c) 2024
 * description: UI Library for my personal projects
 * author: Alvaro Saburido <hola@alvarosaburido.dev> (https://github.com/alvarosabu/)
 */
var jr = Object.defineProperty;
var Ur = (i, e, t) => e in i ? jr(i, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : i[e] = t;
var p = (i, e, t) => Ur(i, typeof e != "symbol" ? e + "" : e, t);
import { defineComponent as H, computed as z, openBlock as N, createElementBlock as T, normalizeClass as D, createBlock as ne, createCommentVNode as Z, createTextVNode as he, toDisplayString as K, toRefs as Re, resolveDynamicComponent as Jt, unref as P, withCtx as we, renderSlot as F, useAttrs as zr, ref as ee, createElementVNode as R, normalizeStyle as Hr, createStaticVNode as qe, createVNode as te, Fragment as Wr, renderList as qr, Transition as Me, withDirectives as ot, vShow as at, withAsyncContext as Kr, h as Vr, onMounted as Yr } from "vue";
import { useDark as Xr, useToggle as Jr, useFocus as Qr, onClickOutside as Zr, useActiveElement as ei, createSharedComposable as ti } from "@vueuse/core";
const ri = {
  // oxford
  DEFAULT: "#3E5166",
  50: "#B7C4D3",
  100: "#A7B7C9",
  200: "#879DB6",
  300: "#6784A3",
  400: "#516A86",
  500: "#3E5166",
  600: "#2B3846",
  700: "#171F27",
  800: "#040507",
  900: "#000000"
}, ii = {
  // caribbean-green
  DEFAULT: "#34D399",
  50: "#F1FCF8",
  100: "#DCF7ED",
  200: "#B2EED8",
  300: "#88E5C3",
  400: "#5EDCAE",
  500: "#34D399",
  600: "#26AE7C",
  700: "#1D845F",
  800: "#145A41",
  900: "#0B3023"
}, X = {
  colors: {
    primary: ri,
    secondary: ii
  },
  breakpoints: {
    xs: "320px",
    sm: "640px",
    md: "768px",
    lg: "1024px",
    xl: "1280px",
    "2xl": "1536px"
  },
  boxShadow: {
    active: "inset 4px 4px 2px 0 rgba(0, 0, 0, 0.08)",
    button: "4px 4px 1px 0px"
  }
}, Ro = {
  provider: "google",
  // default provider
  fonts: {
    // these will extend the default theme
    sans: ["Inter", "Inter:400,700"],
    mono: ["Fira Code", "Fira Code:400,700"],
    display: ["Gilroy"]
  }
};
var li = /* @__PURE__ */ ((i) => (i.BUTTON = "button", i.SUBMIT = "submit", i.RESET = "reset", i))(li || {}), ue = /* @__PURE__ */ ((i) => (i.PRIMARY = "primary", i.SECONDARY = "secondary", i))(ue || {}), re = /* @__PURE__ */ ((i) => (i.DEFAULT = "default", i.BLOCK = "block", i.SM = "sm", i.MD = "md", i.LG = "lg", i))(re || {});
const ni = [
  [
    /^btn-(?!.*(outline|flat|transparent|block|sm|md|lg|default))(.*)/,
    ([, , i]) => `important-bg-${i}-400
      text-white
      border-transparent
      hover:shadow-${i}
      hover:shadow-button
      focus:outline-none
      focus:ring-2
      focus:ring-opacity-75
      focus:ring-${i}-400`
  ],
  [
    /^btn-outline-(.*)$/,
    ([, i]) => `bg-transparent 
      border-${i}-400 
      text-${i}-400 
      hover:text-${i}-500 
      hover:shadow-${i} 
      hover:shadow-button 
      focus:outline-none 
      focus:ring-2 
      focus:ring-opacity-75 
      focus:ring-${i}-400`
  ],
  [/^btn-flat-(.*)$/, ([, i]) => `bg-gray-50 border-transparent text-${i}-400 hover:text-${i}-600`],
  [
    /^btn-transparent-(.*)$/,
    ([, i]) => `bg-transparent border-transparent text-${i}-400 hover:text-${i}-600 dark:text-${i}-100`
  ]
], Ao = [
  ...Object.values(ue).map((i) => `btn-${i}`),
  ...Object.values(ue).map((i) => `btn-outline-${i}`),
  ...Object.values(ue).map((i) => `btn-flat-${i}`),
  ...Object.values(ue).map((i) => `btn-transparent-${i}`),
  ...Object.values(re).map((i) => `btn-${i}`)
], Lo = Object.values(ue), ci = [
  {
    "headline-1": "font-display text-primary-400 dark:text-gray-200 text-4xl",
    "headline-2": "font-display text-primary-400 dark:text-gray-200 text-2xl",
    "headline-3": "font-display text-primary-400 dark:text-gray-200 text-xl"
  }
], oi = [
  {
    "as-container": "lg:container mx-auto px-4 lg:px-0"
  }
], To = [...ni, ...ci, ...oi], Po = [
  [
    "text-bg-md",
    {
      "background-image": "linear-gradient(to top, #99ffd580 54%, transparent 54%, transparent 100%)",
      width: "fit-content",
      transition: "all 400ms ease-in-out"
    }
  ],
  [
    "text-bg-sm",
    {
      "background-image": "linear-gradient(to top, #99ffd580 30%, transparent 30%, transparent 100%)",
      width: "fit-content",
      transition: "all 400ms ease-in-out"
    }
  ],
  [/^line-height-(\d+)$/, ([, i]) => ({ "line-height": `${Number.parseInt(i) * 0.25}` })]
], Eo = {
  scale: 1.2,
  warn: !0,
  extraProperties: {
    display: "inline-block",
    "vertical-align": "middle"
    // ...
  }
}, Qe = {
  "font-family": "Gilroy"
};
var Vt, Yt, Xt;
const Oo = {
  cssExtend: {
    h1: Qe,
    h2: Qe,
    h3: Qe,
    p: {
      "font-family": "Inter",
      "font-size": "1rem"
    },
    code: {
      "font-family": "Fira Code iScript",
      "font-size": "0.875rem",
      color: `${(Vt = X == null ? void 0 : X.colors) == null ? void 0 : Vt.primary[500]} !important`
    },
    ":not(pre)>code": {
      background: "#e8e8e8 !important",
      padding: "0.25rem 0.5rem !important"
    },
    blockquote: {
      padding: "1rem"
    },
    "code::after": {
      content: "none"
    },
    "code::before": {
      content: "none"
    },
    a: {
      color: (Yt = X == null ? void 0 : X.colors) == null ? void 0 : Yt.secondary[500],
      "font-weight": 500,
      "text-decoration": "none",
      transition: "color 400ms ease-in-out"
    },
    "a:hover": {
      color: (Xt = X == null ? void 0 : X.colors) == null ? void 0 : Xt.secondary[600],
      transition: "color 400ms ease-in-out"
    }
  }
}, ai = /* @__PURE__ */ new Map([
  ["menu", "gg-menu-right"],
  ["close", "gg-close"],
  ["location", "carbon-location"],
  ["share", "carbon-share"],
  ["search", "carbon-search"],
  ["copy", "carbon-copy"],
  ["check", "ic-outline-check"]
]), si = /* @__PURE__ */ new Map([
  ["twitter", "carbon-logo-twitter"],
  ["github", "carbon-logo-github"],
  ["dev-to", "bx-bxl-dev-to"],
  ["youtube", "carbon-logo-youtube"],
  ["twitch", "bi-twitch"]
]), ui = /* @__PURE__ */ new Map([
  ["code", "carbon-code"],
  ["repo", "octicon-repo-24"],
  ["star", "carbon-star"],
  ["fork", "octicon-repo-forked-16"],
  ["term", "carbon-terminal"],
  ["brush", "carbon-brush-freehand"],
  ["lamp", "teenyicons-desklamp-outline"],
  ["3d", "carbon:chart-3d"],
  ["art", "heroicons:paint-brush"],
  ["pull-request", "tabler:git-pull-request"]
]), pi = /* @__PURE__ */ new Map([
  ["heart-outline", "ant-design-heart-outlined"],
  ["heart-fill", "ant-design-heart-filled"],
  ["baby-bottle", "mdi-baby-bottle-outline"],
  ["png", "carbon-png"],
  ["download", "carbon-download"],
  ["calendar", "octicon-calendar"],
  ["clock", "octicon-clock"]
]), Qt = new Map([...ai, ...si, ...ui, ...pi]), fi = Array.from(Qt.entries()), Io = [...fi.map(([i, e]) => `i-${e}`)], st = /* @__PURE__ */ H({
  __name: "AsIcon",
  props: {
    name: {}
  },
  setup(i) {
    const e = i, t = z(() => Qt.get(e.name));
    return (r, l) => (N(), T("div", {
      class: D(`i-${t.value}`)
    }, null, 2));
  }
}), Mo = /* @__PURE__ */ H({
  __name: "AsBadge",
  props: {
    label: {},
    outline: { type: Boolean },
    icon: {}
  },
  setup(i) {
    const e = i, t = z(() => {
      const r = ["rounded-lg text-sm font-bold py-0.5 px-1 ml-4"];
      return e.outline ? r.push("border-secondary text-secondary border-1") : r.push("border-transparent border-1 bg-secondary text-secondary-100"), r;
    });
    return (r, l) => (N(), T("span", {
      class: D(["inline-flex items-center rounded-md text-xs font-sans py-0.5 px-1 ml-4 f", t.value])
    }, [
      r.icon ? (N(), ne(st, {
        key: 0,
        class: D({ "mr-0.5": r.label }),
        name: r.icon
      }, null, 8, ["class", "name"])) : Z("", !0),
      he(" " + K(r.label), 1)
    ], 2));
  }
}), Zt = /* @__PURE__ */ H({
  __name: "AsButton",
  props: {
    label: {},
    icon: {},
    iconRight: {},
    disabled: { type: Boolean, default: !1 },
    outline: { type: Boolean, default: !1 },
    link: { type: Boolean, default: !1 },
    target: { default: "_blank" },
    variant: { default: "primary" },
    size: { default: "default" },
    flat: { type: Boolean, default: !1 },
    transparent: { type: Boolean, default: !1 }
  },
  setup(i) {
    const e = i, { label: t, icon: r, iconRight: l, disabled: n, outline: c, link: a, target: o, variant: s, size: u, flat: f, transparent: d } = Re(e), h = z(() => !!(t != null && t.value)), g = z(() => {
      const m = ["as-btn"];
      return s.value && (f.value ? m.push(`btn-flat-${s.value.toLowerCase()}`) : c.value ? m.push(`btn-outline-${s.value.toLowerCase()}`) : d.value ? m.push(`btn-transparent-${s.value.toLowerCase()}`) : m.push(`btn-${s.value.toLowerCase()}`)), u.value && m.push({
        "py-2 px-4": u.value === re.DEFAULT,
        "w-full py-2 px-5": u.value === re.BLOCK,
        "text-xs py-1 px-2": u.value === re.SM,
        "text-sm py-1.5 px-3": u.value === re.MD,
        "text-lg py-2.5 px-5": u.value === re.LG
      }), m;
    });
    return (m, C) => (N(), ne(Jt(P(a) ? "a" : "button"), {
      disabled: P(n),
      href: P(a) || void 0,
      target: P(a) ? P(o) : void 0,
      class: D(g.value),
      font: "sans semibold",
      border: "2 rounded",
      flex: "",
      "items-center": "",
      "justify-center": "",
      "gap-2": "",
      "transition-all": "",
      "duration-300": "",
      "disabled:opacity-20": "",
      "cursor-pointer": "",
      "decoration-none": ""
    }, {
      default: we(() => [
        F(m.$slots, "prefix", {}, () => [
          P(r) ? (N(), ne(st, {
            key: 0,
            name: P(r),
            class: D(["bg-current", h.value ? "mr-2" : ""])
          }, null, 8, ["name", "class"])) : Z("", !0)
        ]),
        F(m.$slots, "default", {}, () => [
          he(K(P(t)), 1)
        ]),
        F(m.$slots, "suffix", {}, () => [
          h.value && P(l) ? (N(), ne(st, {
            key: 0,
            name: P(l),
            class: D(["b-current", h.value ? "ml-2" : ""])
          }, null, 8, ["name", "class"])) : Z("", !0)
        ])
      ]),
      _: 3
    }, 8, ["disabled", "href", "target", "class"]));
  }
});
var yt = /* @__PURE__ */ ((i) => (i.FILL = "fill", i.CONTAIN = "contain", i.COVER = "cover", i))(yt || {}), er = /* @__PURE__ */ ((i) => (i.EAGER = "eager", i.LAZY = "lazy", i))(er || {}), pe = /* @__PURE__ */ ((i) => (i.BOTTOM = "bottom", i.FULL = "full", i.OUTSIDE = "outside", i))(pe || {});
const tr = ["16/9", "4/3", "1/1", "2/3"], Bo = tr.map(
  (i) => `aspect-${i}`
), Do = Object.values(yt), $o = Object.values(er), Go = Object.values(pe), di = ["src", "alt"], rr = /* @__PURE__ */ H({
  __name: "AsImg",
  props: {
    aspectRatio: { default: tr[0] },
    objectFit: { default: yt.CONTAIN },
    caption: {},
    captionMode: {},
    captionType: { default: pe.OUTSIDE }
  },
  emits: ["loaded", "error"],
  setup(i, { emit: e }) {
    const t = i, r = e, { aspectRatio: l, objectFit: n, caption: c, captionType: a } = Re(t), o = zr(), s = z(() => ({
      src: o.src,
      alt: o.alt
    })), u = ee(!1), f = ee(!0), d = z(
      () => ({
        objectFit: n.value
      })
    ), h = z(() => ({
      "w-full bg-gray-100 relative": !0,
      "overflow-hidden :before:bg-red-100 :before:block :before:absolute :before:inset-0 :before:bg-no-repeat :before:bg-center": u.value
    })), g = ee([
      "as-img",
      "relative",
      "overflow-hidden",
      "rounded",
      "m-0",
      l.value ? `aspect-${l.value}` : null
    ]), m = z(() => {
      switch (a.value) {
        case pe.OUTSIDE:
          return ["text-sm", "py-4"];
        case pe.BOTTOM:
          return "absolute bg-black text-sm text-white bottom-0 bg-opacity-20 w-full p-4 text-center";
        case pe.FULL:
          return `absolute bg-black text-sm text-white inset-0 bg-opacity-20 w-full 
      p-4 text-center flex items-center justify-center`;
        default:
          return "";
      }
    });
    function C(S) {
      u.value = !1, f.value = !1, r("loaded", S);
    }
    function w(S) {
      u.value = !0, f.value = !1;
      const { src: x } = S.target, b = `Image source ${x} not found`;
      r("error", b);
    }
    return (S, x) => (N(), T("figure", {
      class: D(g.value)
    }, [
      R("img", {
        src: s.value.src,
        alt: s.value.alt,
        class: D(h.value),
        style: Hr(d.value),
        onLoad: C,
        onError: w
      }, null, 46, di),
      P(c) || S.$slots.default ? (N(), T("figcaption", {
        key: 0,
        class: D(m.value)
      }, [
        F(S.$slots, "default", {}, () => [
          he(K(P(c)), 1)
        ])
      ], 2)) : Z("", !0)
    ], 2));
  }
}), mi = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "261",
  height: "158",
  fill: "none"
}, hi = /* @__PURE__ */ R("path", {
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-opacity": ".25",
  "stroke-width": "6",
  d: "M3 23 28.5 3 54 23 79.5 3 105 23l25.5-20L156 23l25.5-20L207 23l25.5-20L258 23M3 67l25.5-20L54 67l25.5-20L105 67l25.5-20L156 67l25.5-20L207 67l25.5-20L258 67M3 111l25.5-20L54 111l25.5-20 25.5 20 25.5-20 25.5 20 25.5-20 25.5 20 25.5-20 25.5 20M3 155l25.5-20L54 155l25.5-20 25.5 20 25.5-20 25.5 20 25.5-20 25.5 20 25.5-20 25.5 20"
}, null, -1), gi = [
  hi
];
function yi(i, e) {
  return N(), T("svg", mi, [...gi]);
}
const Ci = { render: yi }, xi = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "230",
  height: "230",
  fill: "none"
}, _i = /* @__PURE__ */ qe('<circle cx="2.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle>', 100), bi = [
  _i
];
function wi(i, e) {
  return N(), T("svg", xi, [...bi]);
}
const Si = { render: wi }, vi = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "100",
  height: "100",
  fill: "none"
}, ki = /* @__PURE__ */ R("path", {
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "18",
  d: "M48.995 9v81.806M90.806 50H9"
}, null, -1), Ni = [
  ki
];
function Ri(i, e) {
  return N(), T("svg", vi, [...Ni]);
}
const Ai = { render: Ri }, Li = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "98",
  height: "98",
  fill: "none"
}, Ti = /* @__PURE__ */ R("circle", {
  cx: "49",
  cy: "49",
  r: "38",
  stroke: "currentColor",
  "stroke-width": "22"
}, null, -1), Pi = [
  Ti
];
function Ei(i, e) {
  return N(), T("svg", Li, [...Pi]);
}
const Oi = { render: Ei }, Ii = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "480",
  height: "432",
  fill: "none"
}, Mi = /* @__PURE__ */ qe('<circle cx="2.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="253.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="278.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="303.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="328.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="353.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="378.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="403.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="428.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="254.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="279.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="304.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="329.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="354.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="379.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="404.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="429.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="2.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="27.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="52.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="77.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="102.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="127.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="152.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="177.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="202.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="227.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="2.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="27.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="52.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="77.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="102.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="127.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="152.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="177.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="202.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="252.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="277.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="302.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="327.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="352.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="377.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="402.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="427.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="452.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle><circle cx="477.5" cy="227.5" r="2.5" fill="currentColor" fill-opacity=".42"></circle>', 360), Bi = [
  Mi
];
function Di(i, e) {
  return N(), T("svg", Ii, [...Bi]);
}
const $i = { render: Di }, Gi = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "322",
  height: "279",
  fill: "none"
}, Fi = /* @__PURE__ */ R("path", {
  fill: "currentColor",
  "fill-opacity": ".3",
  d: "M92.5 38C73.3 18.8 22.833 4.667 0 0v278.5h322c-5.167-9.333-23.6-30-56-38-40.5-10-78.5-26.5-90-38.5s-32-44-39-79-20.5-61-44.5-85"
}, null, -1), ji = [
  Fi
];
function Ui(i, e) {
  return N(), T("svg", Gi, [...ji]);
}
const zi = { render: Ui }, Hi = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "317",
  height: "83",
  fill: "none"
}, Wi = /* @__PURE__ */ R("path", {
  fill: "currentColor",
  d: "M6.095 82.907c-2.434.194-4.475.175-6.095 0zc16.096-1.282 49.362-11.864 91.405-48 60.5-52 137-53.5 219.5 48z"
}, null, -1), qi = [
  Wi
];
function Ki(i, e) {
  return N(), T("svg", Hi, [...qi]);
}
const Vi = { render: Ki }, Yi = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "568",
  height: "819",
  fill: "none"
}, Xi = /* @__PURE__ */ qe('<path fill="url(#a)" fill-opacity=".08" d="M419.963 565.62c-43.931 19.576-117.938 2.091-169.303 22.062-50.975 19.992-79.698 77.421-121.106 101.029-41.798 23.588-96.691 13.724-145.31-11.811-48.251-25.127-90.638-65.556-92.442-113.64-2.193-48.103 35.42-103.901 36.494-162.37 1.075-58.469-34.736-120.408-21.23-155.214s76.37-43.258 129.492-67.04c53.102-23.394 96.504-62.895 139.059-63.424 42.944-.509 85.043 37.955 114.998 77.351 29.565 39.375 46.947 80.462 78.828 120.348 31.88 39.885 78.218 79.349 93.682 127.359 15.852 48.03 1.178 105.405-43.162 125.35"></path><defs><radialGradient id="a" cx="0" cy="0" r="1" gradientTransform="matrix(-287.5633 -14.87932 15.28563 -295.4158 184.619 411.739)" gradientUnits="userSpaceOnUse"><stop stop-color="#0ED7B5"></stop><stop offset="1" stop-color="#0E7490"></stop><stop offset="1" stop-color="#34D399" stop-opacity=".016"></stop><stop offset="1" stop-color="#34D399"></stop></radialGradient></defs>', 2), Ji = [
  Xi
];
function Qi(i, e) {
  return N(), T("svg", Yi, [...Ji]);
}
const Zi = { render: Qi };
var ir = /* @__PURE__ */ ((i) => (i.ZIGZAG = "zigzag", i.DOTS = "dots", i.DOTS_2X = "dots-2x", i.CROSS = "cross", i.DONUT = "donut", i.CURVE_BIG = "curve-big", i.CURVE_SMALL = "curve-small", i.BLOB = "blob", i))(ir || {});
const el = {
  zigzag: Ci,
  dots: Si,
  "dots-2x": $i,
  cross: Ai,
  donut: Oi,
  "curve-big": zi,
  "curve-small": Vi,
  blob: Zi
}, tl = /* @__PURE__ */ H({
  __name: "AsGraphic",
  props: {
    type: { default: ir.DOTS }
  },
  setup(i) {
    const e = i, { type: t } = Re(e), r = z(() => el[t.value]);
    return (l, n) => (N(), ne(Jt(r.value)));
  }
});
var ut = /* @__PURE__ */ ((i) => (i.ROW = "row", i.REVERSE = "reverse", i))(ut || {});
const rl = { class: "relative w-full sm:w-1/2 py-4 min-h-300px sm:min-h-375px" }, Fo = /* @__PURE__ */ H({
  __name: "AsTextImage",
  props: {
    media: {},
    direction: { default: ut.ROW }
  },
  setup(i) {
    const e = i, { media: t, direction: r } = Re(e), l = z(() => r.value === ut.REVERSE);
    return (n, c) => (N(), T("div", {
      class: D([
        "flex",
        l.value ? "important-flex-col-reverse sm:important-flex-row-reverse" : "important-flex-col sm:important-flex-row"
      ])
    }, [
      R("div", rl, [
        te(tl, {
          class: D(["absolute top-16 scale-75", l.value ? "right-0" : "left-0"])
        }, null, 8, ["class"]),
        R("div", {
          class: D(["absolute w-2/3 rounded-xl", l.value ? "left-0" : "right-0"])
        }, [
          te(rr, {
            class: "shadow-lg",
            src: P(t).src,
            alt: P(t).alt,
            "aspect-ratio": P(t).aspectRatio
          }, null, 8, ["src", "alt", "aspect-ratio"])
        ], 2)
      ]),
      R("div", {
        class: D(["w-full sm:w-1/2 prose", l.value ? "sm:pr-16" : "sm:pl-16"])
      }, [
        F(n.$slots, "default")
      ], 2)
    ], 2));
  }
}), il = {
  class: "as-card",
  border: "1 gray-300 rounded",
  text: "primary-500 dark:gray-100 left",
  font: "sans",
  "w-full": "",
  "inline-flex": "",
  "flex-col": "",
  "cursor-pointer": ""
}, ll = {
  key: 1,
  font: "bold display",
  text: "base lg",
  "p-4": "",
  "m-0": ""
}, nl = {
  key: 2,
  "m-0": "",
  "pl-4": "",
  "font-typewrite": "",
  "text-xs": ""
}, cl = {
  "text-sm": "",
  "p-4": "",
  "opacity-80": ""
}, ol = /* @__PURE__ */ R("footer", {
  flex: "",
  "w-full": "",
  "text-sm": "",
  "justify-end": ""
}, null, -1), jo = /* @__PURE__ */ H({
  __name: "AsCard",
  props: {
    title: {},
    subtitle: {},
    media: {},
    mediaAlt: {},
    content: {}
  },
  setup(i) {
    return (e, t) => (N(), T("div", il, [
      F(e.$slots, "header", {}, () => [
        R("header", null, [
          e.media ? (N(), ne(rr, {
            key: 0,
            "w-full": "",
            "rounded-none": "",
            src: e.media,
            alt: e.mediaAlt,
            "aspect-ratio": "16/9"
          }, null, 8, ["src", "alt"])) : Z("", !0),
          e.title ? (N(), T("h2", ll, [
            F(e.$slots, "title", {}, () => [
              he(K(e.title), 1)
            ])
          ])) : Z("", !0),
          e.subtitle ? (N(), T("p", nl, [
            F(e.$slots, "subtitle", {}, () => [
              he(K(e.subtitle), 1)
            ])
          ])) : Z("", !0)
        ])
      ]),
      F(e.$slots, "content", {}, () => [
        R("div", cl, K(e.content), 1)
      ]),
      F(e.$slots, "footer", {}, () => [
        ol
      ])
    ]));
  }
}), al = ["aria-label", "checked"], sl = {
  for: "dark-switch",
  relative: "",
  "cursor-pointer": ""
}, ul = /* @__PURE__ */ R("div", { class: "planet" }, null, -1), pl = { class: "dots" }, Uo = /* @__PURE__ */ H({
  __name: "AsDarkModeToggle",
  setup(i) {
    const e = Xr(), t = Jr(e), r = ee(null), { focused: l } = Qr(r);
    return (n, c) => (N(), T("div", {
      relative: "",
      "inline-block": "",
      class: D(["dark-mode-switch", { "outline-solid-blue-500": P(l) }])
    }, [
      R("input", {
        id: "dark-switch",
        ref_key: "inputRef",
        ref: r,
        type: "checkbox",
        "w-2": "",
        "h-2": "",
        absolute: "",
        "opacity-0": "",
        "aria-label": `Enable ${P(e) ? "light" : "dark"} Mode`,
        "tab-index": "0",
        checked: !P(e),
        onChange: c[0] || (c[0] = (a) => P(t)())
      }, null, 40, al),
      R("label", sl, [
        ul,
        R("div", pl, [
          (N(), T(Wr, null, qr([0, 45, 90, 135, 180, 225, 270, 315], (a) => R("span", {
            key: `dot-${a}`,
            class: D(`dot-${a}`)
          }, null, 2)), 64))
        ])
      ])
    ], 2));
  }
}), fl = {
  class: "relative z-70",
  "aria-labelledby": "modal-title",
  role: "dialog",
  "aria-modal": "true"
}, dl = {
  fixed: "",
  "inset-0": "",
  "bg-gray-500": "",
  "bg-opacity-75": "",
  "transition-opacity": ""
}, ml = { class: "fixed inset-0 z-70 overflow-y-auto" }, hl = { class: "flex min-h-full items-start justify-center p-4 text-center sm:items-center md:p-0" }, gl = {
  "bg-white": "",
  "dark:bg-primary-600": "",
  "text-primary": "",
  "dark:text-gray-400": ""
}, yl = {
  relative: "",
  "px-4": "",
  "pt-4": "",
  "pb-4": "",
  "sm:p-6": "",
  "sm:pb-4": ""
}, Cl = { class: "headline-3 sm:headline-2" }, xl = {
  "p-4": "",
  "sm:p-6": ""
}, _l = { class: "prose" }, bl = { class: "px-4 py-3 flex justify-end" }, zo = /* @__PURE__ */ H({
  __name: "AsModal",
  props: {
    title: {},
    isOpen: { type: Boolean },
    content: {}
  },
  emits: ["update:isOpen"],
  setup(i, { emit: e }) {
    const t = e, r = ee();
    Zr(r, l);
    function l() {
      t("update:isOpen", !1);
    }
    return (n, c) => (N(), T("div", fl, [
      te(Me, {
        name: "fade-overlay",
        "enter-active-class": "opacity-1 transition-opacity duration-200",
        "leave-active-class": "opacity-0 transition-opacity duration-200"
      }, {
        default: we(() => [
          ot(R("div", dl, null, 512), [
            [at, n.isOpen]
          ])
        ]),
        _: 1
      }),
      te(Me, {
        name: "fade-overlay",
        "enter-active-class": "opacity-1 translate-y-0 sm:scale-100 delay-200 transition-all duration-300",
        "leave-active-class": "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95 transition-all duration-200"
      }, {
        default: we(() => [
          ot(R("div", ml, [
            R("div", hl, [
              R("div", {
                ref_key: "modal",
                ref: r,
                relative: "",
                transform: "",
                "overflow-hidden": "",
                "rounded-lg": "",
                "bg-white": "",
                "dark:bg-primary-600": "",
                "text-left": "",
                "shadow-xl": "",
                "transition-all": "",
                "sm:my-8": "",
                "lg:w-full": "",
                "sm:max-w-3xl": ""
              }, [
                R("div", gl, [
                  R("header", yl, [
                    F(n.$slots, "header", {}, () => [
                      R("h2", Cl, K(n.title), 1)
                    ]),
                    te(Zt, {
                      transparent: "",
                      "p-4": "",
                      absolute: "",
                      top: "2 sm:4",
                      right: "2 sm:4",
                      icon: "close",
                      onClick: l
                    })
                  ]),
                  R("div", xl, [
                    F(n.$slots, "content", {}, () => [
                      R("p", _l, K(n.content), 1)
                    ])
                  ])
                ]),
                R("footer", bl, [
                  F(n.$slots, "footer")
                ])
              ], 512)
            ])
          ], 512), [
            [at, n.isOpen]
          ])
        ]),
        _: 3
      })
    ]));
  }
}), wl = { class: "as-particle-loader" }, Sl = ["width"], vl = /* @__PURE__ */ qe('<g id="el_K14KZpaUUf_an_uzCRZV8LL" data-animator-group="true" data-animator-type="0"><g id="el_K14KZpaUUf_an_s-u7Qoaha" data-animator-group="true" data-animator-type="1"><g id="el_K14KZpaUUf_an_Uii2MvB3j" data-animator-group="true" data-animator-type="2"><rect id="el_K14KZpaUUf" x="235" y="252" width="43" height="8"></rect></g></g></g><g id="el_8vVe818fyI_an_i79dpGMUM" data-animator-group="true" data-animator-type="0"><g id="el_8vVe818fyI_an_RqXqcMwvz" data-animator-group="true" data-animator-type="1"><g id="el_8vVe818fyI_an__bExq-HgO" data-animator-group="true" data-animator-type="2"><rect id="el_8vVe818fyI" x="235" y="252" width="43" height="8"></rect></g></g></g><g id="el_342UfSpg1o_an_mHoePAwO8" data-animator-group="true" data-animator-type="0"><g id="el_342UfSpg1o_an_fGrKAUpn5" data-animator-group="true" data-animator-type="1"><g id="el_342UfSpg1o_an_Lwb52Ncdm" data-animator-group="true" data-animator-type="2"><rect id="el_342UfSpg1o" x="235" y="252" width="43" height="8"></rect></g></g></g><g id="el_vOa8NPJOyR_an_dbg0acckc" data-animator-group="true" data-animator-type="0"><g id="el_vOa8NPJOyR_an_a65BtQ09x" data-animator-group="true" data-animator-type="1"><g id="el_vOa8NPJOyR_an_7sn-8duPi" data-animator-group="true" data-animator-type="2"><rect id="el_vOa8NPJOyR" x="235" y="252" width="43" height="8"></rect></g></g></g><g id="el_KGuutbv_2N_an_hlYQCkG6S" data-animator-group="true" data-animator-type="0"><g id="el_KGuutbv_2N_an_OQiHzDTaJ" data-animator-group="true" data-animator-type="1"><g id="el_KGuutbv_2N_an_fmnda5309" data-animator-group="true" data-animator-type="2"><rect id="el_KGuutbv_2N" x="235" y="252" width="43" height="8"></rect></g></g></g><g id="el_DZNZsi7r4u_an_EKe1640e7" data-animator-group="true" data-animator-type="0"><circle id="el_DZNZsi7r4u" cx="256.5" cy="255.5" r="22.5"></circle></g><g id="el_UTiwSL6G_B_an_8H8J4qQkh" data-animator-group="true" data-animator-type="0"><circle id="el_UTiwSL6G_B" cx="256.5" cy="255.5" r="22.5"></circle></g><g id="el_RD1ROxlE21_an_5QZ2F-FOJ" data-animator-group="true" data-animator-type="0"><circle id="el_RD1ROxlE21" cx="256.5" cy="255.5" r="22.5"></circle></g><g id="el_MYcMc4Akv4_an_pzn4i-FHd" data-animator-group="true" data-animator-type="0"><circle id="el_MYcMc4Akv4" cx="256.5" cy="255.5" r="22.5"></circle></g><g id="el_6YotClCzoX_an_qmt3IGADS" data-animator-group="true" data-animator-type="0"><circle id="el_6YotClCzoX" cx="256.5" cy="255.5" r="22.5"></circle></g>', 10), kl = [
  vl
], Ho = /* @__PURE__ */ H({
  __name: "AsParticleLoader",
  props: {
    size: {
      type: String,
      default: "1rem",
      validator: (i) => {
        const t = /^(?:\d+(?:\.\d+)?|\.\d+)(?:em|rem|px|%)?$/.test(i);
        return t || console.warn(`Invalid size specified "${i}". Valid units are em|rem|px|%`), t;
      }
    }
  },
  setup(i) {
    return (e, t) => (N(), T("i", wl, [
      (N(), T("svg", {
        id: "el_cwYysRMuh",
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        x: "0px",
        y: "0px",
        width: i.size,
        fill: "currentColor",
        viewBox: "0 0 512 512",
        style: { "enable-background": "new 0 0 512 512" },
        "xml:space": "preserve"
      }, kl, 8, Sl))
    ]));
  }
});
var xe = /* @__PURE__ */ ((i) => (i.XS = "xs", i.SM = "sm", i.MD = "md", i))(xe || {});
const Wo = /* @__PURE__ */ H({
  __name: "AsKbd",
  props: {
    size: { default: xe.SM },
    value: {}
  },
  setup(i) {
    const e = i, { size: t, value: r } = Re(e), l = {
      [xe.XS]: "h-4 min-w-[16px] text-[10px]",
      [xe.SM]: "h-5 min-w-[20px] text-[11px]",
      [xe.MD]: "h-6 min-w-[24px] text-[12px]"
    };
    return (n, c) => (N(), T("kbd", {
      class: D(["as-kbd", l[P(t)]]),
      "inline-flex": "",
      "items-center": "",
      "justify-center": "",
      "text-gray-900": "",
      "dark:text-white": "",
      "px-1": "",
      rounded: "",
      "font-medium": "",
      "font-sans": "",
      "bg-gray-100": "",
      "dark:bg-gray-800": "",
      "ring-1": "",
      "ring-gray-300": "",
      "dark:ring-gray-700": "",
      "ring-inset": ""
    }, [
      F(n.$slots, "default", {}, () => [
        he(K(P(r)), 1)
      ])
    ], 2));
  }
});
var q;
(function(i) {
  i[i.NotSet = -1] = "NotSet", i[i.None = 0] = "None", i[i.Italic = 1] = "Italic", i[i.Bold = 2] = "Bold", i[i.Underline = 4] = "Underline";
})(q || (q = {}));
typeof process < "u" && process.env.VSCODE_TEXTMATE_DEBUG;
var ge;
(function(i) {
  function e(u) {
    return u.toString(2).padStart(32, "0");
  }
  i.toBinaryStr = e;
  function t(u) {
    const f = i.getLanguageId(u), d = i.getTokenType(u), h = i.getFontStyle(u), g = i.getForeground(u), m = i.getBackground(u);
    console.log({
      languageId: f,
      tokenType: d,
      fontStyle: h,
      foreground: g,
      background: m
    });
  }
  i.print = t;
  function r(u) {
    return (u & 255) >>> 0;
  }
  i.getLanguageId = r;
  function l(u) {
    return (u & 768) >>> 8;
  }
  i.getTokenType = l;
  function n(u) {
    return (u & 1024) !== 0;
  }
  i.containsBalancedBrackets = n;
  function c(u) {
    return (u & 30720) >>> 11;
  }
  i.getFontStyle = c;
  function a(u) {
    return (u & 16744448) >>> 15;
  }
  i.getForeground = a;
  function o(u) {
    return (u & 4278190080) >>> 24;
  }
  i.getBackground = o;
  function s(u, f, d, h, g, m, C) {
    let w = i.getLanguageId(u), S = i.getTokenType(u), x = i.containsBalancedBrackets(u) ? 1 : 0, b = i.getFontStyle(u), _ = i.getForeground(u), k = i.getBackground(u);
    return f !== 0 && (w = f), d !== 8 && (S = d), h !== null && (x = h ? 1 : 0), g !== -1 && (b = g), m !== 0 && (_ = m), C !== 0 && (k = C), (w << 0 | S << 8 | x << 10 | b << 11 | _ << 15 | k << 24) >>> 0;
  }
  i.set = s;
})(ge || (ge = {}));
function Be(i, e) {
  const t = [], r = Nl(i);
  let l = r.next();
  for (; l !== null; ) {
    let o = 0;
    if (l.length === 2 && l.charAt(1) === ":") {
      switch (l.charAt(0)) {
        case "R":
          o = 1;
          break;
        case "L":
          o = -1;
          break;
        default:
          console.log(`Unknown priority ${l} in scope selector`);
      }
      l = r.next();
    }
    let s = c();
    if (t.push({ matcher: s, priority: o }), l !== ",")
      break;
    l = r.next();
  }
  return t;
  function n() {
    if (l === "-") {
      l = r.next();
      const o = n();
      return (s) => !!o && !o(s);
    }
    if (l === "(") {
      l = r.next();
      const o = a();
      return l === ")" && (l = r.next()), o;
    }
    if (At(l)) {
      const o = [];
      do
        o.push(l), l = r.next();
      while (At(l));
      return (s) => e(o, s);
    }
    return null;
  }
  function c() {
    const o = [];
    let s = n();
    for (; s; )
      o.push(s), s = n();
    return (u) => o.every((f) => f(u));
  }
  function a() {
    const o = [];
    let s = c();
    for (; s && (o.push(s), l === "|" || l === ","); ) {
      do
        l = r.next();
      while (l === "|" || l === ",");
      s = c();
    }
    return (u) => o.some((f) => f(u));
  }
}
function At(i) {
  return !!i && !!i.match(/[\w\.:]+/);
}
function Nl(i) {
  let e = /([LR]:|[\w\.:][\w\.:\-]*|[\,\|\-\(\)])/g, t = e.exec(i);
  return {
    next: () => {
      if (!t)
        return null;
      const r = t[0];
      return t = e.exec(i), r;
    }
  };
}
function lr(i) {
  typeof i.dispose == "function" && i.dispose();
}
function Rl(i) {
  return Ct(i);
}
function Ct(i) {
  return Array.isArray(i) ? Al(i) : typeof i == "object" ? Ll(i) : i;
}
function Al(i) {
  let e = [];
  for (let t = 0, r = i.length; t < r; t++)
    e[t] = Ct(i[t]);
  return e;
}
function Ll(i) {
  let e = {};
  for (let t in i)
    e[t] = Ct(i[t]);
  return e;
}
function nr(i, ...e) {
  return e.forEach((t) => {
    for (let r in t)
      i[r] = t[r];
  }), i;
}
function cr(i) {
  const e = ~i.lastIndexOf("/") || ~i.lastIndexOf("\\");
  return e === 0 ? i : ~e === i.length - 1 ? cr(i.substring(0, i.length - 1)) : i.substr(~e + 1);
}
let Ze = /\$(\d+)|\${(\d+):\/(downcase|upcase)}/g;
class Te {
  static hasCaptures(e) {
    return e === null ? !1 : (Ze.lastIndex = 0, Ze.test(e));
  }
  static replaceCaptures(e, t, r) {
    return e.replace(Ze, (l, n, c, a) => {
      let o = r[parseInt(n || c, 10)];
      if (o) {
        let s = t.substring(o.start, o.end);
        for (; s[0] === "."; )
          s = s.substring(1);
        switch (a) {
          case "downcase":
            return s.toLowerCase();
          case "upcase":
            return s.toUpperCase();
          default:
            return s;
        }
      } else
        return l;
    });
  }
}
function or(i, e) {
  return i < e ? -1 : i > e ? 1 : 0;
}
function ar(i, e) {
  if (i === null && e === null)
    return 0;
  if (!i)
    return -1;
  if (!e)
    return 1;
  let t = i.length, r = e.length;
  if (t === r) {
    for (let l = 0; l < t; l++) {
      let n = or(i[l], e[l]);
      if (n !== 0)
        return n;
    }
    return 0;
  }
  return t - r;
}
function Lt(i) {
  return !!(/^#[0-9a-f]{6}$/i.test(i) || /^#[0-9a-f]{8}$/i.test(i) || /^#[0-9a-f]{3}$/i.test(i) || /^#[0-9a-f]{4}$/i.test(i));
}
function sr(i) {
  return i.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&");
}
class ur {
  constructor(e) {
    p(this, "fn");
    p(this, "cache", /* @__PURE__ */ new Map());
    this.fn = e;
  }
  get(e) {
    if (this.cache.has(e))
      return this.cache.get(e);
    const t = this.fn(e);
    return this.cache.set(e, t), t;
  }
}
class Se {
  constructor(e) {
    p(this, "scopeName");
    this.scopeName = e;
  }
  toKey() {
    return this.scopeName;
  }
}
class Tl {
  constructor(e, t) {
    p(this, "scopeName");
    p(this, "ruleName");
    this.scopeName = e, this.ruleName = t;
  }
  toKey() {
    return `${this.scopeName}#${this.ruleName}`;
  }
}
class Pl {
  constructor() {
    p(this, "_references", []);
    p(this, "_seenReferenceKeys", /* @__PURE__ */ new Set());
    p(this, "visitedRule", /* @__PURE__ */ new Set());
  }
  get references() {
    return this._references;
  }
  add(e) {
    const t = e.toKey();
    this._seenReferenceKeys.has(t) || (this._seenReferenceKeys.add(t), this._references.push(e));
  }
}
class El {
  constructor(e, t) {
    p(this, "repo");
    p(this, "initialScopeName");
    p(this, "seenFullScopeRequests", /* @__PURE__ */ new Set());
    p(this, "seenPartialScopeRequests", /* @__PURE__ */ new Set());
    p(this, "Q");
    this.repo = e, this.initialScopeName = t, this.seenFullScopeRequests.add(this.initialScopeName), this.Q = [new Se(this.initialScopeName)];
  }
  processQueue() {
    const e = this.Q;
    this.Q = [];
    const t = new Pl();
    for (const r of e)
      Ol(r, this.initialScopeName, this.repo, t);
    for (const r of t.references)
      if (r instanceof Se) {
        if (this.seenFullScopeRequests.has(r.scopeName))
          continue;
        this.seenFullScopeRequests.add(r.scopeName), this.Q.push(r);
      } else {
        if (this.seenFullScopeRequests.has(r.scopeName) || this.seenPartialScopeRequests.has(r.toKey()))
          continue;
        this.seenPartialScopeRequests.add(r.toKey()), this.Q.push(r);
      }
  }
}
function Ol(i, e, t, r) {
  const l = t.lookup(i.scopeName);
  if (!l) {
    if (i.scopeName === e)
      throw new Error(`No grammar provided for <${e}>`);
    return;
  }
  const n = t.lookup(e);
  i instanceof Se ? Ie({ baseGrammar: n, selfGrammar: l }, r) : pt(i.ruleName, { baseGrammar: n, selfGrammar: l, repository: l.repository }, r);
  const c = t.injections(i.scopeName);
  if (c)
    for (const a of c)
      r.add(new Se(a));
}
function pt(i, e, t) {
  if (e.repository && e.repository[i]) {
    const r = e.repository[i];
    De([r], e, t);
  }
}
function Ie(i, e) {
  i.selfGrammar.patterns && Array.isArray(i.selfGrammar.patterns) && De(i.selfGrammar.patterns, { ...i, repository: i.selfGrammar.repository }, e), i.selfGrammar.injections && De(Object.values(i.selfGrammar.injections), { ...i, repository: i.selfGrammar.repository }, e);
}
function De(i, e, t) {
  for (const r of i) {
    if (t.visitedRule.has(r))
      continue;
    t.visitedRule.add(r);
    const l = r.repository ? nr({}, e.repository, r.repository) : e.repository;
    Array.isArray(r.patterns) && De(r.patterns, { ...e, repository: l }, t);
    const n = r.include;
    if (!n)
      continue;
    const c = pr(n);
    switch (c.kind) {
      case 0:
        Ie({ ...e, selfGrammar: e.baseGrammar }, t);
        break;
      case 1:
        Ie(e, t);
        break;
      case 2:
        pt(c.ruleName, { ...e, repository: l }, t);
        break;
      case 3:
      case 4:
        const a = c.scopeName === e.selfGrammar.scopeName ? e.selfGrammar : c.scopeName === e.baseGrammar.scopeName ? e.baseGrammar : void 0;
        if (a) {
          const o = { baseGrammar: e.baseGrammar, selfGrammar: a, repository: l };
          c.kind === 4 ? pt(c.ruleName, o, t) : Ie(o, t);
        } else
          c.kind === 4 ? t.add(new Tl(c.scopeName, c.ruleName)) : t.add(new Se(c.scopeName));
        break;
    }
  }
}
class Il {
  constructor() {
    p(this, "kind", 0);
  }
}
class Ml {
  constructor() {
    p(this, "kind", 1);
  }
}
class Bl {
  constructor(e) {
    p(this, "ruleName");
    p(this, "kind", 2);
    this.ruleName = e;
  }
}
class Dl {
  constructor(e) {
    p(this, "scopeName");
    p(this, "kind", 3);
    this.scopeName = e;
  }
}
class $l {
  constructor(e, t) {
    p(this, "scopeName");
    p(this, "ruleName");
    p(this, "kind", 4);
    this.scopeName = e, this.ruleName = t;
  }
}
function pr(i) {
  if (i === "$base")
    return new Il();
  if (i === "$self")
    return new Ml();
  const e = i.indexOf("#");
  if (e === -1)
    return new Dl(i);
  if (e === 0)
    return new Bl(i.substring(1));
  {
    const t = i.substring(0, e), r = i.substring(e + 1);
    return new $l(t, r);
  }
}
const Gl = /\\(\d+)/, Tt = /\\(\d+)/g, Fl = -1, fr = -2;
class Ae {
  constructor(e, t, r, l) {
    p(this, "$location");
    p(this, "id");
    p(this, "_nameIsCapturing");
    p(this, "_name");
    p(this, "_contentNameIsCapturing");
    p(this, "_contentName");
    this.$location = e, this.id = t, this._name = r || null, this._nameIsCapturing = Te.hasCaptures(this._name), this._contentName = l || null, this._contentNameIsCapturing = Te.hasCaptures(this._contentName);
  }
  get debugName() {
    const e = this.$location ? `${cr(this.$location.filename)}:${this.$location.line}` : "unknown";
    return `${this.constructor.name}#${this.id} @ ${e}`;
  }
  getName(e, t) {
    return !this._nameIsCapturing || this._name === null || e === null || t === null ? this._name : Te.replaceCaptures(this._name, e, t);
  }
  getContentName(e, t) {
    return !this._contentNameIsCapturing || this._contentName === null ? this._contentName : Te.replaceCaptures(this._contentName, e, t);
  }
}
class jl extends Ae {
  constructor(t, r, l, n, c) {
    super(t, r, l, n);
    p(this, "retokenizeCapturedWithRuleId");
    this.retokenizeCapturedWithRuleId = c;
  }
  dispose() {
  }
  collectPatterns(t, r) {
    throw new Error("Not supported!");
  }
  compile(t, r) {
    throw new Error("Not supported!");
  }
  compileAG(t, r, l, n) {
    throw new Error("Not supported!");
  }
}
class Ul extends Ae {
  constructor(t, r, l, n, c) {
    super(t, r, l, null);
    p(this, "_match");
    p(this, "captures");
    p(this, "_cachedCompiledPatterns");
    this._match = new oe(n, this.id), this.captures = c, this._cachedCompiledPatterns = null;
  }
  dispose() {
    this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
  }
  get debugMatchRegExp() {
    return `${this._match.source}`;
  }
  collectPatterns(t, r) {
    r.push(this._match);
  }
  compile(t, r) {
    return this._getCachedCompiledPatterns(t).compile(t);
  }
  compileAG(t, r, l, n) {
    return this._getCachedCompiledPatterns(t).compileAG(t, l, n);
  }
  _getCachedCompiledPatterns(t) {
    return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new ve(), this.collectPatterns(t, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
  }
}
class Pt extends Ae {
  constructor(t, r, l, n, c) {
    super(t, r, l, n);
    p(this, "hasMissingPatterns");
    p(this, "patterns");
    p(this, "_cachedCompiledPatterns");
    this.patterns = c.patterns, this.hasMissingPatterns = c.hasMissingPatterns, this._cachedCompiledPatterns = null;
  }
  dispose() {
    this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
  }
  collectPatterns(t, r) {
    for (const l of this.patterns)
      t.getRule(l).collectPatterns(t, r);
  }
  compile(t, r) {
    return this._getCachedCompiledPatterns(t).compile(t);
  }
  compileAG(t, r, l, n) {
    return this._getCachedCompiledPatterns(t).compileAG(t, l, n);
  }
  _getCachedCompiledPatterns(t) {
    return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new ve(), this.collectPatterns(t, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
  }
}
class ft extends Ae {
  constructor(t, r, l, n, c, a, o, s, u, f) {
    super(t, r, l, n);
    p(this, "_begin");
    p(this, "beginCaptures");
    p(this, "_end");
    p(this, "endHasBackReferences");
    p(this, "endCaptures");
    p(this, "applyEndPatternLast");
    p(this, "hasMissingPatterns");
    p(this, "patterns");
    p(this, "_cachedCompiledPatterns");
    this._begin = new oe(c, this.id), this.beginCaptures = a, this._end = new oe(o || "￿", -1), this.endHasBackReferences = this._end.hasBackReferences, this.endCaptures = s, this.applyEndPatternLast = u || !1, this.patterns = f.patterns, this.hasMissingPatterns = f.hasMissingPatterns, this._cachedCompiledPatterns = null;
  }
  dispose() {
    this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
  }
  get debugBeginRegExp() {
    return `${this._begin.source}`;
  }
  get debugEndRegExp() {
    return `${this._end.source}`;
  }
  getEndWithResolvedBackReferences(t, r) {
    return this._end.resolveBackReferences(t, r);
  }
  collectPatterns(t, r) {
    r.push(this._begin);
  }
  compile(t, r) {
    return this._getCachedCompiledPatterns(t, r).compile(t);
  }
  compileAG(t, r, l, n) {
    return this._getCachedCompiledPatterns(t, r).compileAG(t, l, n);
  }
  _getCachedCompiledPatterns(t, r) {
    if (!this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns = new ve();
      for (const l of this.patterns)
        t.getRule(l).collectPatterns(t, this._cachedCompiledPatterns);
      this.applyEndPatternLast ? this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end) : this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);
    }
    return this._end.hasBackReferences && (this.applyEndPatternLast ? this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, r) : this._cachedCompiledPatterns.setSource(0, r)), this._cachedCompiledPatterns;
  }
}
class $e extends Ae {
  constructor(t, r, l, n, c, a, o, s, u) {
    super(t, r, l, n);
    p(this, "_begin");
    p(this, "beginCaptures");
    p(this, "whileCaptures");
    p(this, "_while");
    p(this, "whileHasBackReferences");
    p(this, "hasMissingPatterns");
    p(this, "patterns");
    p(this, "_cachedCompiledPatterns");
    p(this, "_cachedCompiledWhilePatterns");
    this._begin = new oe(c, this.id), this.beginCaptures = a, this.whileCaptures = s, this._while = new oe(o, fr), this.whileHasBackReferences = this._while.hasBackReferences, this.patterns = u.patterns, this.hasMissingPatterns = u.hasMissingPatterns, this._cachedCompiledPatterns = null, this._cachedCompiledWhilePatterns = null;
  }
  dispose() {
    this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null), this._cachedCompiledWhilePatterns && (this._cachedCompiledWhilePatterns.dispose(), this._cachedCompiledWhilePatterns = null);
  }
  get debugBeginRegExp() {
    return `${this._begin.source}`;
  }
  get debugWhileRegExp() {
    return `${this._while.source}`;
  }
  getWhileWithResolvedBackReferences(t, r) {
    return this._while.resolveBackReferences(t, r);
  }
  collectPatterns(t, r) {
    r.push(this._begin);
  }
  compile(t, r) {
    return this._getCachedCompiledPatterns(t).compile(t);
  }
  compileAG(t, r, l, n) {
    return this._getCachedCompiledPatterns(t).compileAG(t, l, n);
  }
  _getCachedCompiledPatterns(t) {
    if (!this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns = new ve();
      for (const r of this.patterns)
        t.getRule(r).collectPatterns(t, this._cachedCompiledPatterns);
    }
    return this._cachedCompiledPatterns;
  }
  compileWhile(t, r) {
    return this._getCachedCompiledWhilePatterns(t, r).compile(t);
  }
  compileWhileAG(t, r, l, n) {
    return this._getCachedCompiledWhilePatterns(t, r).compileAG(t, l, n);
  }
  _getCachedCompiledWhilePatterns(t, r) {
    return this._cachedCompiledWhilePatterns || (this._cachedCompiledWhilePatterns = new ve(), this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while)), this._while.hasBackReferences && this._cachedCompiledWhilePatterns.setSource(0, r || "￿"), this._cachedCompiledWhilePatterns;
  }
}
class I {
  static createCaptureRule(e, t, r, l, n) {
    return e.registerRule((c) => new jl(t, c, r, l, n));
  }
  static getCompiledRuleId(e, t, r) {
    return e.id || t.registerRule((l) => {
      if (e.id = l, e.match)
        return new Ul(e.$vscodeTextmateLocation, e.id, e.name, e.match, I._compileCaptures(e.captures, t, r));
      if (typeof e.begin > "u") {
        e.repository && (r = nr({}, r, e.repository));
        let n = e.patterns;
        return typeof n > "u" && e.include && (n = [{ include: e.include }]), new Pt(e.$vscodeTextmateLocation, e.id, e.name, e.contentName, I._compilePatterns(n, t, r));
      }
      return e.while ? new $e(e.$vscodeTextmateLocation, e.id, e.name, e.contentName, e.begin, I._compileCaptures(e.beginCaptures || e.captures, t, r), e.while, I._compileCaptures(e.whileCaptures || e.captures, t, r), I._compilePatterns(e.patterns, t, r)) : new ft(e.$vscodeTextmateLocation, e.id, e.name, e.contentName, e.begin, I._compileCaptures(e.beginCaptures || e.captures, t, r), e.end, I._compileCaptures(e.endCaptures || e.captures, t, r), e.applyEndPatternLast, I._compilePatterns(e.patterns, t, r));
    }), e.id;
  }
  static _compileCaptures(e, t, r) {
    let l = [];
    if (e) {
      let n = 0;
      for (const c in e) {
        if (c === "$vscodeTextmateLocation")
          continue;
        const a = parseInt(c, 10);
        a > n && (n = a);
      }
      for (let c = 0; c <= n; c++)
        l[c] = null;
      for (const c in e) {
        if (c === "$vscodeTextmateLocation")
          continue;
        const a = parseInt(c, 10);
        let o = 0;
        e[c].patterns && (o = I.getCompiledRuleId(e[c], t, r)), l[a] = I.createCaptureRule(t, e[c].$vscodeTextmateLocation, e[c].name, e[c].contentName, o);
      }
    }
    return l;
  }
  static _compilePatterns(e, t, r) {
    let l = [];
    if (e)
      for (let n = 0, c = e.length; n < c; n++) {
        const a = e[n];
        let o = -1;
        if (a.include) {
          const s = pr(a.include);
          switch (s.kind) {
            case 0:
            case 1:
              o = I.getCompiledRuleId(r[a.include], t, r);
              break;
            case 2:
              let u = r[s.ruleName];
              u && (o = I.getCompiledRuleId(u, t, r));
              break;
            case 3:
            case 4:
              const f = s.scopeName, d = s.kind === 4 ? s.ruleName : null, h = t.getExternalGrammar(f, r);
              if (h)
                if (d) {
                  let g = h.repository[d];
                  g && (o = I.getCompiledRuleId(g, t, h.repository));
                } else
                  o = I.getCompiledRuleId(h.repository.$self, t, h.repository);
              break;
          }
        } else
          o = I.getCompiledRuleId(a, t, r);
        if (o !== -1) {
          const s = t.getRule(o);
          let u = !1;
          if ((s instanceof Pt || s instanceof ft || s instanceof $e) && s.hasMissingPatterns && s.patterns.length === 0 && (u = !0), u)
            continue;
          l.push(o);
        }
      }
    return {
      patterns: l,
      hasMissingPatterns: (e ? e.length : 0) !== l.length
    };
  }
}
class oe {
  constructor(e, t) {
    p(this, "source");
    p(this, "ruleId");
    p(this, "hasAnchor");
    p(this, "hasBackReferences");
    p(this, "_anchorCache");
    if (e) {
      const r = e.length;
      let l = 0, n = [], c = !1;
      for (let a = 0; a < r; a++)
        if (e.charAt(a) === "\\" && a + 1 < r) {
          const s = e.charAt(a + 1);
          s === "z" ? (n.push(e.substring(l, a)), n.push("$(?!\\n)(?<!\\n)"), l = a + 2) : (s === "A" || s === "G") && (c = !0), a++;
        }
      this.hasAnchor = c, l === 0 ? this.source = e : (n.push(e.substring(l, r)), this.source = n.join(""));
    } else
      this.hasAnchor = !1, this.source = e;
    this.hasAnchor ? this._anchorCache = this._buildAnchorCache() : this._anchorCache = null, this.ruleId = t, this.hasBackReferences = Gl.test(this.source);
  }
  clone() {
    return new oe(this.source, this.ruleId);
  }
  setSource(e) {
    this.source !== e && (this.source = e, this.hasAnchor && (this._anchorCache = this._buildAnchorCache()));
  }
  resolveBackReferences(e, t) {
    let r = t.map((l) => e.substring(l.start, l.end));
    return Tt.lastIndex = 0, this.source.replace(Tt, (l, n) => sr(r[parseInt(n, 10)] || ""));
  }
  _buildAnchorCache() {
    let e = [], t = [], r = [], l = [], n, c, a, o;
    for (n = 0, c = this.source.length; n < c; n++)
      a = this.source.charAt(n), e[n] = a, t[n] = a, r[n] = a, l[n] = a, a === "\\" && n + 1 < c && (o = this.source.charAt(n + 1), o === "A" ? (e[n + 1] = "￿", t[n + 1] = "￿", r[n + 1] = "A", l[n + 1] = "A") : o === "G" ? (e[n + 1] = "￿", t[n + 1] = "G", r[n + 1] = "￿", l[n + 1] = "G") : (e[n + 1] = o, t[n + 1] = o, r[n + 1] = o, l[n + 1] = o), n++);
    return {
      A0_G0: e.join(""),
      A0_G1: t.join(""),
      A1_G0: r.join(""),
      A1_G1: l.join("")
    };
  }
  resolveAnchors(e, t) {
    return !this.hasAnchor || !this._anchorCache ? this.source : e ? t ? this._anchorCache.A1_G1 : this._anchorCache.A1_G0 : t ? this._anchorCache.A0_G1 : this._anchorCache.A0_G0;
  }
}
class ve {
  constructor() {
    p(this, "_items");
    p(this, "_hasAnchors");
    p(this, "_cached");
    p(this, "_anchorCache");
    this._items = [], this._hasAnchors = !1, this._cached = null, this._anchorCache = {
      A0_G0: null,
      A0_G1: null,
      A1_G0: null,
      A1_G1: null
    };
  }
  dispose() {
    this._disposeCaches();
  }
  _disposeCaches() {
    this._cached && (this._cached.dispose(), this._cached = null), this._anchorCache.A0_G0 && (this._anchorCache.A0_G0.dispose(), this._anchorCache.A0_G0 = null), this._anchorCache.A0_G1 && (this._anchorCache.A0_G1.dispose(), this._anchorCache.A0_G1 = null), this._anchorCache.A1_G0 && (this._anchorCache.A1_G0.dispose(), this._anchorCache.A1_G0 = null), this._anchorCache.A1_G1 && (this._anchorCache.A1_G1.dispose(), this._anchorCache.A1_G1 = null);
  }
  push(e) {
    this._items.push(e), this._hasAnchors = this._hasAnchors || e.hasAnchor;
  }
  unshift(e) {
    this._items.unshift(e), this._hasAnchors = this._hasAnchors || e.hasAnchor;
  }
  length() {
    return this._items.length;
  }
  setSource(e, t) {
    this._items[e].source !== t && (this._disposeCaches(), this._items[e].setSource(t));
  }
  compile(e) {
    if (!this._cached) {
      let t = this._items.map((r) => r.source);
      this._cached = new Et(e, t, this._items.map((r) => r.ruleId));
    }
    return this._cached;
  }
  compileAG(e, t, r) {
    return this._hasAnchors ? t ? r ? (this._anchorCache.A1_G1 || (this._anchorCache.A1_G1 = this._resolveAnchors(e, t, r)), this._anchorCache.A1_G1) : (this._anchorCache.A1_G0 || (this._anchorCache.A1_G0 = this._resolveAnchors(e, t, r)), this._anchorCache.A1_G0) : r ? (this._anchorCache.A0_G1 || (this._anchorCache.A0_G1 = this._resolveAnchors(e, t, r)), this._anchorCache.A0_G1) : (this._anchorCache.A0_G0 || (this._anchorCache.A0_G0 = this._resolveAnchors(e, t, r)), this._anchorCache.A0_G0) : this.compile(e);
  }
  _resolveAnchors(e, t, r) {
    let l = this._items.map((n) => n.resolveAnchors(t, r));
    return new Et(e, l, this._items.map((n) => n.ruleId));
  }
}
class Et {
  constructor(e, t, r) {
    p(this, "regExps");
    p(this, "rules");
    p(this, "scanner");
    this.regExps = t, this.rules = r, this.scanner = e.createOnigScanner(t);
  }
  dispose() {
    typeof this.scanner.dispose == "function" && this.scanner.dispose();
  }
  toString() {
    const e = [];
    for (let t = 0, r = this.rules.length; t < r; t++)
      e.push("   - " + this.rules[t] + ": " + this.regExps[t]);
    return e.join(`
`);
  }
  findNextMatchSync(e, t, r) {
    const l = this.scanner.findNextMatchSync(e, t, r);
    return l ? {
      ruleId: this.rules[l.index],
      captureIndices: l.captureIndices
    } : null;
  }
}
class Ge {
  constructor(e, t, r) {
    p(this, "_colorMap");
    p(this, "_defaults");
    p(this, "_root");
    p(this, "_cachedMatchRoot", new ur((e) => this._root.match(e)));
    this._colorMap = e, this._defaults = t, this._root = r;
  }
  static createFromRawTheme(e, t) {
    return this.createFromParsedTheme(Wl(e), t);
  }
  static createFromParsedTheme(e, t) {
    return Kl(e, t);
  }
  getColorMap() {
    return this._colorMap.getColorMap();
  }
  getDefaults() {
    return this._defaults;
  }
  match(e) {
    if (e === null)
      return this._defaults;
    const t = e.scopeName, l = this._cachedMatchRoot.get(t).find((n) => zl(e.parent, n.parentScopes));
    return l ? new dr(l.fontStyle, l.foreground, l.background) : null;
  }
}
class ce {
  constructor(e, t) {
    p(this, "parent");
    p(this, "scopeName");
    this.parent = e, this.scopeName = t;
  }
  static push(e, t) {
    for (const r of t)
      e = new ce(e, r);
    return e;
  }
  static from(...e) {
    let t = null;
    for (let r = 0; r < e.length; r++)
      t = new ce(t, e[r]);
    return t;
  }
  push(e) {
    return new ce(this, e);
  }
  getSegments() {
    let e = this;
    const t = [];
    for (; e; )
      t.push(e.scopeName), e = e.parent;
    return t.reverse(), t;
  }
  toString() {
    return this.getSegments().join(" ");
  }
  extends(e) {
    return this === e ? !0 : this.parent === null ? !1 : this.parent.extends(e);
  }
  getExtensionIfDefined(e) {
    const t = [];
    let r = this;
    for (; r && r !== e; )
      t.push(r.scopeName), r = r.parent;
    return r === e ? t.reverse() : void 0;
  }
}
function zl(i, e) {
  if (e === null)
    return !0;
  let t = 0, r = e[t];
  for (; i; ) {
    if (Hl(i.scopeName, r)) {
      if (t++, t === e.length)
        return !0;
      r = e[t];
    }
    i = i.parent;
  }
  return !1;
}
function Hl(i, e) {
  return e === i || i.startsWith(e) && i[e.length] === ".";
}
class dr {
  constructor(e, t, r) {
    p(this, "fontStyle");
    p(this, "foregroundId");
    p(this, "backgroundId");
    this.fontStyle = e, this.foregroundId = t, this.backgroundId = r;
  }
}
function Wl(i) {
  if (!i)
    return [];
  if (!i.settings || !Array.isArray(i.settings))
    return [];
  let e = i.settings, t = [], r = 0;
  for (let l = 0, n = e.length; l < n; l++) {
    let c = e[l];
    if (!c.settings)
      continue;
    let a;
    if (typeof c.scope == "string") {
      let f = c.scope;
      f = f.replace(/^[,]+/, ""), f = f.replace(/[,]+$/, ""), a = f.split(",");
    } else Array.isArray(c.scope) ? a = c.scope : a = [""];
    let o = -1;
    if (typeof c.settings.fontStyle == "string") {
      o = 0;
      let f = c.settings.fontStyle.split(" ");
      for (let d = 0, h = f.length; d < h; d++)
        switch (f[d]) {
          case "italic":
            o = o | 1;
            break;
          case "bold":
            o = o | 2;
            break;
          case "underline":
            o = o | 4;
            break;
          case "strikethrough":
            o = o | 8;
            break;
        }
    }
    let s = null;
    typeof c.settings.foreground == "string" && Lt(c.settings.foreground) && (s = c.settings.foreground);
    let u = null;
    typeof c.settings.background == "string" && Lt(c.settings.background) && (u = c.settings.background);
    for (let f = 0, d = a.length; f < d; f++) {
      let g = a[f].trim().split(" "), m = g[g.length - 1], C = null;
      g.length > 1 && (C = g.slice(0, g.length - 1), C.reverse()), t[r++] = new ql(m, C, l, o, s, u);
    }
  }
  return t;
}
class ql {
  constructor(e, t, r, l, n, c) {
    p(this, "scope");
    p(this, "parentScopes");
    p(this, "index");
    p(this, "fontStyle");
    p(this, "foreground");
    p(this, "background");
    this.scope = e, this.parentScopes = t, this.index = r, this.fontStyle = l, this.foreground = n, this.background = c;
  }
}
function Kl(i, e) {
  i.sort((o, s) => {
    let u = or(o.scope, s.scope);
    return u !== 0 || (u = ar(o.parentScopes, s.parentScopes), u !== 0) ? u : o.index - s.index;
  });
  let t = 0, r = "#000000", l = "#ffffff";
  for (; i.length >= 1 && i[0].scope === ""; ) {
    let o = i.shift();
    o.fontStyle !== -1 && (t = o.fontStyle), o.foreground !== null && (r = o.foreground), o.background !== null && (l = o.background);
  }
  let n = new Vl(e), c = new dr(t, n.getId(r), n.getId(l)), a = new be(new ke(0, null, -1, 0, 0), []);
  for (let o = 0, s = i.length; o < s; o++) {
    let u = i[o];
    a.insert(0, u.scope, u.parentScopes, u.fontStyle, n.getId(u.foreground), n.getId(u.background));
  }
  return new Ge(n, c, a);
}
class Vl {
  constructor(e) {
    p(this, "_isFrozen");
    p(this, "_lastColorId");
    p(this, "_id2color");
    p(this, "_color2id");
    if (this._lastColorId = 0, this._id2color = [], this._color2id = /* @__PURE__ */ Object.create(null), Array.isArray(e)) {
      this._isFrozen = !0;
      for (let t = 0, r = e.length; t < r; t++)
        this._color2id[e[t]] = t, this._id2color[t] = e[t];
    } else
      this._isFrozen = !1;
  }
  getId(e) {
    if (e === null)
      return 0;
    e = e.toUpperCase();
    let t = this._color2id[e];
    if (t)
      return t;
    if (this._isFrozen)
      throw new Error(`Missing color in color map - ${e}`);
    return t = ++this._lastColorId, this._color2id[e] = t, this._id2color[t] = e, t;
  }
  getColorMap() {
    return this._id2color.slice(0);
  }
}
class ke {
  constructor(e, t, r, l, n) {
    p(this, "scopeDepth");
    p(this, "parentScopes");
    p(this, "fontStyle");
    p(this, "foreground");
    p(this, "background");
    this.scopeDepth = e, this.parentScopes = t, this.fontStyle = r, this.foreground = l, this.background = n;
  }
  clone() {
    return new ke(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);
  }
  static cloneArr(e) {
    let t = [];
    for (let r = 0, l = e.length; r < l; r++)
      t[r] = e[r].clone();
    return t;
  }
  acceptOverwrite(e, t, r, l) {
    this.scopeDepth > e ? console.log("how did this happen?") : this.scopeDepth = e, t !== -1 && (this.fontStyle = t), r !== 0 && (this.foreground = r), l !== 0 && (this.background = l);
  }
}
class be {
  constructor(e, t = [], r = {}) {
    p(this, "_mainRule");
    p(this, "_children");
    p(this, "_rulesWithParentScopes");
    this._mainRule = e, this._children = r, this._rulesWithParentScopes = t;
  }
  static _sortBySpecificity(e) {
    return e.length === 1 || e.sort(this._cmpBySpecificity), e;
  }
  static _cmpBySpecificity(e, t) {
    if (e.scopeDepth === t.scopeDepth) {
      const r = e.parentScopes, l = t.parentScopes;
      let n = r === null ? 0 : r.length, c = l === null ? 0 : l.length;
      if (n === c)
        for (let a = 0; a < n; a++) {
          const o = r[a].length, s = l[a].length;
          if (o !== s)
            return s - o;
        }
      return c - n;
    }
    return t.scopeDepth - e.scopeDepth;
  }
  match(e) {
    if (e === "")
      return be._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
    let t = e.indexOf("."), r, l;
    return t === -1 ? (r = e, l = "") : (r = e.substring(0, t), l = e.substring(t + 1)), this._children.hasOwnProperty(r) ? this._children[r].match(l) : be._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
  }
  insert(e, t, r, l, n, c) {
    if (t === "") {
      this._doInsertHere(e, r, l, n, c);
      return;
    }
    let a = t.indexOf("."), o, s;
    a === -1 ? (o = t, s = "") : (o = t.substring(0, a), s = t.substring(a + 1));
    let u;
    this._children.hasOwnProperty(o) ? u = this._children[o] : (u = new be(this._mainRule.clone(), ke.cloneArr(this._rulesWithParentScopes)), this._children[o] = u), u.insert(e + 1, s, r, l, n, c);
  }
  _doInsertHere(e, t, r, l, n) {
    if (t === null) {
      this._mainRule.acceptOverwrite(e, r, l, n);
      return;
    }
    for (let c = 0, a = this._rulesWithParentScopes.length; c < a; c++) {
      let o = this._rulesWithParentScopes[c];
      if (ar(o.parentScopes, t) === 0) {
        o.acceptOverwrite(e, r, l, n);
        return;
      }
    }
    r === -1 && (r = this._mainRule.fontStyle), l === 0 && (l = this._mainRule.foreground), n === 0 && (n = this._mainRule.background), this._rulesWithParentScopes.push(new ke(e, t, r, l, n));
  }
}
class et {
  constructor(e, t) {
    p(this, "languageId");
    p(this, "tokenType");
    this.languageId = e, this.tokenType = t;
  }
}
const fe = class fe {
  constructor(e, t) {
    p(this, "_defaultAttributes");
    p(this, "_embeddedLanguagesMatcher");
    p(this, "_getBasicScopeAttributes", new ur((e) => {
      const t = this._scopeToLanguage(e), r = this._toStandardTokenType(e);
      return new et(t, r);
    }));
    this._defaultAttributes = new et(
      e,
      8
      /* OptionalStandardTokenType.NotSet */
    ), this._embeddedLanguagesMatcher = new Yl(Object.entries(t || {}));
  }
  getDefaultAttributes() {
    return this._defaultAttributes;
  }
  getBasicScopeAttributes(e) {
    return e === null ? fe._NULL_SCOPE_METADATA : this._getBasicScopeAttributes.get(e);
  }
  /**
   * Given a produced TM scope, return the language that token describes or null if unknown.
   * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null
   */
  _scopeToLanguage(e) {
    return this._embeddedLanguagesMatcher.match(e) || 0;
  }
  _toStandardTokenType(e) {
    const t = e.match(fe.STANDARD_TOKEN_TYPE_REGEXP);
    if (!t)
      return 8;
    switch (t[1]) {
      case "comment":
        return 1;
      case "string":
        return 2;
      case "regex":
        return 3;
      case "meta.embedded":
        return 0;
    }
    throw new Error("Unexpected match for standard token type!");
  }
};
p(fe, "_NULL_SCOPE_METADATA", new et(0, 0)), p(fe, "STANDARD_TOKEN_TYPE_REGEXP", /\b(comment|string|regex|meta\.embedded)\b/);
let dt = fe;
class Yl {
  constructor(e) {
    p(this, "values");
    p(this, "scopesRegExp");
    if (e.length === 0)
      this.values = null, this.scopesRegExp = null;
    else {
      this.values = new Map(e);
      const t = e.map(([r, l]) => sr(r));
      t.sort(), t.reverse(), this.scopesRegExp = new RegExp(`^((${t.join(")|(")}))($|\\.)`, "");
    }
  }
  match(e) {
    if (!this.scopesRegExp)
      return;
    const t = e.match(this.scopesRegExp);
    if (t)
      return this.values.get(t[1]);
  }
}
class Ot {
  constructor(e, t) {
    p(this, "stack");
    p(this, "stoppedEarly");
    this.stack = e, this.stoppedEarly = t;
  }
}
function mr(i, e, t, r, l, n, c, a) {
  const o = e.content.length;
  let s = !1, u = -1;
  if (c) {
    const h = Xl(i, e, t, r, l, n);
    l = h.stack, r = h.linePos, t = h.isFirstLine, u = h.anchorPosition;
  }
  const f = Date.now();
  for (; !s; ) {
    if (a !== 0 && Date.now() - f > a)
      return new Ot(l, !0);
    d();
  }
  return new Ot(l, !1);
  function d() {
    const h = Jl(i, e, t, r, l, u);
    if (!h) {
      n.produce(l, o), s = !0;
      return;
    }
    const g = h.captureIndices, m = h.matchedRuleId, C = g && g.length > 0 ? g[0].end > r : !1;
    if (m === Fl) {
      const w = l.getRule(i);
      n.produce(l, g[0].start), l = l.withContentNameScopesList(l.nameScopesList), _e(i, e, t, l, n, w.endCaptures, g), n.produce(l, g[0].end);
      const S = l;
      if (l = l.parent, u = S.getAnchorPos(), !C && S.getEnterPos() === r) {
        l = S, n.produce(l, o), s = !0;
        return;
      }
    } else {
      const w = i.getRule(m);
      n.produce(l, g[0].start);
      const S = l, x = w.getName(e.content, g), b = l.contentNameScopesList.pushAttributed(x, i);
      if (l = l.push(m, r, u, g[0].end === o, null, b, b), w instanceof ft) {
        const _ = w;
        _e(i, e, t, l, n, _.beginCaptures, g), n.produce(l, g[0].end), u = g[0].end;
        const k = _.getContentName(e.content, g), j = b.pushAttributed(k, i);
        if (l = l.withContentNameScopesList(j), _.endHasBackReferences && (l = l.withEndRule(_.getEndWithResolvedBackReferences(e.content, g))), !C && S.hasSameRuleAs(l)) {
          l = l.pop(), n.produce(l, o), s = !0;
          return;
        }
      } else if (w instanceof $e) {
        const _ = w;
        _e(i, e, t, l, n, _.beginCaptures, g), n.produce(l, g[0].end), u = g[0].end;
        const k = _.getContentName(e.content, g), j = b.pushAttributed(k, i);
        if (l = l.withContentNameScopesList(j), _.whileHasBackReferences && (l = l.withEndRule(_.getWhileWithResolvedBackReferences(e.content, g))), !C && S.hasSameRuleAs(l)) {
          l = l.pop(), n.produce(l, o), s = !0;
          return;
        }
      } else if (_e(i, e, t, l, n, w.captures, g), n.produce(l, g[0].end), l = l.pop(), !C) {
        l = l.safePop(), n.produce(l, o), s = !0;
        return;
      }
    }
    g[0].end > r && (r = g[0].end, t = !1);
  }
}
function Xl(i, e, t, r, l, n) {
  let c = l.beginRuleCapturedEOL ? 0 : -1;
  const a = [];
  for (let o = l; o; o = o.pop()) {
    const s = o.getRule(i);
    s instanceof $e && a.push({
      rule: s,
      stack: o
    });
  }
  for (let o = a.pop(); o; o = a.pop()) {
    const { ruleScanner: s, findOptions: u } = en(o.rule, i, o.stack.endRule, t, r === c), f = s.findNextMatchSync(e, r, u);
    if (f) {
      if (f.ruleId !== fr) {
        l = o.stack.pop();
        break;
      }
      f.captureIndices && f.captureIndices.length && (n.produce(o.stack, f.captureIndices[0].start), _e(i, e, t, o.stack, n, o.rule.whileCaptures, f.captureIndices), n.produce(o.stack, f.captureIndices[0].end), c = f.captureIndices[0].end, f.captureIndices[0].end > r && (r = f.captureIndices[0].end, t = !1));
    } else {
      l = o.stack.pop();
      break;
    }
  }
  return { stack: l, linePos: r, anchorPosition: c, isFirstLine: t };
}
function Jl(i, e, t, r, l, n) {
  const c = Ql(i, e, t, r, l, n), a = i.getInjections();
  if (a.length === 0)
    return c;
  const o = Zl(a, i, e, t, r, l, n);
  if (!o)
    return c;
  if (!c)
    return o;
  const s = c.captureIndices[0].start, u = o.captureIndices[0].start;
  return u < s || o.priorityMatch && u === s ? o : c;
}
function Ql(i, e, t, r, l, n) {
  const c = l.getRule(i), { ruleScanner: a, findOptions: o } = hr(c, i, l.endRule, t, r === n), s = a.findNextMatchSync(e, r, o);
  return s ? {
    captureIndices: s.captureIndices,
    matchedRuleId: s.ruleId
  } : null;
}
function Zl(i, e, t, r, l, n, c) {
  let a = Number.MAX_VALUE, o = null, s, u = 0;
  const f = n.contentNameScopesList.getScopeNames();
  for (let d = 0, h = i.length; d < h; d++) {
    const g = i[d];
    if (!g.matcher(f))
      continue;
    const m = e.getRule(g.ruleId), { ruleScanner: C, findOptions: w } = hr(m, e, null, r, l === c), S = C.findNextMatchSync(t, l, w);
    if (!S)
      continue;
    const x = S.captureIndices[0].start;
    if (!(x >= a) && (a = x, o = S.captureIndices, s = S.ruleId, u = g.priority, a === l))
      break;
  }
  return o ? {
    priorityMatch: u === -1,
    captureIndices: o,
    matchedRuleId: s
  } : null;
}
function hr(i, e, t, r, l) {
  return {
    ruleScanner: i.compileAG(e, t, r, l),
    findOptions: 0
    /* FindOption.None */
  };
}
function en(i, e, t, r, l) {
  return {
    ruleScanner: i.compileWhileAG(e, t, r, l),
    findOptions: 0
    /* FindOption.None */
  };
}
function _e(i, e, t, r, l, n, c) {
  if (n.length === 0)
    return;
  const a = e.content, o = Math.min(n.length, c.length), s = [], u = c[0].end;
  for (let f = 0; f < o; f++) {
    const d = n[f];
    if (d === null)
      continue;
    const h = c[f];
    if (h.length === 0)
      continue;
    if (h.start > u)
      break;
    for (; s.length > 0 && s[s.length - 1].endPos <= h.start; )
      l.produceFromScopes(s[s.length - 1].scopes, s[s.length - 1].endPos), s.pop();
    if (s.length > 0 ? l.produceFromScopes(s[s.length - 1].scopes, h.start) : l.produce(r, h.start), d.retokenizeCapturedWithRuleId) {
      const m = d.getName(a, c), C = r.contentNameScopesList.pushAttributed(m, i), w = d.getContentName(a, c), S = C.pushAttributed(w, i), x = r.push(d.retokenizeCapturedWithRuleId, h.start, -1, !1, null, C, S), b = i.createOnigString(a.substring(0, h.end));
      mr(
        i,
        b,
        t && h.start === 0,
        h.start,
        x,
        l,
        !1,
        /* no time limit */
        0
      ), lr(b);
      continue;
    }
    const g = d.getName(a, c);
    if (g !== null) {
      const C = (s.length > 0 ? s[s.length - 1].scopes : r.contentNameScopesList).pushAttributed(g, i);
      s.push(new tn(C, h.end));
    }
  }
  for (; s.length > 0; )
    l.produceFromScopes(s[s.length - 1].scopes, s[s.length - 1].endPos), s.pop();
}
class tn {
  constructor(e, t) {
    p(this, "scopes");
    p(this, "endPos");
    this.scopes = e, this.endPos = t;
  }
}
function rn(i, e, t, r, l, n, c, a) {
  return new nn(i, e, t, r, l, n, c, a);
}
function It(i, e, t, r, l) {
  const n = Be(e, Fe), c = I.getCompiledRuleId(t, r, l.repository);
  for (const a of n)
    i.push({
      debugSelector: e,
      matcher: a.matcher,
      ruleId: c,
      grammar: l,
      priority: a.priority
    });
}
function Fe(i, e) {
  if (e.length < i.length)
    return !1;
  let t = 0;
  return i.every((r) => {
    for (let l = t; l < e.length; l++)
      if (ln(e[l], r))
        return t = l + 1, !0;
    return !1;
  });
}
function ln(i, e) {
  if (!i)
    return !1;
  if (i === e)
    return !0;
  const t = e.length;
  return i.length > t && i.substr(0, t) === e && i[t] === ".";
}
class nn {
  constructor(e, t, r, l, n, c, a, o) {
    p(this, "_rootScopeName");
    p(this, "balancedBracketSelectors");
    p(this, "_onigLib");
    p(this, "_rootId");
    p(this, "_lastRuleId");
    p(this, "_ruleId2desc");
    p(this, "_includedGrammars");
    p(this, "_grammarRepository");
    p(this, "_grammar");
    p(this, "_injections");
    p(this, "_basicScopeAttributesProvider");
    p(this, "_tokenTypeMatchers");
    if (this._rootScopeName = e, this.balancedBracketSelectors = c, this._onigLib = o, this._basicScopeAttributesProvider = new dt(r, l), this._rootId = -1, this._lastRuleId = 0, this._ruleId2desc = [null], this._includedGrammars = {}, this._grammarRepository = a, this._grammar = Mt(t, null), this._injections = null, this._tokenTypeMatchers = [], n)
      for (const s of Object.keys(n)) {
        const u = Be(s, Fe);
        for (const f of u)
          this._tokenTypeMatchers.push({
            matcher: f.matcher,
            type: n[s]
          });
      }
  }
  get themeProvider() {
    return this._grammarRepository;
  }
  dispose() {
    for (const e of this._ruleId2desc)
      e && e.dispose();
  }
  createOnigScanner(e) {
    return this._onigLib.createOnigScanner(e);
  }
  createOnigString(e) {
    return this._onigLib.createOnigString(e);
  }
  getMetadataForScope(e) {
    return this._basicScopeAttributesProvider.getBasicScopeAttributes(e);
  }
  _collectInjections() {
    const e = {
      lookup: (n) => n === this._rootScopeName ? this._grammar : this.getExternalGrammar(n),
      injections: (n) => this._grammarRepository.injections(n)
    }, t = [], r = this._rootScopeName, l = e.lookup(r);
    if (l) {
      const n = l.injections;
      if (n)
        for (let a in n)
          It(t, a, n[a], this, l);
      const c = this._grammarRepository.injections(r);
      c && c.forEach((a) => {
        const o = this.getExternalGrammar(a);
        if (o) {
          const s = o.injectionSelector;
          s && It(t, s, o, this, o);
        }
      });
    }
    return t.sort((n, c) => n.priority - c.priority), t;
  }
  getInjections() {
    return this._injections === null && (this._injections = this._collectInjections()), this._injections;
  }
  registerRule(e) {
    const t = ++this._lastRuleId, r = e(t);
    return this._ruleId2desc[t] = r, r;
  }
  getRule(e) {
    return this._ruleId2desc[e];
  }
  getExternalGrammar(e, t) {
    if (this._includedGrammars[e])
      return this._includedGrammars[e];
    if (this._grammarRepository) {
      const r = this._grammarRepository.lookup(e);
      if (r)
        return this._includedGrammars[e] = Mt(r, t && t.$base), this._includedGrammars[e];
    }
  }
  tokenizeLine(e, t, r = 0) {
    const l = this._tokenize(e, t, !1, r);
    return {
      tokens: l.lineTokens.getResult(l.ruleStack, l.lineLength),
      ruleStack: l.ruleStack,
      stoppedEarly: l.stoppedEarly
    };
  }
  tokenizeLine2(e, t, r = 0) {
    const l = this._tokenize(e, t, !0, r);
    return {
      tokens: l.lineTokens.getBinaryResult(l.ruleStack, l.lineLength),
      ruleStack: l.ruleStack,
      stoppedEarly: l.stoppedEarly
    };
  }
  _tokenize(e, t, r, l) {
    this._rootId === -1 && (this._rootId = I.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository), this.getInjections());
    let n;
    if (!t || t === Ne.NULL) {
      n = !0;
      const u = this._basicScopeAttributesProvider.getDefaultAttributes(), f = this.themeProvider.getDefaults(), d = ge.set(0, u.languageId, u.tokenType, null, f.fontStyle, f.foregroundId, f.backgroundId), h = this.getRule(this._rootId).getName(null, null);
      let g;
      h ? g = $.createRootAndLookUpScopeName(h, d, this) : g = $.createRoot("unknown", d), t = new Ne(null, this._rootId, -1, -1, !1, null, g, g);
    } else
      n = !1, t.reset();
    e = e + `
`;
    const c = this.createOnigString(e), a = c.content.length, o = new on(r, e, this._tokenTypeMatchers, this.balancedBracketSelectors), s = mr(this, c, n, 0, t, o, !0, l);
    return lr(c), {
      lineLength: a,
      lineTokens: o,
      ruleStack: s.stack,
      stoppedEarly: s.stoppedEarly
    };
  }
}
function Mt(i, e) {
  return i = Rl(i), i.repository = i.repository || {}, i.repository.$self = {
    $vscodeTextmateLocation: i.$vscodeTextmateLocation,
    patterns: i.patterns,
    name: i.scopeName
  }, i.repository.$base = e || i.repository.$self, i;
}
class $ {
  /**
   * Invariant:
   * ```
   * if (parent && !scopePath.extends(parent.scopePath)) {
   * 	throw new Error();
   * }
   * ```
   */
  constructor(e, t, r) {
    p(this, "parent");
    p(this, "scopePath");
    p(this, "tokenAttributes");
    this.parent = e, this.scopePath = t, this.tokenAttributes = r;
  }
  static fromExtension(e, t) {
    let r = e, l = (e == null ? void 0 : e.scopePath) ?? null;
    for (const n of t)
      l = ce.push(l, n.scopeNames), r = new $(r, l, n.encodedTokenAttributes);
    return r;
  }
  static createRoot(e, t) {
    return new $(null, new ce(null, e), t);
  }
  static createRootAndLookUpScopeName(e, t, r) {
    const l = r.getMetadataForScope(e), n = new ce(null, e), c = r.themeProvider.themeMatch(n), a = $.mergeAttributes(t, l, c);
    return new $(null, n, a);
  }
  get scopeName() {
    return this.scopePath.scopeName;
  }
  toString() {
    return this.getScopeNames().join(" ");
  }
  equals(e) {
    return $.equals(this, e);
  }
  static equals(e, t) {
    do {
      if (e === t || !e && !t)
        return !0;
      if (!e || !t || e.scopeName !== t.scopeName || e.tokenAttributes !== t.tokenAttributes)
        return !1;
      e = e.parent, t = t.parent;
    } while (!0);
  }
  static mergeAttributes(e, t, r) {
    let l = -1, n = 0, c = 0;
    return r !== null && (l = r.fontStyle, n = r.foregroundId, c = r.backgroundId), ge.set(e, t.languageId, t.tokenType, null, l, n, c);
  }
  pushAttributed(e, t) {
    if (e === null)
      return this;
    if (e.indexOf(" ") === -1)
      return $._pushAttributed(this, e, t);
    const r = e.split(/ /g);
    let l = this;
    for (const n of r)
      l = $._pushAttributed(l, n, t);
    return l;
  }
  static _pushAttributed(e, t, r) {
    const l = r.getMetadataForScope(t), n = e.scopePath.push(t), c = r.themeProvider.themeMatch(n), a = $.mergeAttributes(e.tokenAttributes, l, c);
    return new $(e, n, a);
  }
  getScopeNames() {
    return this.scopePath.getSegments();
  }
  getExtensionIfDefined(e) {
    var l;
    const t = [];
    let r = this;
    for (; r && r !== e; )
      t.push({
        encodedTokenAttributes: r.tokenAttributes,
        scopeNames: r.scopePath.getExtensionIfDefined(((l = r.parent) == null ? void 0 : l.scopePath) ?? null)
      }), r = r.parent;
    return r === e ? t.reverse() : void 0;
  }
}
const J = class J {
  /**
   * Invariant:
   * ```
   * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {
   * 	throw new Error();
   * }
   * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {
   * 	throw new Error();
   * }
   * ```
   */
  constructor(e, t, r, l, n, c, a, o) {
    p(this, "parent");
    p(this, "ruleId");
    p(this, "beginRuleCapturedEOL");
    p(this, "endRule");
    p(this, "nameScopesList");
    p(this, "contentNameScopesList");
    p(this, "_stackElementBrand");
    /**
     * The position on the current line where this state was pushed.
     * This is relevant only while tokenizing a line, to detect endless loops.
     * Its value is meaningless across lines.
     */
    p(this, "_enterPos");
    /**
     * The captured anchor position when this stack element was pushed.
     * This is relevant only while tokenizing a line, to restore the anchor position when popping.
     * Its value is meaningless across lines.
     */
    p(this, "_anchorPos");
    /**
     * The depth of the stack.
     */
    p(this, "depth");
    this.parent = e, this.ruleId = t, this.beginRuleCapturedEOL = n, this.endRule = c, this.nameScopesList = a, this.contentNameScopesList = o, this.depth = this.parent ? this.parent.depth + 1 : 1, this._enterPos = r, this._anchorPos = l;
  }
  equals(e) {
    return e === null ? !1 : J._equals(this, e);
  }
  static _equals(e, t) {
    return e === t ? !0 : this._structuralEquals(e, t) ? $.equals(e.contentNameScopesList, t.contentNameScopesList) : !1;
  }
  /**
   * A structural equals check. Does not take into account `scopes`.
   */
  static _structuralEquals(e, t) {
    do {
      if (e === t || !e && !t)
        return !0;
      if (!e || !t || e.depth !== t.depth || e.ruleId !== t.ruleId || e.endRule !== t.endRule)
        return !1;
      e = e.parent, t = t.parent;
    } while (!0);
  }
  clone() {
    return this;
  }
  static _reset(e) {
    for (; e; )
      e._enterPos = -1, e._anchorPos = -1, e = e.parent;
  }
  reset() {
    J._reset(this);
  }
  pop() {
    return this.parent;
  }
  safePop() {
    return this.parent ? this.parent : this;
  }
  push(e, t, r, l, n, c, a) {
    return new J(this, e, t, r, l, n, c, a);
  }
  getEnterPos() {
    return this._enterPos;
  }
  getAnchorPos() {
    return this._anchorPos;
  }
  getRule(e) {
    return e.getRule(this.ruleId);
  }
  toString() {
    const e = [];
    return this._writeString(e, 0), "[" + e.join(",") + "]";
  }
  _writeString(e, t) {
    var r, l;
    return this.parent && (t = this.parent._writeString(e, t)), e[t++] = `(${this.ruleId}, ${(r = this.nameScopesList) == null ? void 0 : r.toString()}, ${(l = this.contentNameScopesList) == null ? void 0 : l.toString()})`, t;
  }
  withContentNameScopesList(e) {
    return this.contentNameScopesList === e ? this : this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, e);
  }
  withEndRule(e) {
    return this.endRule === e ? this : new J(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, e, this.nameScopesList, this.contentNameScopesList);
  }
  // Used to warn of endless loops
  hasSameRuleAs(e) {
    let t = this;
    for (; t && t._enterPos === e._enterPos; ) {
      if (t.ruleId === e.ruleId)
        return !0;
      t = t.parent;
    }
    return !1;
  }
  toStateStackFrame() {
    var e, t, r;
    return {
      ruleId: this.ruleId,
      beginRuleCapturedEOL: this.beginRuleCapturedEOL,
      endRule: this.endRule,
      nameScopesList: ((t = this.nameScopesList) == null ? void 0 : t.getExtensionIfDefined(((e = this.parent) == null ? void 0 : e.nameScopesList) ?? null)) ?? [],
      contentNameScopesList: ((r = this.contentNameScopesList) == null ? void 0 : r.getExtensionIfDefined(this.nameScopesList)) ?? []
    };
  }
  static pushFrame(e, t) {
    const r = $.fromExtension((e == null ? void 0 : e.nameScopesList) ?? null, t.nameScopesList);
    return new J(e, t.ruleId, t.enterPos ?? -1, t.anchorPos ?? -1, t.beginRuleCapturedEOL, t.endRule, r, $.fromExtension(r, t.contentNameScopesList));
  }
};
// TODO remove me
p(J, "NULL", new J(null, 0, 0, 0, !1, null, null, null));
let Ne = J;
class cn {
  constructor(e, t) {
    p(this, "balancedBracketScopes");
    p(this, "unbalancedBracketScopes");
    p(this, "allowAny", !1);
    this.balancedBracketScopes = e.flatMap((r) => r === "*" ? (this.allowAny = !0, []) : Be(r, Fe).map((l) => l.matcher)), this.unbalancedBracketScopes = t.flatMap((r) => Be(r, Fe).map((l) => l.matcher));
  }
  get matchesAlways() {
    return this.allowAny && this.unbalancedBracketScopes.length === 0;
  }
  get matchesNever() {
    return this.balancedBracketScopes.length === 0 && !this.allowAny;
  }
  match(e) {
    for (const t of this.unbalancedBracketScopes)
      if (t(e))
        return !1;
    for (const t of this.balancedBracketScopes)
      if (t(e))
        return !0;
    return this.allowAny;
  }
}
class on {
  constructor(e, t, r, l) {
    p(this, "balancedBracketSelectors");
    p(this, "_emitBinaryTokens");
    /**
     * defined only if `false`.
     */
    p(this, "_lineText");
    /**
     * used only if `_emitBinaryTokens` is false.
     */
    p(this, "_tokens");
    /**
     * used only if `_emitBinaryTokens` is true.
     */
    p(this, "_binaryTokens");
    p(this, "_lastTokenEndIndex");
    p(this, "_tokenTypeOverrides");
    this.balancedBracketSelectors = l, this._emitBinaryTokens = e, this._tokenTypeOverrides = r, this._lineText = null, this._tokens = [], this._binaryTokens = [], this._lastTokenEndIndex = 0;
  }
  produce(e, t) {
    this.produceFromScopes(e.contentNameScopesList, t);
  }
  produceFromScopes(e, t) {
    var l;
    if (this._lastTokenEndIndex >= t)
      return;
    if (this._emitBinaryTokens) {
      let n = (e == null ? void 0 : e.tokenAttributes) ?? 0, c = !1;
      if ((l = this.balancedBracketSelectors) != null && l.matchesAlways && (c = !0), this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {
        const a = (e == null ? void 0 : e.getScopeNames()) ?? [];
        for (const o of this._tokenTypeOverrides)
          o.matcher(a) && (n = ge.set(n, 0, o.type, null, -1, 0, 0));
        this.balancedBracketSelectors && (c = this.balancedBracketSelectors.match(a));
      }
      if (c && (n = ge.set(n, 0, 8, c, -1, 0, 0)), this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === n) {
        this._lastTokenEndIndex = t;
        return;
      }
      this._binaryTokens.push(this._lastTokenEndIndex), this._binaryTokens.push(n), this._lastTokenEndIndex = t;
      return;
    }
    const r = (e == null ? void 0 : e.getScopeNames()) ?? [];
    this._tokens.push({
      startIndex: this._lastTokenEndIndex,
      endIndex: t,
      // value: lineText.substring(lastTokenEndIndex, endIndex),
      scopes: r
    }), this._lastTokenEndIndex = t;
  }
  getResult(e, t) {
    return this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === t - 1 && this._tokens.pop(), this._tokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(e, t), this._tokens[this._tokens.length - 1].startIndex = 0), this._tokens;
  }
  getBinaryResult(e, t) {
    this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === t - 1 && (this._binaryTokens.pop(), this._binaryTokens.pop()), this._binaryTokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(e, t), this._binaryTokens[this._binaryTokens.length - 2] = 0);
    const r = new Uint32Array(this._binaryTokens.length);
    for (let l = 0, n = this._binaryTokens.length; l < n; l++)
      r[l] = this._binaryTokens[l];
    return r;
  }
}
class an {
  constructor(e, t) {
    p(this, "_onigLibPromise");
    p(this, "_grammars", /* @__PURE__ */ new Map());
    p(this, "_rawGrammars", /* @__PURE__ */ new Map());
    p(this, "_injectionGrammars", /* @__PURE__ */ new Map());
    p(this, "_theme");
    this._onigLibPromise = t, this._theme = e;
  }
  dispose() {
    for (const e of this._grammars.values())
      e.dispose();
  }
  setTheme(e) {
    this._theme = e;
  }
  getColorMap() {
    return this._theme.getColorMap();
  }
  /**
   * Add `grammar` to registry and return a list of referenced scope names
   */
  addGrammar(e, t) {
    this._rawGrammars.set(e.scopeName, e), t && this._injectionGrammars.set(e.scopeName, t);
  }
  /**
   * Lookup a raw grammar.
   */
  lookup(e) {
    return this._rawGrammars.get(e);
  }
  /**
   * Returns the injections for the given grammar
   */
  injections(e) {
    return this._injectionGrammars.get(e);
  }
  /**
   * Get the default theme settings
   */
  getDefaults() {
    return this._theme.getDefaults();
  }
  /**
   * Match a scope in the theme.
   */
  themeMatch(e) {
    return this._theme.match(e);
  }
  /**
   * Lookup a grammar.
   */
  async grammarForScopeName(e, t, r, l, n) {
    if (!this._grammars.has(e)) {
      let c = this._rawGrammars.get(e);
      if (!c)
        return null;
      this._grammars.set(e, rn(e, c, t, r, l, n, this, await this._onigLibPromise));
    }
    return this._grammars.get(e);
  }
}
let sn = class {
  constructor(e) {
    p(this, "_options");
    p(this, "_syncRegistry");
    p(this, "_ensureGrammarCache");
    this._options = e, this._syncRegistry = new an(Ge.createFromRawTheme(e.theme, e.colorMap), e.onigLib), this._ensureGrammarCache = /* @__PURE__ */ new Map();
  }
  dispose() {
    this._syncRegistry.dispose();
  }
  /**
   * Change the theme. Once called, no previous `ruleStack` should be used anymore.
   */
  setTheme(e, t) {
    this._syncRegistry.setTheme(Ge.createFromRawTheme(e, t));
  }
  /**
   * Returns a lookup array for color ids.
   */
  getColorMap() {
    return this._syncRegistry.getColorMap();
  }
  /**
   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.
   * Please do not use language id 0.
   */
  loadGrammarWithEmbeddedLanguages(e, t, r) {
    return this.loadGrammarWithConfiguration(e, t, { embeddedLanguages: r });
  }
  /**
   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.
   * Please do not use language id 0.
   */
  loadGrammarWithConfiguration(e, t, r) {
    return this._loadGrammar(e, t, r.embeddedLanguages, r.tokenTypes, new cn(r.balancedBracketSelectors || [], r.unbalancedBracketSelectors || []));
  }
  /**
   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.
   */
  loadGrammar(e) {
    return this._loadGrammar(e, 0, null, null, null);
  }
  async _loadGrammar(e, t, r, l, n) {
    const c = new El(this._syncRegistry, e);
    for (; c.Q.length > 0; )
      await Promise.all(c.Q.map((a) => this._loadSingleGrammar(a.scopeName))), c.processQueue();
    return this._grammarForScopeName(e, t, r, l, n);
  }
  async _loadSingleGrammar(e) {
    return this._ensureGrammarCache.has(e) || this._ensureGrammarCache.set(e, this._doLoadSingleGrammar(e)), this._ensureGrammarCache.get(e);
  }
  async _doLoadSingleGrammar(e) {
    const t = await this._options.loadGrammar(e);
    if (t) {
      const r = typeof this._options.getInjections == "function" ? this._options.getInjections(e) : void 0;
      this._syncRegistry.addGrammar(t, r);
    }
  }
  /**
   * Adds a rawGrammar.
   */
  async addGrammar(e, t = [], r = 0, l = null) {
    return this._syncRegistry.addGrammar(e, t), await this._grammarForScopeName(e.scopeName, r, l);
  }
  /**
   * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.
   */
  _grammarForScopeName(e, t = 0, r = null, l = null, n = null) {
    return this._syncRegistry.grammarForScopeName(e, t, r, l, n);
  }
};
const gr = Ne.NULL, B = {
  LANGUAGEID_MASK: 255,
  TOKEN_TYPE_MASK: 768,
  BALANCED_BRACKETS_MASK: 1024,
  FONT_STYLE_MASK: 14336,
  FOREGROUND_MASK: 8372224,
  BACKGROUND_MASK: 4286578688,
  LANGUAGEID_OFFSET: 0,
  TOKEN_TYPE_OFFSET: 8,
  BALANCED_BRACKETS_OFFSET: 10,
  FONT_STYLE_OFFSET: 11,
  FOREGROUND_OFFSET: 15,
  BACKGROUND_OFFSET: 24
};
class Q {
  static toBinaryStr(e) {
    let t = e.toString(2);
    for (; t.length < 32; )
      t = `0${t}`;
    return t;
  }
  // public static printMetadata(metadata: number): void {
  //   const languageId = StackElementMetadata.getLanguageId(metadata)
  //   const tokenType = StackElementMetadata.getTokenType(metadata)
  //   const fontStyle = StackElementMetadata.getFontStyle(metadata)
  //   const foreground = StackElementMetadata.getForeground(metadata)
  //   const background = StackElementMetadata.getBackground(metadata)
  //   console.log({
  //     languageId,
  //     tokenType,
  //     fontStyle,
  //     foreground,
  //     background,
  //   })
  // }
  static getLanguageId(e) {
    return (e & B.LANGUAGEID_MASK) >>> B.LANGUAGEID_OFFSET;
  }
  static getTokenType(e) {
    return (e & B.TOKEN_TYPE_MASK) >>> B.TOKEN_TYPE_OFFSET;
  }
  static getFontStyle(e) {
    return (e & B.FONT_STYLE_MASK) >>> B.FONT_STYLE_OFFSET;
  }
  static getForeground(e) {
    return (e & B.FOREGROUND_MASK) >>> B.FOREGROUND_OFFSET;
  }
  static getBackground(e) {
    return (e & B.BACKGROUND_MASK) >>> B.BACKGROUND_OFFSET;
  }
  static containsBalancedBrackets(e) {
    return (e & B.BALANCED_BRACKETS_MASK) !== 0;
  }
  static set(e, t, r, l, n, c) {
    let a = Q.getLanguageId(e), o = Q.getTokenType(e), s = Q.getFontStyle(e), u = Q.getForeground(e), f = Q.getBackground(e);
    const d = Q.containsBalancedBrackets(e) ? 1 : 0;
    return t !== 0 && (a = t), r !== 0 && (o = r === 8 ? 0 : r), l !== q.NotSet && (s = l), n !== 0 && (u = n), c !== 0 && (f = c), (a << B.LANGUAGEID_OFFSET | o << B.TOKEN_TYPE_OFFSET | s << B.FONT_STYLE_OFFSET | d << B.BALANCED_BRACKETS_OFFSET | u << B.FOREGROUND_OFFSET | f << B.BACKGROUND_OFFSET) >>> 0;
  }
}
function Ke(i, e = !1) {
  var n;
  const t = i.split(/(\r?\n)/g);
  let r = 0;
  const l = [];
  for (let c = 0; c < t.length; c += 2) {
    const a = e ? t[c] + (t[c + 1] || "") : t[c];
    l.push([a, r]), r += t[c].length, r += ((n = t[c + 1]) == null ? void 0 : n.length) || 0;
  }
  return l;
}
function xt(i) {
  return !i || ["plaintext", "txt", "text", "plain"].includes(i);
}
function yr(i) {
  return i === "ansi" || xt(i);
}
function _t(i) {
  return i === "none";
}
function Cr(i) {
  return _t(i);
}
function xr(i, e) {
  var r;
  if (!e)
    return i;
  i.properties || (i.properties = {}), (r = i.properties).class || (r.class = []), typeof i.properties.class == "string" && (i.properties.class = i.properties.class.split(/\s+/g)), Array.isArray(i.properties.class) || (i.properties.class = []);
  const t = Array.isArray(e) ? e : e.split(/\s+/g);
  for (const l of t)
    l && !i.properties.class.includes(l) && i.properties.class.push(l);
  return i;
}
function un(i, e) {
  let t = 0;
  const r = [];
  for (const l of e)
    l > t && r.push({
      ...i,
      content: i.content.slice(t, l),
      offset: i.offset + t
    }), t = l;
  return t < i.content.length && r.push({
    ...i,
    content: i.content.slice(t),
    offset: i.offset + t
  }), r;
}
function pn(i, e) {
  const t = Array.from(e instanceof Set ? e : new Set(e)).sort((r, l) => r - l);
  return t.length ? i.map((r) => r.flatMap((l) => {
    const n = t.filter((c) => l.offset < c && c < l.offset + l.content.length).map((c) => c - l.offset).sort((c, a) => c - a);
    return n.length ? un(l, n) : l;
  })) : i;
}
function je(i, e) {
  const t = typeof i == "string" ? {} : { ...i.colorReplacements }, r = typeof i == "string" ? i : i.name;
  for (const [l, n] of Object.entries((e == null ? void 0 : e.colorReplacements) || {}))
    typeof n == "string" ? t[l] = n : l === r && Object.assign(t, n);
  return t;
}
function ie(i, e) {
  return i && ((e == null ? void 0 : e[i == null ? void 0 : i.toLowerCase()]) || i);
}
function _r(i) {
  const e = {};
  return i.color && (e.color = i.color), i.bgColor && (e["background-color"] = i.bgColor), i.fontStyle && (i.fontStyle & q.Italic && (e["font-style"] = "italic"), i.fontStyle & q.Bold && (e["font-weight"] = "bold"), i.fontStyle & q.Underline && (e["text-decoration"] = "underline")), e;
}
function br(i) {
  return Object.entries(i).map(([e, t]) => `${e}:${t}`).join(";");
}
function fn(i) {
  const e = Ke(i, !0).map(([l]) => l);
  function t(l) {
    if (l === i.length)
      return {
        line: e.length - 1,
        character: e[e.length - 1].length
      };
    let n = l, c = 0;
    for (const a of e) {
      if (n < a.length)
        break;
      n -= a.length, c++;
    }
    return { line: c, character: n };
  }
  function r(l, n) {
    let c = 0;
    for (let a = 0; a < l; a++)
      c += e[a].length;
    return c += n, c;
  }
  return {
    lines: e,
    indexToPos: t,
    posToIndex: r
  };
}
var le = [
  "black",
  "red",
  "green",
  "yellow",
  "blue",
  "magenta",
  "cyan",
  "white",
  "brightBlack",
  "brightRed",
  "brightGreen",
  "brightYellow",
  "brightBlue",
  "brightMagenta",
  "brightCyan",
  "brightWhite"
], tt = {
  1: "bold",
  2: "dim",
  3: "italic",
  4: "underline",
  7: "reverse",
  9: "strikethrough"
};
function dn(i, e) {
  const t = i.indexOf("\x1B[", e);
  if (t !== -1) {
    const r = i.indexOf("m", t);
    return {
      sequence: i.substring(t + 2, r).split(";"),
      startPosition: t,
      position: r + 1
    };
  }
  return {
    position: i.length
  };
}
function Bt(i, e) {
  let t = 1;
  const r = i[e + t++];
  let l;
  if (r === "2") {
    const n = [
      i[e + t++],
      i[e + t++],
      i[e + t]
    ].map((c) => Number.parseInt(c));
    n.length === 3 && !n.some((c) => Number.isNaN(c)) && (l = {
      type: "rgb",
      rgb: n
    });
  } else if (r === "5") {
    const n = Number.parseInt(i[e + t]);
    Number.isNaN(n) || (l = { type: "table", index: Number(n) });
  }
  return [t, l];
}
function mn(i) {
  const e = [];
  for (let t = 0; t < i.length; t++) {
    const r = i[t], l = Number.parseInt(r);
    if (!Number.isNaN(l))
      if (l === 0)
        e.push({ type: "resetAll" });
      else if (l <= 9)
        tt[l] && e.push({
          type: "setDecoration",
          value: tt[l]
        });
      else if (l <= 29) {
        const n = tt[l - 20];
        n && e.push({
          type: "resetDecoration",
          value: n
        });
      } else if (l <= 37)
        e.push({
          type: "setForegroundColor",
          value: { type: "named", name: le[l - 30] }
        });
      else if (l === 38) {
        const [n, c] = Bt(i, t);
        c && e.push({
          type: "setForegroundColor",
          value: c
        }), t += n;
      } else if (l === 39)
        e.push({
          type: "resetForegroundColor"
        });
      else if (l <= 47)
        e.push({
          type: "setBackgroundColor",
          value: { type: "named", name: le[l - 40] }
        });
      else if (l === 48) {
        const [n, c] = Bt(i, t);
        c && e.push({
          type: "setBackgroundColor",
          value: c
        }), t += n;
      } else l === 49 ? e.push({
        type: "resetBackgroundColor"
      }) : l >= 90 && l <= 97 ? e.push({
        type: "setForegroundColor",
        value: { type: "named", name: le[l - 90 + 8] }
      }) : l >= 100 && l <= 107 && e.push({
        type: "setBackgroundColor",
        value: { type: "named", name: le[l - 100 + 8] }
      });
  }
  return e;
}
function hn() {
  let i = null, e = null, t = /* @__PURE__ */ new Set();
  return {
    parse(r) {
      const l = [];
      let n = 0;
      do {
        const c = dn(r, n), a = c.sequence ? r.substring(n, c.startPosition) : r.substring(n);
        if (a.length > 0 && l.push({
          value: a,
          foreground: i,
          background: e,
          decorations: new Set(t)
        }), c.sequence) {
          const o = mn(c.sequence);
          for (const s of o)
            s.type === "resetAll" ? (i = null, e = null, t.clear()) : s.type === "resetForegroundColor" ? i = null : s.type === "resetBackgroundColor" ? e = null : s.type === "resetDecoration" && t.delete(s.value);
          for (const s of o)
            s.type === "setForegroundColor" ? i = s.value : s.type === "setBackgroundColor" ? e = s.value : s.type === "setDecoration" && t.add(s.value);
        }
        n = c.position;
      } while (n < r.length);
      return l;
    }
  };
}
var gn = {
  black: "#000000",
  red: "#bb0000",
  green: "#00bb00",
  yellow: "#bbbb00",
  blue: "#0000bb",
  magenta: "#ff00ff",
  cyan: "#00bbbb",
  white: "#eeeeee",
  brightBlack: "#555555",
  brightRed: "#ff5555",
  brightGreen: "#00ff00",
  brightYellow: "#ffff55",
  brightBlue: "#5555ff",
  brightMagenta: "#ff55ff",
  brightCyan: "#55ffff",
  brightWhite: "#ffffff"
};
function yn(i = gn) {
  function e(a) {
    return i[a];
  }
  function t(a) {
    return `#${a.map((o) => Math.max(0, Math.min(o, 255)).toString(16).padStart(2, "0")).join("")}`;
  }
  let r;
  function l() {
    if (r)
      return r;
    r = [];
    for (let s = 0; s < le.length; s++)
      r.push(e(le[s]));
    let a = [0, 95, 135, 175, 215, 255];
    for (let s = 0; s < 6; s++)
      for (let u = 0; u < 6; u++)
        for (let f = 0; f < 6; f++)
          r.push(t([a[s], a[u], a[f]]));
    let o = 8;
    for (let s = 0; s < 24; s++, o += 10)
      r.push(t([o, o, o]));
    return r;
  }
  function n(a) {
    return l()[a];
  }
  function c(a) {
    switch (a.type) {
      case "named":
        return e(a.name);
      case "rgb":
        return t(a.rgb);
      case "table":
        return n(a.index);
    }
  }
  return {
    value: c
  };
}
function Cn(i, e, t) {
  const r = je(i, t), l = Ke(e), n = yn(Object.fromEntries(le.map((a) => {
    var o;
    return [
      a,
      (o = i.colors) == null ? void 0 : o[`terminal.ansi${a[0].toUpperCase()}${a.substring(1)}`]
    ];
  }))), c = hn();
  return l.map((a) => c.parse(a[0]).map((o) => {
    let s, u;
    o.decorations.has("reverse") ? (s = o.background ? n.value(o.background) : i.bg, u = o.foreground ? n.value(o.foreground) : i.fg) : (s = o.foreground ? n.value(o.foreground) : i.fg, u = o.background ? n.value(o.background) : void 0), s = ie(s, r), u = ie(u, r), o.decorations.has("dim") && (s = xn(s));
    let f = q.None;
    return o.decorations.has("bold") && (f |= q.Bold), o.decorations.has("italic") && (f |= q.Italic), o.decorations.has("underline") && (f |= q.Underline), {
      content: o.value,
      offset: a[1],
      // TODO: more accurate offset? might need to fork ansi-sequence-parser
      color: s,
      bgColor: u,
      fontStyle: f
    };
  }));
}
function xn(i) {
  const e = i.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);
  if (e)
    if (e[3]) {
      const r = Math.round(Number.parseInt(e[3], 16) / 2).toString(16).padStart(2, "0");
      return `#${e[1]}${e[2]}${r}`;
    } else return e[2] ? `#${e[1]}${e[2]}80` : `#${Array.from(e[1]).map((r) => `${r}${r}`).join("")}80`;
  const t = i.match(/var\((--[\w-]+-ansi-[\w-]+)\)/);
  return t ? `var(${t[1]}-dim)` : i;
}
class L extends Error {
  constructor(e) {
    super(e), this.name = "ShikiError";
  }
}
class Ve {
  constructor(e, t, r) {
    p(this, "_stack");
    p(this, "lang");
    p(this, "theme");
    this._stack = e, this.lang = t, this.theme = r;
  }
  /**
   * Static method to create a initial grammar state.
   */
  static initial(e, t) {
    return new Ve(gr, e, t);
  }
  get scopes() {
    return _n(this._stack);
  }
  toJSON() {
    return {
      lang: this.lang,
      theme: this.theme,
      scopes: this.scopes
    };
  }
}
function _n(i) {
  const e = [], t = /* @__PURE__ */ new Set();
  function r(l) {
    var c;
    if (t.has(l))
      return;
    t.add(l);
    const n = (c = l == null ? void 0 : l.nameScopesList) == null ? void 0 : c.scopeName;
    n && e.push(n), l.parent && r(l.parent);
  }
  return r(i), e;
}
function bn(i) {
  if (!(i instanceof Ve))
    throw new L("Invalid grammar state");
  return i._stack;
}
function bt(i, e, t = {}) {
  const { lang: r = "text", theme: l = i.getLoadedThemes()[0] } = t;
  if (xt(r) || _t(l))
    return Ke(e).map((o) => [{ content: o[0], offset: o[1] }]);
  const { theme: n, colorMap: c } = i.setTheme(l);
  if (r === "ansi")
    return Cn(n, e, t);
  const a = i.getLanguage(r);
  if (t.grammarState) {
    if (t.grammarState.lang !== a.name)
      throw new L(`Grammar state language "${t.grammarState.lang}" does not match highlight language "${a.name}"`);
    if (t.grammarState.theme !== l)
      throw new L(`Grammar state theme "${t.grammarState.theme}" does not match highlight theme "${l}"`);
  }
  return Sn(e, a, n, c, t);
}
function wn(i, e, t = {}) {
  const { lang: r = "text", theme: l = i.getLoadedThemes()[0] } = t;
  if (xt(r) || _t(l))
    throw new L("Plain language does not have grammar state");
  if (r === "ansi")
    throw new L("ANSI language does not have grammar state");
  const { theme: n, colorMap: c } = i.setTheme(l), a = i.getLanguage(r);
  return new Ve(wt(e, a, n, c, t).stateStack, a.name, n.name);
}
function Sn(i, e, t, r, l) {
  return wt(i, e, t, r, l).tokens;
}
function wt(i, e, t, r, l) {
  const n = je(t, l), { tokenizeMaxLineLength: c = 0, tokenizeTimeLimit: a = 500 } = l, o = Ke(i);
  let s = l.grammarState ? bn(l.grammarState) : l.grammarContextCode != null ? wt(l.grammarContextCode, e, t, r, {
    ...l,
    grammarState: void 0,
    grammarContextCode: void 0
  }).stateStack : gr, u = [];
  const f = [];
  for (let d = 0, h = o.length; d < h; d++) {
    const [g, m] = o[d];
    if (g === "") {
      u = [], f.push([]);
      continue;
    }
    if (c > 0 && g.length >= c) {
      u = [], f.push([{
        content: g,
        offset: m,
        color: "",
        fontStyle: 0
      }]);
      continue;
    }
    let C, w, S;
    l.includeExplanation && (C = e.tokenizeLine(g, s), w = C.tokens, S = 0);
    const x = e.tokenizeLine2(g, s, a), b = x.tokens.length / 2;
    for (let _ = 0; _ < b; _++) {
      const k = x.tokens[2 * _], j = _ + 1 < b ? x.tokens[2 * _ + 2] : g.length;
      if (k === j)
        continue;
      const V = x.tokens[2 * _ + 1], Gr = ie(r[Q.getForeground(V)], n), Fr = Q.getFontStyle(V), Xe = {
        content: g.substring(k, j),
        offset: m + k,
        color: Gr,
        fontStyle: Fr
      };
      if (l.includeExplanation) {
        const Nt = [];
        if (l.includeExplanation !== "scopeName")
          for (const Y of t.settings) {
            let se;
            switch (typeof Y.scope) {
              case "string":
                se = Y.scope.split(/,/).map((Je) => Je.trim());
                break;
              case "object":
                se = Y.scope;
                break;
              default:
                continue;
            }
            Nt.push({
              settings: Y,
              selectors: se.map((Je) => Je.split(/ /))
            });
          }
        Xe.explanation = [];
        let Rt = 0;
        for (; k + Rt < j; ) {
          const Y = w[S], se = g.substring(Y.startIndex, Y.endIndex);
          Rt += se.length, Xe.explanation.push({
            content: se,
            scopes: l.includeExplanation === "scopeName" ? vn(Y.scopes) : kn(Nt, Y.scopes)
          }), S += 1;
        }
      }
      u.push(Xe);
    }
    f.push(u), u = [], s = x.ruleStack;
  }
  return {
    tokens: f,
    stateStack: s
  };
}
function vn(i) {
  return i.map((e) => ({ scopeName: e }));
}
function kn(i, e) {
  const t = [];
  for (let r = 0, l = e.length; r < l; r++) {
    const n = e[r];
    t[r] = {
      scopeName: n,
      themeMatches: Rn(i, n, e.slice(0, r))
    };
  }
  return t;
}
function Dt(i, e) {
  return i === e || e.substring(0, i.length) === i && e[i.length] === ".";
}
function Nn(i, e, t) {
  if (!Dt(i[i.length - 1], e))
    return !1;
  let r = i.length - 2, l = t.length - 1;
  for (; r >= 0 && l >= 0; )
    Dt(i[r], t[l]) && (r -= 1), l -= 1;
  return r === -1;
}
function Rn(i, e, t) {
  const r = [];
  for (const { selectors: l, settings: n } of i)
    for (const c of l)
      if (Nn(c, e, t)) {
        r.push(n);
        break;
      }
  return r;
}
function wr(i, e, t) {
  const r = Object.entries(t.themes).filter((c) => c[1]).map((c) => ({ color: c[0], theme: c[1] })), l = An(...r.map((c) => bt(i, e, {
    ...t,
    theme: c.theme
  })));
  return l[0].map((c, a) => c.map((o, s) => {
    const u = {
      content: o.content,
      variants: {},
      offset: o.offset
    };
    return "includeExplanation" in t && t.includeExplanation && (u.explanation = o.explanation), l.forEach((f, d) => {
      const { content: h, explanation: g, offset: m, ...C } = f[a][s];
      u.variants[r[d].color] = C;
    }), u;
  }));
}
function An(...i) {
  const e = i.map(() => []), t = i.length;
  for (let r = 0; r < i[0].length; r++) {
    const l = i.map((o) => o[r]), n = e.map(() => []);
    e.forEach((o, s) => o.push(n[s]));
    const c = l.map(() => 0), a = l.map((o) => o[0]);
    for (; a.every((o) => o); ) {
      const o = Math.min(...a.map((s) => s.content.length));
      for (let s = 0; s < t; s++) {
        const u = a[s];
        u.content.length === o ? (n[s].push(u), c[s] += 1, a[s] = l[s][c[s]]) : (n[s].push({
          ...u,
          content: u.content.slice(0, o)
        }), a[s] = {
          ...u,
          content: u.content.slice(o),
          offset: u.offset + o
        });
      }
    }
  }
  return e;
}
function Ue(i, e, t) {
  let r, l, n, c, a;
  if ("themes" in t) {
    const { defaultColor: o = "light", cssVariablePrefix: s = "--shiki-" } = t, u = Object.entries(t.themes).filter((m) => m[1]).map((m) => ({ color: m[0], theme: m[1] })).sort((m, C) => m.color === o ? -1 : C.color === o ? 1 : 0);
    if (u.length === 0)
      throw new L("`themes` option must not be empty");
    const f = wr(i, e, t);
    if (o && !u.find((m) => m.color === o))
      throw new L(`\`themes\` option must contain the defaultColor key \`${o}\``);
    const d = u.map((m) => i.getTheme(m.theme)), h = u.map((m) => m.color);
    n = f.map((m) => m.map((C) => Ln(C, h, s, o)));
    const g = u.map((m) => je(m.theme, t));
    l = u.map((m, C) => (C === 0 && o ? "" : `${s + m.color}:`) + (ie(d[C].fg, g[C]) || "inherit")).join(";"), r = u.map((m, C) => (C === 0 && o ? "" : `${s + m.color}-bg:`) + (ie(d[C].bg, g[C]) || "inherit")).join(";"), c = `shiki-themes ${d.map((m) => m.name).join(" ")}`, a = o ? void 0 : [l, r].join(";");
  } else if ("theme" in t) {
    const o = je(t.theme, t);
    n = bt(i, e, t);
    const s = i.getTheme(t.theme);
    r = ie(s.bg, o), l = ie(s.fg, o), c = s.name;
  } else
    throw new L("Invalid options, either `theme` or `themes` must be provided");
  return {
    tokens: n,
    fg: l,
    bg: r,
    themeName: c,
    rootStyle: a
  };
}
function Ln(i, e, t, r) {
  const l = {
    content: i.content,
    explanation: i.explanation,
    offset: i.offset
  }, n = e.map((o) => _r(i.variants[o])), c = new Set(n.flatMap((o) => Object.keys(o))), a = n.reduce((o, s, u) => {
    for (const f of c) {
      const d = s[f] || "inherit";
      if (u === 0 && r)
        o[f] = d;
      else {
        const h = f === "color" ? "" : f === "background-color" ? "-bg" : `-${f}`, g = t + e[u] + (f === "color" ? "" : h);
        o[f] ? o[f] += `;${g}:${d}` : o[f] = `${g}:${d}`;
      }
    }
    return o;
  }, {});
  return l.htmlStyle = r ? br(a) : Object.values(a).join(";"), l;
}
function Tn() {
  const i = /* @__PURE__ */ new WeakMap();
  function e(r) {
    if (!i.has(r.meta)) {
      let n = function(a) {
        if (typeof a == "number") {
          if (a < 0 || a > r.source.length)
            throw new L(`Invalid decoration offset: ${a}. Code length: ${r.source.length}`);
          return {
            ...l.indexToPos(a),
            offset: a
          };
        } else {
          const o = l.lines[a.line];
          if (o === void 0)
            throw new L(`Invalid decoration position ${JSON.stringify(a)}. Lines length: ${l.lines.length}`);
          if (a.character < 0 || a.character > o.length)
            throw new L(`Invalid decoration position ${JSON.stringify(a)}. Line ${a.line} length: ${o.length}`);
          return {
            ...a,
            offset: l.posToIndex(a.line, a.character)
          };
        }
      };
      const l = fn(r.source), c = (r.options.decorations || []).map((a) => ({
        ...a,
        start: n(a.start),
        end: n(a.end)
      }));
      t(c), i.set(r.meta, {
        decorations: c,
        converter: l,
        source: r.source
      });
    }
    return i.get(r.meta);
  }
  function t(r) {
    for (let l = 0; l < r.length; l++) {
      const n = r[l];
      if (n.start.offset > n.end.offset)
        throw new L(`Invalid decoration range: ${JSON.stringify(n.start)} - ${JSON.stringify(n.end)}`);
      for (let c = l + 1; c < r.length; c++) {
        const a = r[c], o = n.start.offset < a.start.offset && a.start.offset < n.end.offset, s = n.start.offset < a.end.offset && a.end.offset < n.end.offset, u = a.start.offset < n.start.offset && n.start.offset < a.end.offset, f = a.start.offset < n.end.offset && n.end.offset < a.end.offset;
        if (o || s || u || f) {
          if (s && s || u && f)
            continue;
          throw new L(`Decorations ${JSON.stringify(n.start)} and ${JSON.stringify(a.start)} intersect.`);
        }
      }
    }
  }
  return {
    name: "shiki:decorations",
    tokens(r) {
      var a;
      if (!((a = this.options.decorations) != null && a.length))
        return;
      const n = e(this).decorations.flatMap((o) => [o.start.offset, o.end.offset]);
      return pn(r, n);
    },
    code(r) {
      var f;
      if (!((f = this.options.decorations) != null && f.length))
        return;
      const l = e(this), n = Array.from(r.children).filter((d) => d.type === "element" && d.tagName === "span");
      if (n.length !== l.converter.lines.length)
        throw new L(`Number of lines in code element (${n.length}) does not match the number of lines in the source (${l.converter.lines.length}). Failed to apply decorations.`);
      function c(d, h, g, m) {
        const C = n[d];
        let w = "", S = -1, x = -1;
        function b(k) {
          return k.type === "text" ? k.value : k.type === "element" ? k.children.map(b).join("") : "";
        }
        if (h === 0 && (S = 0), g === 0 && (x = 0), g === Number.POSITIVE_INFINITY && (x = C.children.length), S === -1 || x === -1)
          for (let k = 0; k < C.children.length; k++)
            w += b(C.children[k]), S === -1 && w.length === h && (S = k + 1), x === -1 && w.length === g && (x = k + 1);
        if (S === -1)
          throw new L(`Failed to find start index for decoration ${JSON.stringify(m.start)}`);
        if (x === -1)
          throw new L(`Failed to find end index for decoration ${JSON.stringify(m.end)}`);
        const _ = C.children.slice(S, x);
        if (!m.alwaysWrap && _.length === C.children.length)
          o(C, m, "line");
        else if (!m.alwaysWrap && _.length === 1 && _[0].type === "element")
          o(_[0], m, "token");
        else {
          const k = {
            type: "element",
            tagName: "span",
            properties: {},
            children: _
          };
          o(k, m, "wrapper"), C.children.splice(S, _.length, k);
        }
      }
      function a(d, h) {
        n[d] = o(n[d], h, "line");
      }
      function o(d, h, g) {
        var w;
        const m = h.properties || {}, C = h.transform || ((S) => S);
        return d.tagName = h.tagName || "span", d.properties = {
          ...d.properties,
          ...m,
          class: d.properties.class
        }, (w = h.properties) != null && w.class && xr(d, h.properties.class), d = C(d, g) || d, d;
      }
      const s = [], u = l.decorations.sort((d, h) => h.start.offset - d.start.offset);
      for (const d of u) {
        const { start: h, end: g } = d;
        if (h.line === g.line)
          c(h.line, h.character, g.character, d);
        else if (h.line < g.line) {
          c(h.line, h.character, Number.POSITIVE_INFINITY, d);
          for (let m = h.line + 1; m < g.line; m++)
            s.unshift(() => a(m, d));
          c(g.line, 0, g.character, d);
        }
      }
      s.forEach((d) => d());
    }
  };
}
const Pn = [
  /* @__PURE__ */ Tn()
];
function ze(i) {
  return [
    ...i.transformers || [],
    ...Pn
  ];
}
function He(i, e, t, r = {
  meta: {},
  options: t,
  codeToHast: (l, n) => He(i, l, n),
  codeToTokens: (l, n) => Ue(i, l, n)
}) {
  var d, h;
  let l = e;
  for (const g of ze(t))
    l = ((d = g.preprocess) == null ? void 0 : d.call(r, l, t)) || l;
  let { tokens: n, fg: c, bg: a, themeName: o, rootStyle: s } = Ue(i, l, t);
  const { mergeWhitespaces: u = !0 } = t;
  u === !0 ? n = On(n) : u === "never" && (n = In(n));
  const f = {
    ...r,
    get source() {
      return l;
    }
  };
  for (const g of ze(t))
    n = ((h = g.tokens) == null ? void 0 : h.call(f, n)) || n;
  return En(n, {
    ...t,
    fg: c,
    bg: a,
    themeName: o,
    rootStyle: s
  }, f);
}
function En(i, e, t) {
  var d, h, g;
  const r = ze(e), l = [], n = {
    type: "root",
    children: []
  }, { structure: c = "classic" } = e;
  let a = {
    type: "element",
    tagName: "pre",
    properties: {
      class: `shiki ${e.themeName || ""}`,
      style: e.rootStyle || `background-color:${e.bg};color:${e.fg}`,
      tabindex: "0",
      ...Object.fromEntries(Array.from(Object.entries(e.meta || {})).filter(([m]) => !m.startsWith("_")))
    },
    children: []
  }, o = {
    type: "element",
    tagName: "code",
    properties: {},
    children: l
  };
  const s = [], u = {
    ...t,
    structure: c,
    addClassToHast: xr,
    get source() {
      return t.source;
    },
    get tokens() {
      return i;
    },
    get options() {
      return e;
    },
    get root() {
      return n;
    },
    get pre() {
      return a;
    },
    get code() {
      return o;
    },
    get lines() {
      return s;
    }
  };
  if (i.forEach((m, C) => {
    var x, b;
    C && (c === "inline" ? n.children.push({ type: "element", tagName: "br", properties: {}, children: [] }) : c === "classic" && l.push({ type: "text", value: `
` }));
    let w = {
      type: "element",
      tagName: "span",
      properties: { class: "line" },
      children: []
    }, S = 0;
    for (const _ of m) {
      let k = {
        type: "element",
        tagName: "span",
        properties: {},
        children: [{ type: "text", value: _.content }]
      };
      const j = _.htmlStyle || br(_r(_));
      j && (k.properties.style = j);
      for (const V of r)
        k = ((x = V == null ? void 0 : V.span) == null ? void 0 : x.call(u, k, C + 1, S, w)) || k;
      c === "inline" ? n.children.push(k) : c === "classic" && w.children.push(k), S += _.content.length;
    }
    if (c === "classic") {
      for (const _ of r)
        w = ((b = _ == null ? void 0 : _.line) == null ? void 0 : b.call(u, w, C + 1)) || w;
      s.push(w), l.push(w);
    }
  }), c === "classic") {
    for (const m of r)
      o = ((d = m == null ? void 0 : m.code) == null ? void 0 : d.call(u, o)) || o;
    a.children.push(o);
    for (const m of r)
      a = ((h = m == null ? void 0 : m.pre) == null ? void 0 : h.call(u, a)) || a;
    n.children.push(a);
  }
  let f = n;
  for (const m of r)
    f = ((g = m == null ? void 0 : m.root) == null ? void 0 : g.call(u, f)) || f;
  return f;
}
function On(i) {
  return i.map((e) => {
    const t = [];
    let r = "", l = 0;
    return e.forEach((n, c) => {
      const o = !(n.fontStyle && n.fontStyle & q.Underline);
      o && n.content.match(/^\s+$/) && e[c + 1] ? (l || (l = n.offset), r += n.content) : r ? (o ? t.push({
        ...n,
        offset: l,
        content: r + n.content
      }) : t.push({
        content: r,
        offset: l
      }, n), l = 0, r = "") : t.push(n);
    }), t;
  });
}
function In(i) {
  return i.map((e) => e.flatMap((t) => {
    if (t.content.match(/^\s+$/))
      return t;
    const r = t.content.match(/^(\s*)(.*?)(\s*)$/);
    if (!r)
      return t;
    const [, l, n, c] = r;
    if (!l && !c)
      return t;
    const a = [{
      ...t,
      offset: t.offset + l.length,
      content: n
    }];
    return l && a.unshift({
      content: l,
      offset: t.offset
    }), c && a.push({
      content: c,
      offset: t.offset + l.length + n.length
    }), a;
  }));
}
const Mn = [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "image",
  "img",
  "input",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
];
class Le {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(e, t, r) {
    this.property = e, this.normal = t, r && (this.space = r);
  }
}
Le.prototype.property = {};
Le.prototype.normal = {};
Le.prototype.space = null;
function Sr(i, e) {
  const t = {}, r = {};
  let l = -1;
  for (; ++l < i.length; )
    Object.assign(t, i[l].property), Object.assign(r, i[l].normal);
  return new Le(t, r, e);
}
function mt(i) {
  return i.toLowerCase();
}
class W {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   */
  constructor(e, t) {
    this.property = e, this.attribute = t;
  }
}
W.prototype.space = null;
W.prototype.boolean = !1;
W.prototype.booleanish = !1;
W.prototype.overloadedBoolean = !1;
W.prototype.number = !1;
W.prototype.commaSeparated = !1;
W.prototype.spaceSeparated = !1;
W.prototype.commaOrSpaceSeparated = !1;
W.prototype.mustUseProperty = !1;
W.prototype.defined = !1;
let Bn = 0;
const v = ae(), E = ae(), vr = ae(), y = ae(), A = ae(), de = ae(), U = ae();
function ae() {
  return 2 ** ++Bn;
}
var ht = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  boolean: v,
  booleanish: E,
  commaOrSpaceSeparated: U,
  commaSeparated: de,
  number: y,
  overloadedBoolean: vr,
  spaceSeparated: A
});
const rt = Object.keys(ht);
class St extends W {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  constructor(e, t, r, l) {
    let n = -1;
    if (super(e, t), $t(this, "space", l), typeof r == "number")
      for (; ++n < rt.length; ) {
        const c = rt[n];
        $t(this, rt[n], (r & ht[c]) === ht[c]);
      }
  }
}
St.prototype.defined = !0;
function $t(i, e, t) {
  t && (i[e] = t);
}
const Dn = {}.hasOwnProperty;
function ye(i) {
  const e = {}, t = {};
  let r;
  for (r in i.properties)
    if (Dn.call(i.properties, r)) {
      const l = i.properties[r], n = new St(
        r,
        i.transform(i.attributes || {}, r),
        l,
        i.space
      );
      i.mustUseProperty && i.mustUseProperty.includes(r) && (n.mustUseProperty = !0), e[r] = n, t[mt(r)] = r, t[mt(n.attribute)] = r;
    }
  return new Le(e, t, i.space);
}
const kr = ye({
  space: "xlink",
  transform(i, e) {
    return "xlink:" + e.slice(5).toLowerCase();
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
}), Nr = ye({
  space: "xml",
  transform(i, e) {
    return "xml:" + e.slice(3).toLowerCase();
  },
  properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
});
function Rr(i, e) {
  return e in i ? i[e] : e;
}
function Ar(i, e) {
  return Rr(i, e.toLowerCase());
}
const Lr = ye({
  space: "xmlns",
  attributes: { xmlnsxlink: "xmlns:xlink" },
  transform: Ar,
  properties: { xmlns: null, xmlnsXLink: null }
}), Tr = ye({
  transform(i, e) {
    return e === "role" ? e : "aria-" + e.slice(4).toLowerCase();
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: E,
    ariaAutoComplete: null,
    ariaBusy: E,
    ariaChecked: E,
    ariaColCount: y,
    ariaColIndex: y,
    ariaColSpan: y,
    ariaControls: A,
    ariaCurrent: null,
    ariaDescribedBy: A,
    ariaDetails: null,
    ariaDisabled: E,
    ariaDropEffect: A,
    ariaErrorMessage: null,
    ariaExpanded: E,
    ariaFlowTo: A,
    ariaGrabbed: E,
    ariaHasPopup: null,
    ariaHidden: E,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: A,
    ariaLevel: y,
    ariaLive: null,
    ariaModal: E,
    ariaMultiLine: E,
    ariaMultiSelectable: E,
    ariaOrientation: null,
    ariaOwns: A,
    ariaPlaceholder: null,
    ariaPosInSet: y,
    ariaPressed: E,
    ariaReadOnly: E,
    ariaRelevant: null,
    ariaRequired: E,
    ariaRoleDescription: A,
    ariaRowCount: y,
    ariaRowIndex: y,
    ariaRowSpan: y,
    ariaSelected: E,
    ariaSetSize: y,
    ariaSort: null,
    ariaValueMax: y,
    ariaValueMin: y,
    ariaValueNow: y,
    ariaValueText: null,
    role: null
  }
}), $n = ye({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: Ar,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: de,
    acceptCharset: A,
    accessKey: A,
    action: null,
    allow: null,
    allowFullScreen: v,
    allowPaymentRequest: v,
    allowUserMedia: v,
    alt: null,
    as: null,
    async: v,
    autoCapitalize: null,
    autoComplete: A,
    autoFocus: v,
    autoPlay: v,
    blocking: A,
    capture: null,
    charSet: null,
    checked: v,
    cite: null,
    className: A,
    cols: y,
    colSpan: null,
    content: null,
    contentEditable: E,
    controls: v,
    controlsList: A,
    coords: y | de,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: v,
    defer: v,
    dir: null,
    dirName: null,
    disabled: v,
    download: vr,
    draggable: E,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: v,
    formTarget: null,
    headers: A,
    height: y,
    hidden: v,
    high: y,
    href: null,
    hrefLang: null,
    htmlFor: A,
    httpEquiv: A,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: v,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: v,
    itemId: null,
    itemProp: A,
    itemRef: A,
    itemScope: v,
    itemType: A,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: v,
    low: y,
    manifest: null,
    max: null,
    maxLength: y,
    media: null,
    method: null,
    min: null,
    minLength: y,
    multiple: v,
    muted: v,
    name: null,
    nonce: null,
    noModule: v,
    noValidate: v,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: v,
    optimum: y,
    pattern: null,
    ping: A,
    placeholder: null,
    playsInline: v,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: v,
    referrerPolicy: null,
    rel: A,
    required: v,
    reversed: v,
    rows: y,
    rowSpan: y,
    sandbox: A,
    scope: null,
    scoped: v,
    seamless: v,
    selected: v,
    shadowRootDelegatesFocus: v,
    shadowRootMode: null,
    shape: null,
    size: y,
    sizes: null,
    slot: null,
    span: y,
    spellCheck: E,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: y,
    step: null,
    style: null,
    tabIndex: y,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: v,
    useMap: null,
    value: E,
    width: y,
    wrap: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: A,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: y,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: y,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: v,
    // Lists. Use CSS to reduce space between items instead
    declare: v,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: y,
    // `<img>` and `<object>`
    leftMargin: y,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: y,
    // `<body>`
    marginWidth: y,
    // `<body>`
    noResize: v,
    // `<frame>`
    noHref: v,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: v,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: v,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: y,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: E,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: y,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: y,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: v,
    disableRemotePlayback: v,
    prefix: null,
    property: null,
    results: y,
    security: null,
    unselectable: null
  }
}), Gn = ye({
  space: "svg",
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  transform: Rr,
  properties: {
    about: U,
    accentHeight: y,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: y,
    amplitude: y,
    arabicForm: null,
    ascent: y,
    attributeName: null,
    attributeType: null,
    azimuth: y,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: y,
    by: null,
    calcMode: null,
    capHeight: y,
    className: A,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: y,
    diffuseConstant: y,
    direction: null,
    display: null,
    dur: null,
    divisor: y,
    dominantBaseline: null,
    download: v,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: y,
    enableBackground: null,
    end: null,
    event: null,
    exponent: y,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: y,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: de,
    g2: de,
    glyphName: de,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: y,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: y,
    horizOriginX: y,
    horizOriginY: y,
    id: null,
    ideographic: y,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: y,
    k: y,
    k1: y,
    k2: y,
    k3: y,
    k4: y,
    kernelMatrix: U,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: y,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: y,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: y,
    overlineThickness: y,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: y,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: A,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: y,
    pointsAtY: y,
    pointsAtZ: y,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: U,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: U,
    rev: U,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: U,
    requiredFeatures: U,
    requiredFonts: U,
    requiredFormats: U,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: y,
    specularExponent: y,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: y,
    strikethroughThickness: y,
    string: null,
    stroke: null,
    strokeDashArray: U,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: y,
    strokeOpacity: y,
    strokeWidth: null,
    style: null,
    surfaceScale: y,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: U,
    tabIndex: y,
    tableValues: null,
    target: null,
    targetX: y,
    targetY: y,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: U,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: y,
    underlineThickness: y,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: y,
    values: null,
    vAlphabetic: y,
    vMathematical: y,
    vectorEffect: null,
    vHanging: y,
    vIdeographic: y,
    version: null,
    vertAdvY: y,
    vertOriginX: y,
    vertOriginY: y,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: y,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
}), Fn = /^data[-\w.:]+$/i, Gt = /-[a-z]/g, jn = /[A-Z]/g;
function Un(i, e) {
  const t = mt(e);
  let r = e, l = W;
  if (t in i.normal)
    return i.property[i.normal[t]];
  if (t.length > 4 && t.slice(0, 4) === "data" && Fn.test(e)) {
    if (e.charAt(4) === "-") {
      const n = e.slice(5).replace(Gt, Hn);
      r = "data" + n.charAt(0).toUpperCase() + n.slice(1);
    } else {
      const n = e.slice(4);
      if (!Gt.test(n)) {
        let c = n.replace(jn, zn);
        c.charAt(0) !== "-" && (c = "-" + c), e = "data" + c;
      }
    }
    l = St;
  }
  return new l(r, e);
}
function zn(i) {
  return "-" + i.toLowerCase();
}
function Hn(i) {
  return i.charAt(1).toUpperCase();
}
const Wn = Sr([Nr, kr, Lr, Tr, $n], "html"), Pr = Sr([Nr, kr, Lr, Tr, Gn], "svg"), Ft = {}.hasOwnProperty;
function qn(i, e) {
  const t = e || {};
  function r(l, ...n) {
    let c = r.invalid;
    const a = r.handlers;
    if (l && Ft.call(l, i)) {
      const o = String(l[i]);
      c = Ft.call(a, o) ? a[o] : r.unknown;
    }
    if (c)
      return c.call(this, l, ...n);
  }
  return r.handlers = t.handlers || {}, r.invalid = t.invalid, r.unknown = t.unknown, r;
}
function Kn(i, e) {
  if (i = i.replace(
    e.subset ? Vn(e.subset) : /["&'<>`]/g,
    r
  ), e.subset || e.escapeOnly)
    return i;
  return i.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, t).replace(
    // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
    /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,
    r
  );
  function t(l, n, c) {
    return e.format(
      (l.charCodeAt(0) - 55296) * 1024 + l.charCodeAt(1) - 56320 + 65536,
      c.charCodeAt(n + 2),
      e
    );
  }
  function r(l, n, c) {
    return e.format(
      l.charCodeAt(0),
      c.charCodeAt(n + 1),
      e
    );
  }
}
function Vn(i) {
  const e = [];
  let t = -1;
  for (; ++t < i.length; )
    e.push(i[t].replace(/[|\\{}()[\]^$+*?.]/g, "\\$&"));
  return new RegExp("(?:" + e.join("|") + ")", "g");
}
function Yn(i, e, t) {
  const r = "&#x" + i.toString(16).toUpperCase();
  return t && e && !/[\dA-Fa-f]/.test(String.fromCharCode(e)) ? r : r + ";";
}
function Xn(i, e, t) {
  const r = "&#" + String(i);
  return t && e && !/\d/.test(String.fromCharCode(e)) ? r : r + ";";
}
const Jn = [
  "AElig",
  "AMP",
  "Aacute",
  "Acirc",
  "Agrave",
  "Aring",
  "Atilde",
  "Auml",
  "COPY",
  "Ccedil",
  "ETH",
  "Eacute",
  "Ecirc",
  "Egrave",
  "Euml",
  "GT",
  "Iacute",
  "Icirc",
  "Igrave",
  "Iuml",
  "LT",
  "Ntilde",
  "Oacute",
  "Ocirc",
  "Ograve",
  "Oslash",
  "Otilde",
  "Ouml",
  "QUOT",
  "REG",
  "THORN",
  "Uacute",
  "Ucirc",
  "Ugrave",
  "Uuml",
  "Yacute",
  "aacute",
  "acirc",
  "acute",
  "aelig",
  "agrave",
  "amp",
  "aring",
  "atilde",
  "auml",
  "brvbar",
  "ccedil",
  "cedil",
  "cent",
  "copy",
  "curren",
  "deg",
  "divide",
  "eacute",
  "ecirc",
  "egrave",
  "eth",
  "euml",
  "frac12",
  "frac14",
  "frac34",
  "gt",
  "iacute",
  "icirc",
  "iexcl",
  "igrave",
  "iquest",
  "iuml",
  "laquo",
  "lt",
  "macr",
  "micro",
  "middot",
  "nbsp",
  "not",
  "ntilde",
  "oacute",
  "ocirc",
  "ograve",
  "ordf",
  "ordm",
  "oslash",
  "otilde",
  "ouml",
  "para",
  "plusmn",
  "pound",
  "quot",
  "raquo",
  "reg",
  "sect",
  "shy",
  "sup1",
  "sup2",
  "sup3",
  "szlig",
  "thorn",
  "times",
  "uacute",
  "ucirc",
  "ugrave",
  "uml",
  "uuml",
  "yacute",
  "yen",
  "yuml"
], it = {
  nbsp: " ",
  iexcl: "¡",
  cent: "¢",
  pound: "£",
  curren: "¤",
  yen: "¥",
  brvbar: "¦",
  sect: "§",
  uml: "¨",
  copy: "©",
  ordf: "ª",
  laquo: "«",
  not: "¬",
  shy: "­",
  reg: "®",
  macr: "¯",
  deg: "°",
  plusmn: "±",
  sup2: "²",
  sup3: "³",
  acute: "´",
  micro: "µ",
  para: "¶",
  middot: "·",
  cedil: "¸",
  sup1: "¹",
  ordm: "º",
  raquo: "»",
  frac14: "¼",
  frac12: "½",
  frac34: "¾",
  iquest: "¿",
  Agrave: "À",
  Aacute: "Á",
  Acirc: "Â",
  Atilde: "Ã",
  Auml: "Ä",
  Aring: "Å",
  AElig: "Æ",
  Ccedil: "Ç",
  Egrave: "È",
  Eacute: "É",
  Ecirc: "Ê",
  Euml: "Ë",
  Igrave: "Ì",
  Iacute: "Í",
  Icirc: "Î",
  Iuml: "Ï",
  ETH: "Ð",
  Ntilde: "Ñ",
  Ograve: "Ò",
  Oacute: "Ó",
  Ocirc: "Ô",
  Otilde: "Õ",
  Ouml: "Ö",
  times: "×",
  Oslash: "Ø",
  Ugrave: "Ù",
  Uacute: "Ú",
  Ucirc: "Û",
  Uuml: "Ü",
  Yacute: "Ý",
  THORN: "Þ",
  szlig: "ß",
  agrave: "à",
  aacute: "á",
  acirc: "â",
  atilde: "ã",
  auml: "ä",
  aring: "å",
  aelig: "æ",
  ccedil: "ç",
  egrave: "è",
  eacute: "é",
  ecirc: "ê",
  euml: "ë",
  igrave: "ì",
  iacute: "í",
  icirc: "î",
  iuml: "ï",
  eth: "ð",
  ntilde: "ñ",
  ograve: "ò",
  oacute: "ó",
  ocirc: "ô",
  otilde: "õ",
  ouml: "ö",
  divide: "÷",
  oslash: "ø",
  ugrave: "ù",
  uacute: "ú",
  ucirc: "û",
  uuml: "ü",
  yacute: "ý",
  thorn: "þ",
  yuml: "ÿ",
  fnof: "ƒ",
  Alpha: "Α",
  Beta: "Β",
  Gamma: "Γ",
  Delta: "Δ",
  Epsilon: "Ε",
  Zeta: "Ζ",
  Eta: "Η",
  Theta: "Θ",
  Iota: "Ι",
  Kappa: "Κ",
  Lambda: "Λ",
  Mu: "Μ",
  Nu: "Ν",
  Xi: "Ξ",
  Omicron: "Ο",
  Pi: "Π",
  Rho: "Ρ",
  Sigma: "Σ",
  Tau: "Τ",
  Upsilon: "Υ",
  Phi: "Φ",
  Chi: "Χ",
  Psi: "Ψ",
  Omega: "Ω",
  alpha: "α",
  beta: "β",
  gamma: "γ",
  delta: "δ",
  epsilon: "ε",
  zeta: "ζ",
  eta: "η",
  theta: "θ",
  iota: "ι",
  kappa: "κ",
  lambda: "λ",
  mu: "μ",
  nu: "ν",
  xi: "ξ",
  omicron: "ο",
  pi: "π",
  rho: "ρ",
  sigmaf: "ς",
  sigma: "σ",
  tau: "τ",
  upsilon: "υ",
  phi: "φ",
  chi: "χ",
  psi: "ψ",
  omega: "ω",
  thetasym: "ϑ",
  upsih: "ϒ",
  piv: "ϖ",
  bull: "•",
  hellip: "…",
  prime: "′",
  Prime: "″",
  oline: "‾",
  frasl: "⁄",
  weierp: "℘",
  image: "ℑ",
  real: "ℜ",
  trade: "™",
  alefsym: "ℵ",
  larr: "←",
  uarr: "↑",
  rarr: "→",
  darr: "↓",
  harr: "↔",
  crarr: "↵",
  lArr: "⇐",
  uArr: "⇑",
  rArr: "⇒",
  dArr: "⇓",
  hArr: "⇔",
  forall: "∀",
  part: "∂",
  exist: "∃",
  empty: "∅",
  nabla: "∇",
  isin: "∈",
  notin: "∉",
  ni: "∋",
  prod: "∏",
  sum: "∑",
  minus: "−",
  lowast: "∗",
  radic: "√",
  prop: "∝",
  infin: "∞",
  ang: "∠",
  and: "∧",
  or: "∨",
  cap: "∩",
  cup: "∪",
  int: "∫",
  there4: "∴",
  sim: "∼",
  cong: "≅",
  asymp: "≈",
  ne: "≠",
  equiv: "≡",
  le: "≤",
  ge: "≥",
  sub: "⊂",
  sup: "⊃",
  nsub: "⊄",
  sube: "⊆",
  supe: "⊇",
  oplus: "⊕",
  otimes: "⊗",
  perp: "⊥",
  sdot: "⋅",
  lceil: "⌈",
  rceil: "⌉",
  lfloor: "⌊",
  rfloor: "⌋",
  lang: "〈",
  rang: "〉",
  loz: "◊",
  spades: "♠",
  clubs: "♣",
  hearts: "♥",
  diams: "♦",
  quot: '"',
  amp: "&",
  lt: "<",
  gt: ">",
  OElig: "Œ",
  oelig: "œ",
  Scaron: "Š",
  scaron: "š",
  Yuml: "Ÿ",
  circ: "ˆ",
  tilde: "˜",
  ensp: " ",
  emsp: " ",
  thinsp: " ",
  zwnj: "‌",
  zwj: "‍",
  lrm: "‎",
  rlm: "‏",
  ndash: "–",
  mdash: "—",
  lsquo: "‘",
  rsquo: "’",
  sbquo: "‚",
  ldquo: "“",
  rdquo: "”",
  bdquo: "„",
  dagger: "†",
  Dagger: "‡",
  permil: "‰",
  lsaquo: "‹",
  rsaquo: "›",
  euro: "€"
}, Qn = [
  "cent",
  "copy",
  "divide",
  "gt",
  "lt",
  "not",
  "para",
  "times"
], Er = {}.hasOwnProperty, gt = {};
let Pe;
for (Pe in it)
  Er.call(it, Pe) && (gt[it[Pe]] = Pe);
function Zn(i, e, t, r) {
  const l = String.fromCharCode(i);
  if (Er.call(gt, l)) {
    const n = gt[l], c = "&" + n;
    return t && Jn.includes(n) && !Qn.includes(n) && (!r || e && e !== 61 && /[^\da-z]/i.test(String.fromCharCode(e))) ? c : c + ";";
  }
  return "";
}
function ec(i, e, t) {
  let r = Yn(i, e, t.omitOptionalSemicolons), l;
  if ((t.useNamedReferences || t.useShortestReferences) && (l = Zn(
    i,
    e,
    t.omitOptionalSemicolons,
    t.attribute
  )), (t.useShortestReferences || !l) && t.useShortestReferences) {
    const n = Xn(i, e, t.omitOptionalSemicolons);
    n.length < r.length && (r = n);
  }
  return l && (!t.useShortestReferences || l.length < r.length) ? l : r;
}
function me(i, e) {
  return Kn(i, Object.assign({ format: ec }, e));
}
const tc = /^>|^->|<!--|-->|--!>|<!-$/g, rc = [">"], ic = ["<", ">"];
function lc(i, e, t, r) {
  return r.settings.bogusComments ? "<?" + me(
    i.value,
    Object.assign({}, r.settings.characterReferences, {
      subset: rc
    })
  ) + ">" : "<!--" + i.value.replace(tc, l) + "-->";
  function l(n) {
    return me(
      n,
      Object.assign({}, r.settings.characterReferences, {
        subset: ic
      })
    );
  }
}
function nc(i, e, t, r) {
  return "<!" + (r.settings.upperDoctype ? "DOCTYPE" : "doctype") + (r.settings.tightDoctype ? "" : " ") + "html>";
}
function jt(i, e) {
  const t = String(i);
  if (typeof e != "string")
    throw new TypeError("Expected character");
  let r = 0, l = t.indexOf(e);
  for (; l !== -1; )
    r++, l = t.indexOf(e, l + e.length);
  return r;
}
function cc(i, e) {
  const t = e || {};
  return (i[i.length - 1] === "" ? [...i, ""] : i).join(
    (t.padRight ? " " : "") + "," + (t.padLeft === !1 ? "" : " ")
  ).trim();
}
function oc(i) {
  return i.join(" ").trim();
}
const ac = /[ \t\n\f\r]/g;
function vt(i) {
  return typeof i == "object" ? i.type === "text" ? Ut(i.value) : !1 : Ut(i);
}
function Ut(i) {
  return i.replace(ac, "") === "";
}
const O = Ir(1), Or = Ir(-1), sc = [];
function Ir(i) {
  return e;
  function e(t, r, l) {
    const n = t ? t.children : sc;
    let c = (r || 0) + i, a = n[c];
    if (!l)
      for (; a && vt(a); )
        c += i, a = n[c];
    return a;
  }
}
const uc = {}.hasOwnProperty;
function Mr(i) {
  return e;
  function e(t, r, l) {
    return uc.call(i, t.tagName) && i[t.tagName](t, r, l);
  }
}
const kt = Mr({
  body: fc,
  caption: lt,
  colgroup: lt,
  dd: gc,
  dt: hc,
  head: lt,
  html: pc,
  li: mc,
  optgroup: yc,
  option: Cc,
  p: dc,
  rp: zt,
  rt: zt,
  tbody: _c,
  td: Ht,
  tfoot: bc,
  th: Ht,
  thead: xc,
  tr: wc
});
function lt(i, e, t) {
  const r = O(t, e, !0);
  return !r || r.type !== "comment" && !(r.type === "text" && vt(r.value.charAt(0)));
}
function pc(i, e, t) {
  const r = O(t, e);
  return !r || r.type !== "comment";
}
function fc(i, e, t) {
  const r = O(t, e);
  return !r || r.type !== "comment";
}
function dc(i, e, t) {
  const r = O(t, e);
  return r ? r.type === "element" && (r.tagName === "address" || r.tagName === "article" || r.tagName === "aside" || r.tagName === "blockquote" || r.tagName === "details" || r.tagName === "div" || r.tagName === "dl" || r.tagName === "fieldset" || r.tagName === "figcaption" || r.tagName === "figure" || r.tagName === "footer" || r.tagName === "form" || r.tagName === "h1" || r.tagName === "h2" || r.tagName === "h3" || r.tagName === "h4" || r.tagName === "h5" || r.tagName === "h6" || r.tagName === "header" || r.tagName === "hgroup" || r.tagName === "hr" || r.tagName === "main" || r.tagName === "menu" || r.tagName === "nav" || r.tagName === "ol" || r.tagName === "p" || r.tagName === "pre" || r.tagName === "section" || r.tagName === "table" || r.tagName === "ul") : !t || // Confusing parent.
  !(t.type === "element" && (t.tagName === "a" || t.tagName === "audio" || t.tagName === "del" || t.tagName === "ins" || t.tagName === "map" || t.tagName === "noscript" || t.tagName === "video"));
}
function mc(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && r.tagName === "li";
}
function hc(i, e, t) {
  const r = O(t, e);
  return !!(r && r.type === "element" && (r.tagName === "dt" || r.tagName === "dd"));
}
function gc(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && (r.tagName === "dt" || r.tagName === "dd");
}
function zt(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && (r.tagName === "rp" || r.tagName === "rt");
}
function yc(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && r.tagName === "optgroup";
}
function Cc(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && (r.tagName === "option" || r.tagName === "optgroup");
}
function xc(i, e, t) {
  const r = O(t, e);
  return !!(r && r.type === "element" && (r.tagName === "tbody" || r.tagName === "tfoot"));
}
function _c(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && (r.tagName === "tbody" || r.tagName === "tfoot");
}
function bc(i, e, t) {
  return !O(t, e);
}
function wc(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && r.tagName === "tr";
}
function Ht(i, e, t) {
  const r = O(t, e);
  return !r || r.type === "element" && (r.tagName === "td" || r.tagName === "th");
}
const Sc = Mr({
  body: Nc,
  colgroup: Rc,
  head: kc,
  html: vc,
  tbody: Ac
});
function vc(i) {
  const e = O(i, -1);
  return !e || e.type !== "comment";
}
function kc(i) {
  const e = i.children, t = [];
  let r = -1;
  for (; ++r < e.length; ) {
    const l = e[r];
    if (l.type === "element" && (l.tagName === "title" || l.tagName === "base")) {
      if (t.includes(l.tagName)) return !1;
      t.push(l.tagName);
    }
  }
  return e.length > 0;
}
function Nc(i) {
  const e = O(i, -1, !0);
  return !e || e.type !== "comment" && !(e.type === "text" && vt(e.value.charAt(0))) && !(e.type === "element" && (e.tagName === "meta" || e.tagName === "link" || e.tagName === "script" || e.tagName === "style" || e.tagName === "template"));
}
function Rc(i, e, t) {
  const r = Or(t, e), l = O(i, -1, !0);
  return t && r && r.type === "element" && r.tagName === "colgroup" && kt(r, t.children.indexOf(r), t) ? !1 : !!(l && l.type === "element" && l.tagName === "col");
}
function Ac(i, e, t) {
  const r = Or(t, e), l = O(i, -1);
  return t && r && r.type === "element" && (r.tagName === "thead" || r.tagName === "tbody") && kt(r, t.children.indexOf(r), t) ? !1 : !!(l && l.type === "element" && l.tagName === "tr");
}
const Ee = {
  // See: <https://html.spec.whatwg.org/#attribute-name-state>.
  name: [
    [`	
\f\r &/=>`.split(""), `	
\f\r "&'/=>\``.split("")],
    [`\0	
\f\r "&'/<=>`.split(""), `\0	
\f\r "&'/<=>\``.split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.
  unquoted: [
    [`	
\f\r &>`.split(""), `\0	
\f\r "&'<=>\``.split("")],
    [`\0	
\f\r "&'<=>\``.split(""), `\0	
\f\r "&'<=>\``.split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.
  single: [
    ["&'".split(""), "\"&'`".split("")],
    ["\0&'".split(""), "\0\"&'`".split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.
  double: [
    ['"&'.split(""), "\"&'`".split("")],
    ['\0"&'.split(""), "\0\"&'`".split("")]
  ]
};
function Lc(i, e, t, r) {
  const l = r.schema, n = l.space === "svg" ? !1 : r.settings.omitOptionalTags;
  let c = l.space === "svg" ? r.settings.closeEmptyElements : r.settings.voids.includes(i.tagName.toLowerCase());
  const a = [];
  let o;
  l.space === "html" && i.tagName === "svg" && (r.schema = Pr);
  const s = Tc(r, i.properties), u = r.all(
    l.space === "html" && i.tagName === "template" ? i.content : i
  );
  return r.schema = l, u && (c = !1), (s || !n || !Sc(i, e, t)) && (a.push("<", i.tagName, s ? " " + s : ""), c && (l.space === "svg" || r.settings.closeSelfClosing) && (o = s.charAt(s.length - 1), (!r.settings.tightSelfClosing || o === "/" || o && o !== '"' && o !== "'") && a.push(" "), a.push("/")), a.push(">")), a.push(u), !c && (!n || !kt(i, e, t)) && a.push("</" + i.tagName + ">"), a.join("");
}
function Tc(i, e) {
  const t = [];
  let r = -1, l;
  if (e) {
    for (l in e)
      if (e[l] !== null && e[l] !== void 0) {
        const n = Pc(i, l, e[l]);
        n && t.push(n);
      }
  }
  for (; ++r < t.length; ) {
    const n = i.settings.tightAttributes ? t[r].charAt(t[r].length - 1) : void 0;
    r !== t.length - 1 && n !== '"' && n !== "'" && (t[r] += " ");
  }
  return t.join("");
}
function Pc(i, e, t) {
  const r = Un(i.schema, e), l = i.settings.allowParseErrors && i.schema.space === "html" ? 0 : 1, n = i.settings.allowDangerousCharacters ? 0 : 1;
  let c = i.quote, a;
  if (r.overloadedBoolean && (t === r.attribute || t === "") ? t = !0 : (r.boolean || r.overloadedBoolean && typeof t != "string") && (t = !!t), t == null || t === !1 || typeof t == "number" && Number.isNaN(t))
    return "";
  const o = me(
    r.attribute,
    Object.assign({}, i.settings.characterReferences, {
      // Always encode without parse errors in non-HTML.
      subset: Ee.name[l][n]
    })
  );
  return t === !0 || (t = Array.isArray(t) ? (r.commaSeparated ? cc : oc)(t, {
    padLeft: !i.settings.tightCommaSeparatedLists
  }) : String(t), i.settings.collapseEmptyAttributes && !t) ? o : (i.settings.preferUnquoted && (a = me(
    t,
    Object.assign({}, i.settings.characterReferences, {
      attribute: !0,
      subset: Ee.unquoted[l][n]
    })
  )), a !== t && (i.settings.quoteSmart && jt(t, c) > jt(t, i.alternative) && (c = i.alternative), a = c + me(
    t,
    Object.assign({}, i.settings.characterReferences, {
      // Always encode without parse errors in non-HTML.
      subset: (c === "'" ? Ee.single : Ee.double)[l][n],
      attribute: !0
    })
  ) + c), o + (a && "=" + a));
}
const Ec = ["<", "&"];
function Br(i, e, t, r) {
  return t && t.type === "element" && (t.tagName === "script" || t.tagName === "style") ? i.value : me(
    i.value,
    Object.assign({}, r.settings.characterReferences, {
      subset: Ec
    })
  );
}
function Oc(i, e, t, r) {
  return r.settings.allowDangerousHtml ? i.value : Br(i, e, t, r);
}
function Ic(i, e, t, r) {
  return r.all(i);
}
const Mc = qn("type", {
  invalid: Bc,
  unknown: Dc,
  handlers: { comment: lc, doctype: nc, element: Lc, raw: Oc, root: Ic, text: Br }
});
function Bc(i) {
  throw new Error("Expected node, not `" + i + "`");
}
function Dc(i) {
  const e = (
    /** @type {Nodes} */
    i
  );
  throw new Error("Cannot compile unknown node `" + e.type + "`");
}
const $c = {}, Gc = {}, Fc = [];
function jc(i, e) {
  const t = $c, r = t.quote || '"', l = r === '"' ? "'" : '"';
  if (r !== '"' && r !== "'")
    throw new Error("Invalid quote `" + r + "`, expected `'` or `\"`");
  return {
    one: Uc,
    all: zc,
    settings: {
      omitOptionalTags: t.omitOptionalTags || !1,
      allowParseErrors: t.allowParseErrors || !1,
      allowDangerousCharacters: t.allowDangerousCharacters || !1,
      quoteSmart: t.quoteSmart || !1,
      preferUnquoted: t.preferUnquoted || !1,
      tightAttributes: t.tightAttributes || !1,
      upperDoctype: t.upperDoctype || !1,
      tightDoctype: t.tightDoctype || !1,
      bogusComments: t.bogusComments || !1,
      tightCommaSeparatedLists: t.tightCommaSeparatedLists || !1,
      tightSelfClosing: t.tightSelfClosing || !1,
      collapseEmptyAttributes: t.collapseEmptyAttributes || !1,
      allowDangerousHtml: t.allowDangerousHtml || !1,
      voids: t.voids || Mn,
      characterReferences: t.characterReferences || Gc,
      closeSelfClosing: t.closeSelfClosing || !1,
      closeEmptyElements: t.closeEmptyElements || !1
    },
    schema: t.space === "svg" ? Pr : Wn,
    quote: r,
    alternative: l
  }.one(
    Array.isArray(i) ? { type: "root", children: i } : i,
    void 0,
    void 0
  );
}
function Uc(i, e, t) {
  return Mc(i, e, t, this);
}
function zc(i) {
  const e = [], t = i && i.children || Fc;
  let r = -1;
  for (; ++r < t.length; )
    e[r] = this.one(t[r], r, i);
  return e.join("");
}
function Hc(i, e, t) {
  var n;
  const r = {
    meta: {},
    options: t,
    codeToHast: (c, a) => He(i, c, a),
    codeToTokens: (c, a) => Ue(i, c, a)
  };
  let l = jc(He(i, e, t, r));
  for (const c of ze(t))
    l = ((n = c.postprocess) == null ? void 0 : n.call(r, l, t)) || l;
  return l;
}
async function Wc(i) {
  let e, t;
  const r = {};
  function l(m) {
    t = m, r.HEAPU8 = new Uint8Array(m), r.HEAPU32 = new Uint32Array(m);
  }
  function n() {
    return typeof performance < "u" ? performance.now() : Date.now();
  }
  function c(m, C, w) {
    r.HEAPU8.copyWithin(m, C, C + w);
  }
  function a() {
    return 2147483648;
  }
  function o(m) {
    try {
      return e.grow(m - t.byteLength + 65535 >>> 16), l(e.buffer), 1;
    } catch {
    }
  }
  function s(m) {
    const C = r.HEAPU8.length;
    m = m >>> 0;
    const w = a();
    if (m > w)
      return !1;
    const S = (x, b) => x + (b - x % b) % b;
    for (let x = 1; x <= 4; x *= 2) {
      let b = C * (1 + 0.2 / x);
      b = Math.min(b, m + 100663296);
      const _ = Math.min(w, S(Math.max(m, b), 65536));
      if (o(_))
        return !0;
    }
    return !1;
  }
  const u = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
  function f(m, C, w = 1024) {
    const S = C + w;
    let x = C;
    for (; m[x] && !(x >= S); )
      ++x;
    if (x - C > 16 && m.buffer && u)
      return u.decode(m.subarray(C, x));
    let b = "";
    for (; C < x; ) {
      let _ = m[C++];
      if (!(_ & 128)) {
        b += String.fromCharCode(_);
        continue;
      }
      const k = m[C++] & 63;
      if ((_ & 224) === 192) {
        b += String.fromCharCode((_ & 31) << 6 | k);
        continue;
      }
      const j = m[C++] & 63;
      if ((_ & 240) === 224 ? _ = (_ & 15) << 12 | k << 6 | j : _ = (_ & 7) << 18 | k << 12 | j << 6 | m[C++] & 63, _ < 65536)
        b += String.fromCharCode(_);
      else {
        const V = _ - 65536;
        b += String.fromCharCode(55296 | V >> 10, 56320 | V & 1023);
      }
    }
    return b;
  }
  function d(m, C) {
    return m ? f(r.HEAPU8, m, C) : "";
  }
  const h = {
    emscripten_get_now: n,
    emscripten_memcpy_big: c,
    emscripten_resize_heap: s,
    fd_write: () => 0
  };
  async function g() {
    const C = await i({
      env: h,
      wasi_snapshot_preview1: h
    });
    e = C.memory, l(e.buffer), Object.assign(r, C), r.UTF8ToString = d;
  }
  return await g(), r;
}
let M = null, qc = !1;
function Kc(i) {
  throw new L(i.UTF8ToString(i.getLastOnigError()));
}
class Ye {
  constructor(e) {
    p(this, "utf16Length");
    p(this, "utf8Length");
    p(this, "utf16Value");
    p(this, "utf8Value");
    p(this, "utf16OffsetToUtf8");
    p(this, "utf8OffsetToUtf16");
    const t = e.length, r = Ye._utf8ByteLength(e), l = r !== t, n = l ? new Uint32Array(t + 1) : null;
    l && (n[t] = r);
    const c = l ? new Uint32Array(r + 1) : null;
    l && (c[r] = t);
    const a = new Uint8Array(r);
    let o = 0;
    for (let s = 0; s < t; s++) {
      const u = e.charCodeAt(s);
      let f = u, d = !1;
      if (u >= 55296 && u <= 56319 && s + 1 < t) {
        const h = e.charCodeAt(s + 1);
        h >= 56320 && h <= 57343 && (f = (u - 55296 << 10) + 65536 | h - 56320, d = !0);
      }
      l && (n[s] = o, d && (n[s + 1] = o), f <= 127 ? c[o + 0] = s : f <= 2047 ? (c[o + 0] = s, c[o + 1] = s) : f <= 65535 ? (c[o + 0] = s, c[o + 1] = s, c[o + 2] = s) : (c[o + 0] = s, c[o + 1] = s, c[o + 2] = s, c[o + 3] = s)), f <= 127 ? a[o++] = f : f <= 2047 ? (a[o++] = 192 | (f & 1984) >>> 6, a[o++] = 128 | (f & 63) >>> 0) : f <= 65535 ? (a[o++] = 224 | (f & 61440) >>> 12, a[o++] = 128 | (f & 4032) >>> 6, a[o++] = 128 | (f & 63) >>> 0) : (a[o++] = 240 | (f & 1835008) >>> 18, a[o++] = 128 | (f & 258048) >>> 12, a[o++] = 128 | (f & 4032) >>> 6, a[o++] = 128 | (f & 63) >>> 0), d && s++;
    }
    this.utf16Length = t, this.utf8Length = r, this.utf16Value = e, this.utf8Value = a, this.utf16OffsetToUtf8 = n, this.utf8OffsetToUtf16 = c;
  }
  static _utf8ByteLength(e) {
    let t = 0;
    for (let r = 0, l = e.length; r < l; r++) {
      const n = e.charCodeAt(r);
      let c = n, a = !1;
      if (n >= 55296 && n <= 56319 && r + 1 < l) {
        const o = e.charCodeAt(r + 1);
        o >= 56320 && o <= 57343 && (c = (n - 55296 << 10) + 65536 | o - 56320, a = !0);
      }
      c <= 127 ? t += 1 : c <= 2047 ? t += 2 : c <= 65535 ? t += 3 : t += 4, a && r++;
    }
    return t;
  }
  createString(e) {
    const t = e.omalloc(this.utf8Length);
    return e.HEAPU8.set(this.utf8Value, t), t;
  }
}
const G = class G {
  constructor(e) {
    p(this, "id", ++G.LAST_ID);
    p(this, "_onigBinding");
    p(this, "content");
    p(this, "utf16Length");
    p(this, "utf8Length");
    p(this, "utf16OffsetToUtf8");
    p(this, "utf8OffsetToUtf16");
    p(this, "ptr");
    if (!M)
      throw new L("Must invoke loadWasm first.");
    this._onigBinding = M, this.content = e;
    const t = new Ye(e);
    this.utf16Length = t.utf16Length, this.utf8Length = t.utf8Length, this.utf16OffsetToUtf8 = t.utf16OffsetToUtf8, this.utf8OffsetToUtf16 = t.utf8OffsetToUtf16, this.utf8Length < 1e4 && !G._sharedPtrInUse ? (G._sharedPtr || (G._sharedPtr = M.omalloc(1e4)), G._sharedPtrInUse = !0, M.HEAPU8.set(t.utf8Value, G._sharedPtr), this.ptr = G._sharedPtr) : this.ptr = t.createString(M);
  }
  convertUtf8OffsetToUtf16(e) {
    return this.utf8OffsetToUtf16 ? e < 0 ? 0 : e > this.utf8Length ? this.utf16Length : this.utf8OffsetToUtf16[e] : e;
  }
  convertUtf16OffsetToUtf8(e) {
    return this.utf16OffsetToUtf8 ? e < 0 ? 0 : e > this.utf16Length ? this.utf8Length : this.utf16OffsetToUtf8[e] : e;
  }
  dispose() {
    this.ptr === G._sharedPtr ? G._sharedPtrInUse = !1 : this._onigBinding.ofree(this.ptr);
  }
};
p(G, "LAST_ID", 0), p(G, "_sharedPtr", 0), // a pointer to a string of 10000 bytes
p(G, "_sharedPtrInUse", !1);
let We = G;
class Vc {
  constructor(e) {
    p(this, "_onigBinding");
    p(this, "_ptr");
    if (!M)
      throw new L("Must invoke loadWasm first.");
    const t = [], r = [];
    for (let a = 0, o = e.length; a < o; a++) {
      const s = new Ye(e[a]);
      t[a] = s.createString(M), r[a] = s.utf8Length;
    }
    const l = M.omalloc(4 * e.length);
    M.HEAPU32.set(t, l / 4);
    const n = M.omalloc(4 * e.length);
    M.HEAPU32.set(r, n / 4);
    const c = M.createOnigScanner(l, n, e.length);
    for (let a = 0, o = e.length; a < o; a++)
      M.ofree(t[a]);
    M.ofree(n), M.ofree(l), c === 0 && Kc(M), this._onigBinding = M, this._ptr = c;
  }
  dispose() {
    this._onigBinding.freeOnigScanner(this._ptr);
  }
  findNextMatchSync(e, t, r) {
    let l = qc, n = 0;
    if (typeof r == "number" ? (r & 8 && (l = !0), n = r) : typeof r == "boolean" && (l = r), typeof e == "string") {
      e = new We(e);
      const c = this._findNextMatchSync(e, t, l, n);
      return e.dispose(), c;
    }
    return this._findNextMatchSync(e, t, l, n);
  }
  _findNextMatchSync(e, t, r, l) {
    const n = this._onigBinding;
    let c;
    if (r ? c = n.findNextOnigScannerMatchDbg(this._ptr, e.id, e.ptr, e.utf8Length, e.convertUtf16OffsetToUtf8(t), l) : c = n.findNextOnigScannerMatch(this._ptr, e.id, e.ptr, e.utf8Length, e.convertUtf16OffsetToUtf8(t), l), c === 0)
      return null;
    const a = n.HEAPU32;
    let o = c / 4;
    const s = a[o++], u = a[o++], f = [];
    for (let d = 0; d < u; d++) {
      const h = e.convertUtf8OffsetToUtf16(a[o++]), g = e.convertUtf8OffsetToUtf16(a[o++]);
      f[d] = {
        start: h,
        end: g,
        length: g - h
      };
    }
    return {
      index: s,
      captureIndices: f
    };
  }
}
function Yc(i) {
  return typeof i.instantiator == "function";
}
function Xc(i) {
  return typeof i.default == "function";
}
function Jc(i) {
  return typeof i.data < "u";
}
function Qc(i) {
  return typeof Response < "u" && i instanceof Response;
}
function Zc(i) {
  var e;
  return typeof ArrayBuffer < "u" && (i instanceof ArrayBuffer || ArrayBuffer.isView(i)) || typeof Buffer < "u" && ((e = Buffer.isBuffer) == null ? void 0 : e.call(Buffer, i)) || typeof SharedArrayBuffer < "u" && i instanceof SharedArrayBuffer || typeof Uint32Array < "u" && i instanceof Uint32Array;
}
let Oe;
function eo(i) {
  if (Oe)
    return Oe;
  async function e() {
    M = await Wc(async (t) => {
      let r = i;
      return r = await r, typeof r == "function" && (r = await r(t)), typeof r == "function" && (r = await r(t)), Yc(r) ? r = await r.instantiator(t) : Xc(r) ? r = await r.default(t) : (Jc(r) && (r = r.data), Qc(r) ? typeof WebAssembly.instantiateStreaming == "function" ? r = await to(r)(t) : r = await ro(r)(t) : Zc(r) ? r = await nt(r)(t) : r instanceof WebAssembly.Module ? r = await nt(r)(t) : "default" in r && r.default instanceof WebAssembly.Module && (r = await nt(r.default)(t))), "instance" in r && (r = r.instance), "exports" in r && (r = r.exports), r;
    });
  }
  return Oe = e(), Oe;
}
function nt(i) {
  return (e) => WebAssembly.instantiate(i, e);
}
function to(i) {
  return (e) => WebAssembly.instantiateStreaming(i, e);
}
function ro(i) {
  return async (e) => {
    const t = await i.arrayBuffer();
    return WebAssembly.instantiate(t, e);
  };
}
function io(i) {
  return new We(i);
}
function lo(i) {
  return new Vc(i);
}
const Wt = { light: "#333333", dark: "#bbbbbb" }, qt = { light: "#fffffe", dark: "#1e1e1e" }, Kt = "__shiki_resolved";
function Dr(i) {
  var a, o, s, u, f;
  if (i != null && i[Kt])
    return i;
  const e = {
    ...i
  };
  e.tokenColors && !e.settings && (e.settings = e.tokenColors, delete e.tokenColors), e.type || (e.type = "dark"), e.colorReplacements = { ...e.colorReplacements }, e.settings || (e.settings = []);
  let { bg: t, fg: r } = e;
  if (!t || !r) {
    const d = e.settings ? e.settings.find((h) => !h.name && !h.scope) : void 0;
    (a = d == null ? void 0 : d.settings) != null && a.foreground && (r = d.settings.foreground), (o = d == null ? void 0 : d.settings) != null && o.background && (t = d.settings.background), !r && ((s = e == null ? void 0 : e.colors) != null && s["editor.foreground"]) && (r = e.colors["editor.foreground"]), !t && ((u = e == null ? void 0 : e.colors) != null && u["editor.background"]) && (t = e.colors["editor.background"]), r || (r = e.type === "light" ? Wt.light : Wt.dark), t || (t = e.type === "light" ? qt.light : qt.dark), e.fg = r, e.bg = t;
  }
  e.settings[0] && e.settings[0].settings && !e.settings[0].scope || e.settings.unshift({
    settings: {
      foreground: e.fg,
      background: e.bg
    }
  });
  let l = 0;
  const n = /* @__PURE__ */ new Map();
  function c(d) {
    var g;
    if (n.has(d))
      return n.get(d);
    l += 1;
    const h = `#${l.toString(16).padStart(8, "0").toLowerCase()}`;
    return (g = e.colorReplacements) != null && g[`#${h}`] ? c(d) : (n.set(d, h), h);
  }
  e.settings = e.settings.map((d) => {
    var C, w;
    const h = ((C = d.settings) == null ? void 0 : C.foreground) && !d.settings.foreground.startsWith("#"), g = ((w = d.settings) == null ? void 0 : w.background) && !d.settings.background.startsWith("#");
    if (!h && !g)
      return d;
    const m = {
      ...d,
      settings: {
        ...d.settings
      }
    };
    if (h) {
      const S = c(d.settings.foreground);
      e.colorReplacements[S] = d.settings.foreground, m.settings.foreground = S;
    }
    if (g) {
      const S = c(d.settings.background);
      e.colorReplacements[S] = d.settings.background, m.settings.background = S;
    }
    return m;
  });
  for (const d of Object.keys(e.colors || {}))
    if ((d === "editor.foreground" || d === "editor.background" || d.startsWith("terminal.ansi")) && !((f = e.colors[d]) != null && f.startsWith("#"))) {
      const h = c(e.colors[d]);
      e.colorReplacements[h] = e.colors[d], e.colors[d] = h;
    }
  return Object.defineProperty(e, Kt, {
    enumerable: !1,
    writable: !1,
    value: !0
  }), e;
}
class no extends sn {
  constructor(t, r, l, n = {}) {
    super(t);
    p(this, "_resolver");
    p(this, "_themes");
    p(this, "_langs");
    p(this, "_alias");
    p(this, "_resolvedThemes", /* @__PURE__ */ new Map());
    p(this, "_resolvedGrammars", /* @__PURE__ */ new Map());
    p(this, "_langMap", /* @__PURE__ */ new Map());
    p(this, "_langGraph", /* @__PURE__ */ new Map());
    p(this, "_textmateThemeCache", /* @__PURE__ */ new WeakMap());
    p(this, "_loadedThemesCache", null);
    p(this, "_loadedLanguagesCache", null);
    this._resolver = t, this._themes = r, this._langs = l, this._alias = n, r.forEach((c) => this.loadTheme(c)), l.forEach((c) => this.loadLanguage(c));
  }
  getTheme(t) {
    return typeof t == "string" ? this._resolvedThemes.get(t) : this.loadTheme(t);
  }
  loadTheme(t) {
    const r = Dr(t);
    return r.name && (this._resolvedThemes.set(r.name, r), this._loadedThemesCache = null), r;
  }
  getLoadedThemes() {
    return this._loadedThemesCache || (this._loadedThemesCache = [...this._resolvedThemes.keys()]), this._loadedThemesCache;
  }
  // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`
  // is expensive. Themes can switch often especially for dual-theme support.
  //
  // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,
  // we omit here so it's easier to cache the themes.
  setTheme(t) {
    let r = this._textmateThemeCache.get(t);
    r || (r = Ge.createFromRawTheme(t), this._textmateThemeCache.set(t, r)), this._syncRegistry.setTheme(r);
  }
  getGrammar(t) {
    if (this._alias[t]) {
      const r = /* @__PURE__ */ new Set([t]);
      for (; this._alias[t]; ) {
        if (t = this._alias[t], r.has(t))
          throw new L(`Circular alias \`${Array.from(r).join(" -> ")} -> ${t}\``);
        r.add(t);
      }
    }
    return this._resolvedGrammars.get(t);
  }
  async loadLanguage(t) {
    var c, a, o, s;
    if (this.getGrammar(t.name))
      return;
    const r = new Set([...this._langMap.values()].filter((u) => {
      var f;
      return (f = u.embeddedLangsLazy) == null ? void 0 : f.includes(t.name);
    }));
    this._resolver.addLanguage(t);
    const l = {
      balancedBracketSelectors: t.balancedBracketSelectors || ["*"],
      unbalancedBracketSelectors: t.unbalancedBracketSelectors || []
    };
    this._syncRegistry._rawGrammars.set(t.scopeName, t);
    const n = await this.loadGrammarWithConfiguration(t.scopeName, 1, l);
    if (n.name = t.name, this._resolvedGrammars.set(t.name, n), t.aliases && t.aliases.forEach((u) => {
      this._alias[u] = t.name;
    }), this._loadedLanguagesCache = null, r.size)
      for (const u of r)
        this._resolvedGrammars.delete(u.name), this._loadedLanguagesCache = null, (a = (c = this._syncRegistry) == null ? void 0 : c._injectionGrammars) == null || a.delete(u.scopeName), (s = (o = this._syncRegistry) == null ? void 0 : o._grammars) == null || s.delete(u.scopeName), await this.loadLanguage(this._langMap.get(u.name));
  }
  async init() {
    this._themes.map((t) => this.loadTheme(t)), await this.loadLanguages(this._langs);
  }
  dispose() {
    super.dispose(), this._resolvedThemes.clear(), this._resolvedGrammars.clear(), this._langMap.clear(), this._langGraph.clear(), this._loadedThemesCache = null;
  }
  async loadLanguages(t) {
    for (const n of t)
      this.resolveEmbeddedLanguages(n);
    const r = Array.from(this._langGraph.entries()), l = r.filter(([n, c]) => !c);
    if (l.length) {
      const n = r.filter(([c, a]) => {
        var o;
        return a && ((o = a.embeddedLangs) == null ? void 0 : o.some((s) => l.map(([u]) => u).includes(s)));
      }).filter((c) => !l.includes(c));
      throw new L(`Missing languages ${l.map(([c]) => `\`${c}\``).join(", ")}, required by ${n.map(([c]) => `\`${c}\``).join(", ")}`);
    }
    for (const [n, c] of r)
      this._resolver.addLanguage(c);
    for (const [n, c] of r)
      await this.loadLanguage(c);
  }
  getLoadedLanguages() {
    return this._loadedLanguagesCache || (this._loadedLanguagesCache = [
      .../* @__PURE__ */ new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)])
    ]), this._loadedLanguagesCache;
  }
  resolveEmbeddedLanguages(t) {
    if (this._langMap.set(t.name, t), this._langGraph.set(t.name, t), t.embeddedLangs)
      for (const r of t.embeddedLangs)
        this._langGraph.set(r, this._langMap.get(r));
  }
}
class co {
  constructor(e, t) {
    p(this, "_langs", /* @__PURE__ */ new Map());
    p(this, "_scopeToLang", /* @__PURE__ */ new Map());
    p(this, "_injections", /* @__PURE__ */ new Map());
    p(this, "_onigLibPromise");
    this._onigLibPromise = e, t.forEach((r) => this.addLanguage(r));
  }
  get onigLib() {
    return this._onigLibPromise;
  }
  getLangRegistration(e) {
    return this._langs.get(e);
  }
  async loadGrammar(e) {
    return this._scopeToLang.get(e);
  }
  addLanguage(e) {
    this._langs.set(e.name, e), e.aliases && e.aliases.forEach((t) => {
      this._langs.set(t, e);
    }), this._scopeToLang.set(e.scopeName, e), e.injectTo && e.injectTo.forEach((t) => {
      this._injections.get(t) || this._injections.set(t, []), this._injections.get(t).push(e.scopeName);
    });
  }
  getInjections(e) {
    const t = e.split(".");
    let r = [];
    for (let l = 1; l <= t.length; l++) {
      const n = t.slice(0, l).join(".");
      r = [...r, ...this._injections.get(n) || []];
    }
    return r;
  }
}
let oo, Ce = 0;
async function ao(i = {}) {
  Ce += 1, i.warnings !== !1 && Ce >= 10 && Ce % 10 === 0 && console.warn(`[Shiki] ${Ce} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \`highlighter.dispose()\` to release unused instances.`);
  let e = !1;
  async function t(x) {
    return Promise.resolve(typeof x == "function" ? x() : x).then((b) => b.default || b);
  }
  async function r(x) {
    return Array.from(new Set((await Promise.all(x.filter((b) => !yr(b)).map(async (b) => await t(b).then((_) => Array.isArray(_) ? _ : [_])))).flat()));
  }
  const l = i.loadWasm || oo, [n, c] = await Promise.all([
    Promise.all((i.themes || []).map(t)).then((x) => x.map(Dr)),
    r(i.langs || []),
    l ? eo(l) : void 0
  ]), a = new co(Promise.resolve({
    createOnigScanner(x) {
      return lo(x);
    },
    createOnigString(x) {
      return io(x);
    }
  }), c), o = new no(a, n, c, i.langAlias);
  await o.init();
  let s;
  function u(x) {
    w();
    const b = o.getGrammar(typeof x == "string" ? x : x.name);
    if (!b)
      throw new L(`Language \`${x}\` not found, you may need to load it first`);
    return b;
  }
  function f(x) {
    if (x === "none")
      return { bg: "", fg: "", name: "none", settings: [], type: "dark" };
    w();
    const b = o.getTheme(x);
    if (!b)
      throw new L(`Theme \`${x}\` not found, you may need to load it first`);
    return b;
  }
  function d(x) {
    w();
    const b = f(x);
    s !== x && (o.setTheme(b), s = x);
    const _ = o.getColorMap();
    return {
      theme: b,
      colorMap: _
    };
  }
  function h() {
    return w(), o.getLoadedThemes();
  }
  function g() {
    return w(), o.getLoadedLanguages();
  }
  async function m(...x) {
    w(), await o.loadLanguages(await r(x));
  }
  async function C(...x) {
    w(), await Promise.all(x.map(async (b) => Cr(b) ? null : o.loadTheme(await t(b))));
  }
  function w() {
    if (e)
      throw new L("Shiki instance has been disposed");
  }
  function S() {
    e || (e = !0, o.dispose(), Ce -= 1);
  }
  return {
    setTheme: d,
    getTheme: f,
    getLanguage: u,
    getLoadedThemes: h,
    getLoadedLanguages: g,
    loadLanguage: m,
    loadTheme: C,
    dispose: S,
    [Symbol.dispose]: S
  };
}
async function so(i = {}) {
  const e = await ao(i);
  return {
    getLastGrammarState: (t, r) => wn(e, t, r),
    codeToTokensBase: (t, r) => bt(e, t, r),
    codeToTokensWithThemes: (t, r) => wr(e, t, r),
    codeToTokens: (t, r) => Ue(e, t, r),
    codeToHast: (t, r) => He(e, t, r),
    codeToHtml: (t, r) => Hc(e, t, r),
    ...e,
    getInternalContext: () => e
  };
}
function uo(i, e, t) {
  async function r(l) {
    function n(u) {
      if (typeof u == "string") {
        if (yr(u))
          return [];
        const f = i[u];
        if (!f)
          throw new L(`Language \`${u}\` is not included in this bundle. You may want to load it from external source.`);
        return f;
      }
      return u;
    }
    function c(u) {
      if (Cr(u))
        return "none";
      if (typeof u == "string") {
        const f = e[u];
        if (!f)
          throw new L(`Theme \`${u}\` is not included in this bundle. You may want to load it from external source.`);
        return f;
      }
      return u;
    }
    const a = (l.themes ?? []).map((u) => c(u)), o = (l.langs ?? []).map((u) => n(u)), s = await so({
      ...l,
      themes: a,
      langs: o,
      loadWasm: t
    });
    return {
      ...s,
      loadLanguage(...u) {
        return s.loadLanguage(...u.map(n));
      },
      loadTheme(...u) {
        return s.loadTheme(...u.map(c));
      }
    };
  }
  return r;
}
function po(i = {}) {
  var c;
  const {
    name: e = "css-variables",
    variablePrefix: t = "--shiki-",
    fontStyle: r = !0
  } = i, l = (a) => {
    var o;
    return (o = i.variableDefaults) != null && o[a] ? `var(${t}${a}, ${i.variableDefaults[a]})` : `var(${t}${a})`;
  }, n = {
    name: e,
    type: "dark",
    colors: {
      "editor.foreground": l("foreground"),
      "editor.background": l("background"),
      "terminal.ansiBlack": l("ansi-black"),
      "terminal.ansiRed": l("ansi-red"),
      "terminal.ansiGreen": l("ansi-green"),
      "terminal.ansiYellow": l("ansi-yellow"),
      "terminal.ansiBlue": l("ansi-blue"),
      "terminal.ansiMagenta": l("ansi-magenta"),
      "terminal.ansiCyan": l("ansi-cyan"),
      "terminal.ansiWhite": l("ansi-white"),
      "terminal.ansiBrightBlack": l("ansi-bright-black"),
      "terminal.ansiBrightRed": l("ansi-bright-red"),
      "terminal.ansiBrightGreen": l("ansi-bright-green"),
      "terminal.ansiBrightYellow": l("ansi-bright-yellow"),
      "terminal.ansiBrightBlue": l("ansi-bright-blue"),
      "terminal.ansiBrightMagenta": l("ansi-bright-magenta"),
      "terminal.ansiBrightCyan": l("ansi-bright-cyan"),
      "terminal.ansiBrightWhite": l("ansi-bright-white")
    },
    tokenColors: [
      {
        scope: [
          "keyword.operator.accessor",
          "meta.group.braces.round.function.arguments",
          "meta.template.expression",
          "markup.fenced_code meta.embedded.block"
        ],
        settings: {
          foreground: l("foreground")
        }
      },
      {
        scope: "emphasis",
        settings: {
          fontStyle: "italic"
        }
      },
      {
        scope: ["strong", "markup.heading.markdown", "markup.bold.markdown"],
        settings: {
          fontStyle: "bold"
        }
      },
      {
        scope: ["markup.italic.markdown"],
        settings: {
          fontStyle: "italic"
        }
      },
      {
        scope: "meta.link.inline.markdown",
        settings: {
          fontStyle: "underline",
          foreground: l("token-link")
        }
      },
      {
        scope: ["string", "markup.fenced_code", "markup.inline"],
        settings: {
          foreground: l("token-string")
        }
      },
      {
        scope: ["comment", "string.quoted.docstring.multi"],
        settings: {
          foreground: l("token-comment")
        }
      },
      {
        scope: [
          "constant.numeric",
          "constant.language",
          "constant.other.placeholder",
          "constant.character.format.placeholder",
          "variable.language.this",
          "variable.other.object",
          "variable.other.class",
          "variable.other.constant",
          "meta.property-name",
          "meta.property-value",
          "support"
        ],
        settings: {
          foreground: l("token-constant")
        }
      },
      {
        scope: [
          "keyword",
          "storage.modifier",
          "storage.type",
          "storage.control.clojure",
          "entity.name.function.clojure",
          "entity.name.tag.yaml",
          "support.function.node",
          "support.type.property-name.json",
          "punctuation.separator.key-value",
          "punctuation.definition.template-expression"
        ],
        settings: {
          foreground: l("token-keyword")
        }
      },
      {
        scope: "variable.parameter.function",
        settings: {
          foreground: l("token-parameter")
        }
      },
      {
        scope: [
          "support.function",
          "entity.name.type",
          "entity.other.inherited-class",
          "meta.function-call",
          "meta.instance.constructor",
          "entity.other.attribute-name",
          "entity.name.function",
          "constant.keyword.clojure"
        ],
        settings: {
          foreground: l("token-function")
        }
      },
      {
        scope: [
          "entity.name.tag",
          "string.quoted",
          "string.regexp",
          "string.interpolated",
          "string.template",
          "string.unquoted.plain.out.yaml",
          "keyword.other.template"
        ],
        settings: {
          foreground: l("token-string-expression")
        }
      },
      {
        scope: [
          "punctuation.definition.arguments",
          "punctuation.definition.dict",
          "punctuation.separator",
          "meta.function-call.arguments"
        ],
        settings: {
          foreground: l("token-punctuation")
        }
      },
      {
        // [Custom] Markdown links
        scope: [
          "markup.underline.link",
          "punctuation.definition.metadata.markdown"
        ],
        settings: {
          foreground: l("token-link")
        }
      },
      {
        // [Custom] Markdown list
        scope: ["beginning.punctuation.definition.list.markdown"],
        settings: {
          foreground: l("token-string")
        }
      },
      {
        // [Custom] Markdown punctuation definition brackets
        scope: [
          "punctuation.definition.string.begin.markdown",
          "punctuation.definition.string.end.markdown",
          "string.other.link.title.markdown",
          "string.other.link.description.markdown"
        ],
        settings: {
          foreground: l("token-keyword")
        }
      },
      {
        // [Custom] Diff
        scope: [
          "markup.inserted",
          "meta.diff.header.to-file",
          "punctuation.definition.inserted"
        ],
        settings: {
          foreground: l("token-inserted")
        }
      },
      {
        scope: [
          "markup.deleted",
          "meta.diff.header.from-file",
          "punctuation.definition.deleted"
        ],
        settings: {
          foreground: l("token-deleted")
        }
      },
      {
        scope: [
          "markup.changed",
          "punctuation.definition.changed"
        ],
        settings: {
          foreground: l("token-changed")
        }
      }
    ]
  };
  return r || (n.tokenColors = (c = n.tokenColors) == null ? void 0 : c.map((a) => {
    var o;
    return (o = a.settings) != null && o.fontStyle && delete a.settings.fontStyle, a;
  })), n;
}
const $r = [
  {
    id: "abap",
    name: "ABAP",
    import: () => import("./abap-D4jAN0xQ.js")
  },
  {
    id: "actionscript-3",
    name: "ActionScript",
    import: () => import("./actionscript-3-BSGdF6cT.js")
  },
  {
    id: "ada",
    name: "Ada",
    import: () => import("./ada-DU8eGv3I.js")
  },
  {
    id: "angular-html",
    name: "Angular HTML",
    import: () => import("./angular-html-DJhTzFH8.js").then((i) => i.f)
  },
  {
    id: "angular-ts",
    name: "Angular TypeScript",
    import: () => import("./angular-ts-B9_SjgRQ.js")
  },
  {
    id: "apache",
    name: "Apache Conf",
    import: () => import("./apache-BKzZ5Bwu.js")
  },
  {
    id: "apex",
    name: "Apex",
    import: () => import("./apex-Dkl9ulDt.js")
  },
  {
    id: "apl",
    name: "APL",
    import: () => import("./apl-CEq7Iwqr.js")
  },
  {
    id: "applescript",
    name: "AppleScript",
    import: () => import("./applescript-MXzwQlQx.js")
  },
  {
    id: "ara",
    name: "Ara",
    import: () => import("./ara-BM5tZ5CD.js")
  },
  {
    id: "asciidoc",
    name: "AsciiDoc",
    aliases: [
      "adoc"
    ],
    import: () => import("./asciidoc-Bem-RDhO.js")
  },
  {
    id: "asm",
    name: "Assembly",
    import: () => import("./asm-DTEnU_6i.js")
  },
  {
    id: "astro",
    name: "Astro",
    import: () => import("./astro-BgGIZqHt.js")
  },
  {
    id: "awk",
    name: "AWK",
    import: () => import("./awk-BR15DBs5.js")
  },
  {
    id: "ballerina",
    name: "Ballerina",
    import: () => import("./ballerina-yEUoi76Q.js")
  },
  {
    id: "bat",
    name: "Batch File",
    aliases: [
      "batch"
    ],
    import: () => import("./bat-B_FfLtFN.js")
  },
  {
    id: "beancount",
    name: "Beancount",
    import: () => import("./beancount-F-9yPHPP.js")
  },
  {
    id: "berry",
    name: "Berry",
    aliases: [
      "be"
    ],
    import: () => import("./berry-CMXUesdH.js")
  },
  {
    id: "bibtex",
    name: "BibTeX",
    import: () => import("./bibtex-BPnMS84W.js")
  },
  {
    id: "bicep",
    name: "Bicep",
    import: () => import("./bicep-LLPAr7LX.js")
  },
  {
    id: "blade",
    name: "Blade",
    import: () => import("./blade-Br60lQ2L.js")
  },
  {
    id: "c",
    name: "C",
    import: () => import("./c-eDnjw9rh.js")
  },
  {
    id: "cadence",
    name: "Cadence",
    aliases: [
      "cdc"
    ],
    import: () => import("./cadence-mVaVdjgz.js")
  },
  {
    id: "clarity",
    name: "Clarity",
    import: () => import("./clarity-BnaiFa1B.js")
  },
  {
    id: "clojure",
    name: "Clojure",
    aliases: [
      "clj"
    ],
    import: () => import("./clojure-93D095_q.js")
  },
  {
    id: "cmake",
    name: "CMake",
    import: () => import("./cmake-DyJi3q4Y.js")
  },
  {
    id: "cobol",
    name: "COBOL",
    import: () => import("./cobol-CN2Jg3wb.js")
  },
  {
    id: "codeowners",
    name: "CODEOWNERS",
    import: () => import("./codeowners-BXQYC5At.js")
  },
  {
    id: "codeql",
    name: "CodeQL",
    aliases: [
      "ql"
    ],
    import: () => import("./codeql-CZwDzwrQ.js")
  },
  {
    id: "coffee",
    name: "CoffeeScript",
    aliases: [
      "coffeescript"
    ],
    import: () => import("./coffee-Bp-vQeIO.js")
  },
  {
    id: "common-lisp",
    name: "Common Lisp",
    aliases: [
      "lisp"
    ],
    import: () => import("./common-lisp-DyUVkOtJ.js")
  },
  {
    id: "coq",
    name: "Coq",
    import: () => import("./coq-CWu7HOsK.js")
  },
  {
    id: "cpp",
    name: "C++",
    aliases: [
      "c++"
    ],
    import: () => import("./cpp-j_FTkp2D.js")
  },
  {
    id: "crystal",
    name: "Crystal",
    import: () => import("./crystal-D7mi3KNx.js")
  },
  {
    id: "csharp",
    name: "C#",
    aliases: [
      "c#",
      "cs"
    ],
    import: () => import("./csharp-lrxu4vbW.js")
  },
  {
    id: "css",
    name: "CSS",
    import: () => import("./css-CAzixsid.js")
  },
  {
    id: "csv",
    name: "CSV",
    import: () => import("./csv-D4BoHddH.js")
  },
  {
    id: "cue",
    name: "CUE",
    import: () => import("./cue-DSLpYkvr.js")
  },
  {
    id: "cypher",
    name: "Cypher",
    aliases: [
      "cql"
    ],
    import: () => import("./cypher-BeW7TWTi.js")
  },
  {
    id: "d",
    name: "D",
    import: () => import("./d-Ceicia6V.js")
  },
  {
    id: "dart",
    name: "Dart",
    import: () => import("./dart-BlVbcWuD.js")
  },
  {
    id: "dax",
    name: "DAX",
    import: () => import("./dax-DVh6ILsn.js")
  },
  {
    id: "desktop",
    name: "Desktop",
    import: () => import("./desktop-zUP4uqBZ.js")
  },
  {
    id: "diff",
    name: "Diff",
    import: () => import("./diff-Bo5iyMQ2.js")
  },
  {
    id: "docker",
    name: "Dockerfile",
    aliases: [
      "dockerfile"
    ],
    import: () => import("./docker-B10O2enb.js")
  },
  {
    id: "dotenv",
    name: "dotEnv",
    import: () => import("./dotenv-afZof7ib.js")
  },
  {
    id: "dream-maker",
    name: "Dream Maker",
    import: () => import("./dream-maker-UDAD0bvC.js")
  },
  {
    id: "edge",
    name: "Edge",
    import: () => import("./edge-CGq0kWfn.js")
  },
  {
    id: "elixir",
    name: "Elixir",
    import: () => import("./elixir-DgzXYHn7.js")
  },
  {
    id: "elm",
    name: "Elm",
    import: () => import("./elm-CqAkFZFx.js")
  },
  {
    id: "emacs-lisp",
    name: "Emacs Lisp",
    aliases: [
      "elisp"
    ],
    import: () => import("./emacs-lisp-DWTQg3Ih.js")
  },
  {
    id: "erb",
    name: "ERB",
    import: () => import("./erb-V3RTnE0M.js")
  },
  {
    id: "erlang",
    name: "Erlang",
    aliases: [
      "erl"
    ],
    import: () => import("./erlang-CDlBv21n.js")
  },
  {
    id: "fennel",
    name: "Fennel",
    import: () => import("./fennel-DVV29K-v.js")
  },
  {
    id: "fish",
    name: "Fish",
    import: () => import("./fish-Crw_yk7F.js")
  },
  {
    id: "fluent",
    name: "Fluent",
    aliases: [
      "ftl"
    ],
    import: () => import("./fluent-lvbqoalB.js")
  },
  {
    id: "fortran-fixed-form",
    name: "Fortran (Fixed Form)",
    aliases: [
      "f",
      "for",
      "f77"
    ],
    import: () => import("./fortran-fixed-form-CKw1i0oJ.js")
  },
  {
    id: "fortran-free-form",
    name: "Fortran (Free Form)",
    aliases: [
      "f90",
      "f95",
      "f03",
      "f08",
      "f18"
    ],
    import: () => import("./fortran-free-form-CKhQuTgr.js")
  },
  {
    id: "fsharp",
    name: "F#",
    aliases: [
      "f#",
      "fs"
    ],
    import: () => import("./fsharp-CovR36Il.js")
  },
  {
    id: "gdresource",
    name: "GDResource",
    import: () => import("./gdresource-CRl560u-.js")
  },
  {
    id: "gdscript",
    name: "GDScript",
    import: () => import("./gdscript-BU_KNUwU.js")
  },
  {
    id: "gdshader",
    name: "GDShader",
    import: () => import("./gdshader-DPjPkgVB.js")
  },
  {
    id: "genie",
    name: "Genie",
    import: () => import("./genie-BPYHJqls.js")
  },
  {
    id: "gherkin",
    name: "Gherkin",
    import: () => import("./gherkin-FgnK2dKG.js")
  },
  {
    id: "git-commit",
    name: "Git Commit Message",
    import: () => import("./git-commit-CWf81VOF.js")
  },
  {
    id: "git-rebase",
    name: "Git Rebase Message",
    import: () => import("./git-rebase-CiMYr9Ye.js")
  },
  {
    id: "gleam",
    name: "Gleam",
    import: () => import("./gleam-DwkZ6UqE.js")
  },
  {
    id: "glimmer-js",
    name: "Glimmer JS",
    aliases: [
      "gjs"
    ],
    import: () => import("./glimmer-js-BE7-oaLf.js")
  },
  {
    id: "glimmer-ts",
    name: "Glimmer TS",
    aliases: [
      "gts"
    ],
    import: () => import("./glimmer-ts-yUk5pmXX.js")
  },
  {
    id: "glsl",
    name: "GLSL",
    import: () => import("./glsl-DnS7pcDq.js")
  },
  {
    id: "gnuplot",
    name: "Gnuplot",
    import: () => import("./gnuplot-BlQVe05z.js")
  },
  {
    id: "go",
    name: "Go",
    import: () => import("./go-vGwKyyRt.js")
  },
  {
    id: "graphql",
    name: "GraphQL",
    aliases: [
      "gql"
    ],
    import: () => import("./graphql-CT32SSoq.js")
  },
  {
    id: "groovy",
    name: "Groovy",
    import: () => import("./groovy-D6vhHIT3.js")
  },
  {
    id: "hack",
    name: "Hack",
    import: () => import("./hack-DzmRHDsy.js")
  },
  {
    id: "haml",
    name: "Ruby Haml",
    import: () => import("./haml-CWzSPkW-.js")
  },
  {
    id: "handlebars",
    name: "Handlebars",
    aliases: [
      "hbs"
    ],
    import: () => import("./handlebars-Cs7BocNX.js")
  },
  {
    id: "haskell",
    name: "Haskell",
    aliases: [
      "hs"
    ],
    import: () => import("./haskell-BfFu8DD8.js")
  },
  {
    id: "haxe",
    name: "Haxe",
    import: () => import("./haxe-DvmVzhir.js")
  },
  {
    id: "hcl",
    name: "HashiCorp HCL",
    import: () => import("./hcl-BMViKm4f.js")
  },
  {
    id: "hjson",
    name: "Hjson",
    import: () => import("./hjson-K2Kfplt2.js")
  },
  {
    id: "hlsl",
    name: "HLSL",
    import: () => import("./hlsl-BFeEEwO0.js")
  },
  {
    id: "html",
    name: "HTML",
    import: () => import("./html-BZB5lEhh.js")
  },
  {
    id: "html-derivative",
    name: "HTML (Derivative)",
    import: () => import("./html-derivative-CShblKSs.js")
  },
  {
    id: "http",
    name: "HTTP",
    import: () => import("./http-DGe6rMdd.js")
  },
  {
    id: "hxml",
    name: "HXML",
    import: () => import("./hxml-C_JjbCr0.js")
  },
  {
    id: "hy",
    name: "Hy",
    import: () => import("./hy-DePywrG3.js")
  },
  {
    id: "imba",
    name: "Imba",
    import: () => import("./imba-DYSyWVFa.js")
  },
  {
    id: "ini",
    name: "INI",
    aliases: [
      "properties"
    ],
    import: () => import("./ini-BsUFIxsI.js")
  },
  {
    id: "java",
    name: "Java",
    import: () => import("./java-Bk2JzfKB.js")
  },
  {
    id: "javascript",
    name: "JavaScript",
    aliases: [
      "js"
    ],
    import: () => import("./javascript-DqVBMyXe.js")
  },
  {
    id: "jinja",
    name: "Jinja",
    import: () => import("./jinja-CIto9uVq.js")
  },
  {
    id: "jison",
    name: "Jison",
    import: () => import("./jison-DzIKXz4-.js")
  },
  {
    id: "json",
    name: "JSON",
    import: () => import("./json-B12k4-6m.js")
  },
  {
    id: "json5",
    name: "JSON5",
    import: () => import("./json5-CvqQZK9I.js")
  },
  {
    id: "jsonc",
    name: "JSON with Comments",
    import: () => import("./jsonc-v2qGKRJY.js")
  },
  {
    id: "jsonl",
    name: "JSON Lines",
    import: () => import("./jsonl-izxnMeZX.js")
  },
  {
    id: "jsonnet",
    name: "Jsonnet",
    import: () => import("./jsonnet-DP1DxSZT.js")
  },
  {
    id: "jssm",
    name: "JSSM",
    aliases: [
      "fsl"
    ],
    import: () => import("./jssm-C5EtPSub.js")
  },
  {
    id: "jsx",
    name: "JSX",
    import: () => import("./jsx-aDp7j9_Z.js")
  },
  {
    id: "julia",
    name: "Julia",
    aliases: [
      "jl"
    ],
    import: () => import("./julia-ClODfylw.js")
  },
  {
    id: "kotlin",
    name: "Kotlin",
    aliases: [
      "kt",
      "kts"
    ],
    import: () => import("./kotlin-B3jgocgC.js")
  },
  {
    id: "kusto",
    name: "Kusto",
    aliases: [
      "kql"
    ],
    import: () => import("./kusto-DGcl39q9.js")
  },
  {
    id: "latex",
    name: "LaTeX",
    import: () => import("./latex-BcI06jWJ.js")
  },
  {
    id: "lean",
    name: "Lean 4",
    aliases: [
      "lean4"
    ],
    import: () => import("./lean-QINnhBXU.js")
  },
  {
    id: "less",
    name: "Less",
    import: () => import("./less-C4xmtpuX.js")
  },
  {
    id: "liquid",
    name: "Liquid",
    import: () => import("./liquid-DJ2rh7oT.js")
  },
  {
    id: "log",
    name: "Log file",
    import: () => import("./log-DYpzuuuU.js")
  },
  {
    id: "logo",
    name: "Logo",
    import: () => import("./logo-CcD7pyi0.js")
  },
  {
    id: "lua",
    name: "Lua",
    import: () => import("./lua-D4fcBLSU.js")
  },
  {
    id: "luau",
    name: "Luau",
    import: () => import("./luau-DACrxq1a.js")
  },
  {
    id: "make",
    name: "Makefile",
    aliases: [
      "makefile"
    ],
    import: () => import("./make-whncTQWE.js")
  },
  {
    id: "markdown",
    name: "Markdown",
    aliases: [
      "md"
    ],
    import: () => import("./markdown-0GQKxKxV.js")
  },
  {
    id: "marko",
    name: "Marko",
    import: () => import("./marko-ajE40DTs.js")
  },
  {
    id: "matlab",
    name: "MATLAB",
    import: () => import("./matlab-DvcJEZHN.js")
  },
  {
    id: "mdc",
    name: "MDC",
    import: () => import("./mdc-Cj5k6-kI.js")
  },
  {
    id: "mdx",
    name: "MDX",
    import: () => import("./mdx-AirawmH7.js")
  },
  {
    id: "mermaid",
    name: "Mermaid",
    import: () => import("./mermaid-BDRJ-IyY.js")
  },
  {
    id: "mojo",
    name: "Mojo",
    import: () => import("./mojo-D5ST-Xef.js")
  },
  {
    id: "move",
    name: "Move",
    import: () => import("./move-CT6R4uwI.js")
  },
  {
    id: "narrat",
    name: "Narrat Language",
    aliases: [
      "nar"
    ],
    import: () => import("./narrat-CfRLBTOw.js")
  },
  {
    id: "nextflow",
    name: "Nextflow",
    aliases: [
      "nf"
    ],
    import: () => import("./nextflow-BtHOvNv0.js")
  },
  {
    id: "nginx",
    name: "Nginx",
    import: () => import("./nginx-Bvt77bhO.js")
  },
  {
    id: "nim",
    name: "Nim",
    import: () => import("./nim-BlRtbEfS.js")
  },
  {
    id: "nix",
    name: "Nix",
    import: () => import("./nix-BCbNHcw1.js")
  },
  {
    id: "nushell",
    name: "nushell",
    aliases: [
      "nu"
    ],
    import: () => import("./nushell-CtDgf1K6.js")
  },
  {
    id: "objective-c",
    name: "Objective-C",
    aliases: [
      "objc"
    ],
    import: () => import("./objective-c-BVtzkNiv.js")
  },
  {
    id: "objective-cpp",
    name: "Objective-C++",
    import: () => import("./objective-cpp-qN_C0OHi.js")
  },
  {
    id: "ocaml",
    name: "OCaml",
    import: () => import("./ocaml-DfiuN5Ma.js")
  },
  {
    id: "pascal",
    name: "Pascal",
    import: () => import("./pascal-8g0cXXUV.js")
  },
  {
    id: "perl",
    name: "Perl",
    import: () => import("./perl-D29UPKP6.js")
  },
  {
    id: "php",
    name: "PHP",
    import: () => import("./php-D7Tl-iS7.js")
  },
  {
    id: "plsql",
    name: "PL/SQL",
    import: () => import("./plsql-8SPzZKaa.js")
  },
  {
    id: "po",
    name: "Gettext PO",
    aliases: [
      "pot",
      "potx"
    ],
    import: () => import("./po-DilYku3g.js")
  },
  {
    id: "postcss",
    name: "PostCSS",
    import: () => import("./postcss-Cz2vjx_4.js")
  },
  {
    id: "powerquery",
    name: "PowerQuery",
    import: () => import("./powerquery-Dt2iA-wR.js")
  },
  {
    id: "powershell",
    name: "PowerShell",
    aliases: [
      "ps",
      "ps1"
    ],
    import: () => import("./powershell-B0buHCuS.js")
  },
  {
    id: "prisma",
    name: "Prisma",
    import: () => import("./prisma-Dc8wEZIo.js")
  },
  {
    id: "prolog",
    name: "Prolog",
    import: () => import("./prolog-S3iNKoRu.js")
  },
  {
    id: "proto",
    name: "Protocol Buffer 3",
    aliases: [
      "protobuf"
    ],
    import: () => import("./proto-DCXl8SC9.js")
  },
  {
    id: "pug",
    name: "Pug",
    aliases: [
      "jade"
    ],
    import: () => import("./pug-BQ2EUZRo.js")
  },
  {
    id: "puppet",
    name: "Puppet",
    import: () => import("./puppet-CuVB9Rq0.js")
  },
  {
    id: "purescript",
    name: "PureScript",
    import: () => import("./purescript-DMvwjEvz.js")
  },
  {
    id: "python",
    name: "Python",
    aliases: [
      "py"
    ],
    import: () => import("./python-BQXev0_W.js")
  },
  {
    id: "qml",
    name: "QML",
    import: () => import("./qml-BQsOBddA.js")
  },
  {
    id: "qmldir",
    name: "QML Directory",
    import: () => import("./qmldir-ne2lVatE.js")
  },
  {
    id: "qss",
    name: "Qt Style Sheets",
    import: () => import("./qss-DtR4_ml1.js")
  },
  {
    id: "r",
    name: "R",
    import: () => import("./r-DU7Q70f1.js")
  },
  {
    id: "racket",
    name: "Racket",
    import: () => import("./racket-DUOHoV_0.js")
  },
  {
    id: "raku",
    name: "Raku",
    aliases: [
      "perl6"
    ],
    import: () => import("./raku-BLpbaJXa.js")
  },
  {
    id: "razor",
    name: "ASP.NET Razor",
    import: () => import("./razor-qqKamDKl.js")
  },
  {
    id: "reg",
    name: "Windows Registry Script",
    import: () => import("./reg-DoGLEyFr.js")
  },
  {
    id: "regexp",
    name: "RegExp",
    aliases: [
      "regex"
    ],
    import: () => import("./regexp-CU3Ypx26.js")
  },
  {
    id: "rel",
    name: "Rel",
    import: () => import("./rel-BW73-vfF.js")
  },
  {
    id: "riscv",
    name: "RISC-V",
    import: () => import("./riscv-D0-9lcKF.js")
  },
  {
    id: "rst",
    name: "reStructuredText",
    import: () => import("./rst-CASXoYhQ.js")
  },
  {
    id: "ruby",
    name: "Ruby",
    aliases: [
      "rb"
    ],
    import: () => import("./ruby-CeZNp0ZT.js")
  },
  {
    id: "rust",
    name: "Rust",
    aliases: [
      "rs"
    ],
    import: () => import("./rust-B2u3X65B.js")
  },
  {
    id: "sas",
    name: "SAS",
    import: () => import("./sas-zI3jHQbG.js")
  },
  {
    id: "sass",
    name: "Sass",
    import: () => import("./sass-LqXmC1Fh.js")
  },
  {
    id: "scala",
    name: "Scala",
    import: () => import("./scala-Dj8Vz6dt.js")
  },
  {
    id: "scheme",
    name: "Scheme",
    import: () => import("./scheme-BlfX3VPj.js")
  },
  {
    id: "scss",
    name: "SCSS",
    import: () => import("./scss-DjxgF7f7.js")
  },
  {
    id: "shaderlab",
    name: "ShaderLab",
    aliases: [
      "shader"
    ],
    import: () => import("./shaderlab-CQidlLWK.js")
  },
  {
    id: "shellscript",
    name: "Shell",
    aliases: [
      "bash",
      "sh",
      "shell",
      "zsh"
    ],
    import: () => import("./shellscript-4vnCAIm1.js")
  },
  {
    id: "shellsession",
    name: "Shell Session",
    aliases: [
      "console"
    ],
    import: () => import("./shellsession-CUGHe1cY.js")
  },
  {
    id: "smalltalk",
    name: "Smalltalk",
    import: () => import("./smalltalk-CNYi_O3g.js")
  },
  {
    id: "solidity",
    name: "Solidity",
    import: () => import("./solidity-B5mjtXcY.js")
  },
  {
    id: "soy",
    name: "Closure Templates",
    aliases: [
      "closure-templates"
    ],
    import: () => import("./soy-CKsW2ZyU.js")
  },
  {
    id: "sparql",
    name: "SPARQL",
    import: () => import("./sparql-C20FYxjg.js")
  },
  {
    id: "splunk",
    name: "Splunk Query Language",
    aliases: [
      "spl"
    ],
    import: () => import("./splunk-C0K00wNV.js")
  },
  {
    id: "sql",
    name: "SQL",
    import: () => import("./sql-DkzN59UV.js")
  },
  {
    id: "ssh-config",
    name: "SSH Config",
    import: () => import("./ssh-config-BbWAW6SY.js")
  },
  {
    id: "stata",
    name: "Stata",
    import: () => import("./stata-BhcVeNw_.js")
  },
  {
    id: "stylus",
    name: "Stylus",
    aliases: [
      "styl"
    ],
    import: () => import("./stylus-CAHdVuhm.js")
  },
  {
    id: "svelte",
    name: "Svelte",
    import: () => import("./svelte-Dw7LMCwr.js")
  },
  {
    id: "swift",
    name: "Swift",
    import: () => import("./swift-DZjxY9Jt.js")
  },
  {
    id: "system-verilog",
    name: "SystemVerilog",
    import: () => import("./system-verilog-B5z8FYoC.js")
  },
  {
    id: "systemd",
    name: "Systemd Units",
    import: () => import("./systemd-BFhe0GBb.js")
  },
  {
    id: "tasl",
    name: "Tasl",
    import: () => import("./tasl-Bo_ZdhUo.js")
  },
  {
    id: "tcl",
    name: "Tcl",
    import: () => import("./tcl-CQ1ZaLso.js")
  },
  {
    id: "templ",
    name: "Templ",
    import: () => import("./templ-dANFuTfT.js")
  },
  {
    id: "terraform",
    name: "Terraform",
    aliases: [
      "tf",
      "tfvars"
    ],
    import: () => import("./terraform-Cy415QlH.js")
  },
  {
    id: "tex",
    name: "TeX",
    import: () => import("./tex-Bmi2fzJH.js")
  },
  {
    id: "toml",
    name: "TOML",
    import: () => import("./toml-Dbtbfmwk.js")
  },
  {
    id: "ts-tags",
    name: "TypeScript with Tags",
    aliases: [
      "lit"
    ],
    import: () => import("./ts-tags-CM-ziXVt.js")
  },
  {
    id: "tsv",
    name: "TSV",
    import: () => import("./tsv-B450BUpt.js")
  },
  {
    id: "tsx",
    name: "TSX",
    import: () => import("./tsx-BmwsDeeh.js")
  },
  {
    id: "turtle",
    name: "Turtle",
    import: () => import("./turtle-CjJ3DTEy.js")
  },
  {
    id: "twig",
    name: "Twig",
    import: () => import("./twig-C3PQEvb5.js")
  },
  {
    id: "typescript",
    name: "TypeScript",
    aliases: [
      "ts"
    ],
    import: () => import("./typescript-AEg-ehu7.js")
  },
  {
    id: "typespec",
    name: "TypeSpec",
    aliases: [
      "tsp"
    ],
    import: () => import("./typespec-voTCRQ0q.js")
  },
  {
    id: "typst",
    name: "Typst",
    aliases: [
      "typ"
    ],
    import: () => import("./typst-Dk7Ov0ET.js")
  },
  {
    id: "v",
    name: "V",
    import: () => import("./v-BuvBsUKm.js")
  },
  {
    id: "vala",
    name: "Vala",
    import: () => import("./vala-Cz6e18_k.js")
  },
  {
    id: "vb",
    name: "Visual Basic",
    aliases: [
      "cmd"
    ],
    import: () => import("./vb-cqjo5dul.js")
  },
  {
    id: "verilog",
    name: "Verilog",
    import: () => import("./verilog-Fl9x-xQf.js")
  },
  {
    id: "vhdl",
    name: "VHDL",
    import: () => import("./vhdl-BPu8dFOu.js")
  },
  {
    id: "viml",
    name: "Vim Script",
    aliases: [
      "vim",
      "vimscript"
    ],
    import: () => import("./viml-h3ATW6He.js")
  },
  {
    id: "vue",
    name: "Vue",
    import: () => import("./vue-C9mmwWHj.js")
  },
  {
    id: "vue-html",
    name: "Vue HTML",
    import: () => import("./vue-html-DswYnZOq.js")
  },
  {
    id: "vyper",
    name: "Vyper",
    aliases: [
      "vy"
    ],
    import: () => import("./vyper-BljDRmN9.js")
  },
  {
    id: "wasm",
    name: "WebAssembly",
    import: () => import("./wasm-xOGcJ9Ts.js")
  },
  {
    id: "wenyan",
    name: "Wenyan",
    aliases: [
      "文言"
    ],
    import: () => import("./wenyan-CDGDMkuT.js")
  },
  {
    id: "wgsl",
    name: "WGSL",
    import: () => import("./wgsl-hGLOfCya.js")
  },
  {
    id: "wikitext",
    name: "Wikitext",
    aliases: [
      "mediawiki",
      "wiki"
    ],
    import: () => import("./wikitext-B7ljTD1p.js")
  },
  {
    id: "wolfram",
    name: "Wolfram",
    aliases: [
      "wl"
    ],
    import: () => import("./wolfram-CSG3fqvS.js")
  },
  {
    id: "xml",
    name: "XML",
    import: () => import("./xml-CfRpfi_B.js")
  },
  {
    id: "xsl",
    name: "XSL",
    import: () => import("./xsl-BAqhSCYL.js")
  },
  {
    id: "yaml",
    name: "YAML",
    aliases: [
      "yml"
    ],
    import: () => import("./yaml-BEu5ErCD.js")
  },
  {
    id: "zenscript",
    name: "ZenScript",
    import: () => import("./zenscript-LTCRRih9.js")
  },
  {
    id: "zig",
    name: "Zig",
    import: () => import("./zig-CWjt5WAx.js")
  }
], fo = Object.fromEntries($r.map((i) => [i.id, i.import])), mo = Object.fromEntries($r.flatMap((i) => {
  var e;
  return ((e = i.aliases) == null ? void 0 : e.map((t) => [t, i.import])) || [];
})), ho = {
  ...fo,
  ...mo
}, go = async (i) => import("./wasm-SPaT1zC5.js").then((e) => e.default(i)), yo = [
  {
    id: "andromeeda",
    displayName: "Andromeeda",
    type: "dark",
    import: () => import("./andromeeda-DPpXYl0E.js")
  },
  {
    id: "aurora-x",
    displayName: "Aurora X",
    type: "dark",
    import: () => import("./aurora-x-DnWELX_L.js")
  },
  {
    id: "ayu-dark",
    displayName: "Ayu Dark",
    type: "dark",
    import: () => import("./ayu-dark-C4VG0vIa.js")
  },
  {
    id: "catppuccin-frappe",
    displayName: "Catppuccin Frappé",
    type: "dark",
    import: () => import("./catppuccin-frappe-hMSU_IUy.js")
  },
  {
    id: "catppuccin-latte",
    displayName: "Catppuccin Latte",
    type: "light",
    import: () => import("./catppuccin-latte-Cmd218j3.js")
  },
  {
    id: "catppuccin-macchiato",
    displayName: "Catppuccin Macchiato",
    type: "dark",
    import: () => import("./catppuccin-macchiato-BpeZNsVm.js")
  },
  {
    id: "catppuccin-mocha",
    displayName: "Catppuccin Mocha",
    type: "dark",
    import: () => import("./catppuccin-mocha-CTNMKT5D.js")
  },
  {
    id: "dark-plus",
    displayName: "Dark Plus",
    type: "dark",
    import: () => import("./dark-plus-B2RZoAKy.js")
  },
  {
    id: "dracula",
    displayName: "Dracula Theme",
    type: "dark",
    import: () => import("./dracula-bsBcdUGf.js")
  },
  {
    id: "dracula-soft",
    displayName: "Dracula Theme Soft",
    type: "dark",
    import: () => import("./dracula-soft-Dh3rhp5v.js")
  },
  {
    id: "everforest-dark",
    displayName: "Everforest Dark",
    type: "dark",
    import: () => import("./everforest-dark-Lpq3romT.js")
  },
  {
    id: "everforest-light",
    displayName: "Everforest Light",
    type: "light",
    import: () => import("./everforest-light-dzjIdwP9.js")
  },
  {
    id: "github-dark",
    displayName: "GitHub Dark",
    type: "dark",
    import: () => import("./github-dark-CKXpGqJc.js")
  },
  {
    id: "github-dark-default",
    displayName: "GitHub Dark Default",
    type: "dark",
    import: () => import("./github-dark-default-DO6y7RLl.js")
  },
  {
    id: "github-dark-dimmed",
    displayName: "GitHub Dark Dimmed",
    type: "dark",
    import: () => import("./github-dark-dimmed-BbgbS4lZ.js")
  },
  {
    id: "github-dark-high-contrast",
    displayName: "GitHub Dark High Contrast",
    type: "dark",
    import: () => import("./github-dark-high-contrast-C1Q6FhtV.js")
  },
  {
    id: "github-light",
    displayName: "GitHub Light",
    type: "light",
    import: () => import("./github-light-CKzbHTtr.js")
  },
  {
    id: "github-light-default",
    displayName: "GitHub Light Default",
    type: "light",
    import: () => import("./github-light-default-BZ-o0xjb.js")
  },
  {
    id: "github-light-high-contrast",
    displayName: "GitHub Light High Contrast",
    type: "light",
    import: () => import("./github-light-high-contrast-w_9vu-4h.js")
  },
  {
    id: "houston",
    displayName: "Houston",
    type: "dark",
    import: () => import("./houston-B8F3uBpl.js")
  },
  {
    id: "laserwave",
    displayName: "LaserWave",
    type: "dark",
    import: () => import("./laserwave-L2Ossh4c.js")
  },
  {
    id: "light-plus",
    displayName: "Light Plus",
    type: "light",
    import: () => import("./light-plus-DrOh91n2.js")
  },
  {
    id: "material-theme",
    displayName: "Material Theme",
    type: "dark",
    import: () => import("./material-theme-DIeHe--Q.js")
  },
  {
    id: "material-theme-darker",
    displayName: "Material Theme Darker",
    type: "dark",
    import: () => import("./material-theme-darker-BaavCrki.js")
  },
  {
    id: "material-theme-lighter",
    displayName: "Material Theme Lighter",
    type: "light",
    import: () => import("./material-theme-lighter-CtwOYHJ5.js")
  },
  {
    id: "material-theme-ocean",
    displayName: "Material Theme Ocean",
    type: "dark",
    import: () => import("./material-theme-ocean-DL8Tg-jL.js")
  },
  {
    id: "material-theme-palenight",
    displayName: "Material Theme Palenight",
    type: "dark",
    import: () => import("./material-theme-palenight-LzvMi3a5.js")
  },
  {
    id: "min-dark",
    displayName: "Min Dark",
    type: "dark",
    import: () => import("./min-dark-DUVWDWOK.js")
  },
  {
    id: "min-light",
    displayName: "Min Light",
    type: "light",
    import: () => import("./min-light-CWRurM7o.js")
  },
  {
    id: "monokai",
    displayName: "Monokai",
    type: "dark",
    import: () => import("./monokai-BwwX6qbw.js")
  },
  {
    id: "night-owl",
    displayName: "Night Owl",
    type: "dark",
    import: () => import("./night-owl-Cu2P60dD.js")
  },
  {
    id: "nord",
    displayName: "Nord",
    type: "dark",
    import: () => import("./nord-DJ9ok2AB.js")
  },
  {
    id: "one-dark-pro",
    displayName: "One Dark Pro",
    type: "dark",
    import: () => import("./one-dark-pro-BEq_VRX4.js")
  },
  {
    id: "one-light",
    displayName: "One Light",
    type: "light",
    import: () => import("./one-light-DpmCZD7v.js")
  },
  {
    id: "poimandres",
    displayName: "Poimandres",
    type: "dark",
    import: () => import("./poimandres-C21qUm5U.js")
  },
  {
    id: "red",
    displayName: "Red",
    type: "dark",
    import: () => import("./red-DexlUVpk.js")
  },
  {
    id: "rose-pine",
    displayName: "Rosé Pine",
    type: "dark",
    import: () => import("./rose-pine-DCbpG67w.js")
  },
  {
    id: "rose-pine-dawn",
    displayName: "Rosé Pine Dawn",
    type: "light",
    import: () => import("./rose-pine-dawn-CaJbnw0L.js")
  },
  {
    id: "rose-pine-moon",
    displayName: "Rosé Pine Moon",
    type: "dark",
    import: () => import("./rose-pine-moon-DxfAG_FQ.js")
  },
  {
    id: "slack-dark",
    displayName: "Slack Dark",
    type: "dark",
    import: () => import("./slack-dark-CLrIis8J.js")
  },
  {
    id: "slack-ochin",
    displayName: "Slack Ochin",
    type: "light",
    import: () => import("./slack-ochin-DJX3SDgj.js")
  },
  {
    id: "snazzy-light",
    displayName: "Snazzy Light",
    type: "light",
    import: () => import("./snazzy-light-Ilk5jLXf.js")
  },
  {
    id: "solarized-dark",
    displayName: "Solarized Dark",
    type: "dark",
    import: () => import("./solarized-dark-43NT56ln.js")
  },
  {
    id: "solarized-light",
    displayName: "Solarized Light",
    type: "light",
    import: () => import("./solarized-light-BCVOsoze.js")
  },
  {
    id: "synthwave-84",
    displayName: "Synthwave '84",
    type: "dark",
    import: () => import("./synthwave-84-DenwG4sM.js")
  },
  {
    id: "tokyo-night",
    displayName: "Tokyo Night",
    type: "dark",
    import: () => import("./tokyo-night-B3q8HWMC.js")
  },
  {
    id: "vesper",
    displayName: "Vesper",
    type: "dark",
    import: () => import("./vesper-B3bMlX-m.js")
  },
  {
    id: "vitesse-black",
    displayName: "Vitesse Black",
    type: "dark",
    import: () => import("./vitesse-black-vZLXjCVI.js")
  },
  {
    id: "vitesse-dark",
    displayName: "Vitesse Dark",
    type: "dark",
    import: () => import("./vitesse-dark-C4O-il97.js")
  },
  {
    id: "vitesse-light",
    displayName: "Vitesse Light",
    type: "light",
    import: () => import("./vitesse-light-CjXn6te5.js")
  }
], Co = Object.fromEntries(yo.map((i) => [i.id, i.import])), xo = /* @__PURE__ */ uo(
  ho,
  Co,
  go
), _o = po({
  name: "css-variables",
  variablePrefix: "--shiki-",
  variableDefaults: {},
  fontStyle: !0
});
let ct;
function bo() {
  return ct || (ct = xo({
    themes: [_o],
    langs: ["javascript", "typescript", "html", "json", "bash", "css", "xml", "yaml", "markdown"]
  })), ct;
}
async function wo() {
  return {
    highlighter: await bo()
  };
}
const Ko = /* @__PURE__ */ H({
  __name: "AsCodeBlock",
  props: {
    language: {
      type: String
    },
    code: {
      type: String
    }
  },
  async setup(i) {
    let e, t;
    const r = i, l = ee(!1), n = ee(!1), c = z(() => r.language === "javascript" ? "js" : r.language === "typescript" ? "ts" : r.language);
    async function a() {
      try {
        await navigator.clipboard.writeText(r.code), n.value = !0, setTimeout(() => {
          n.value = !1;
        }, 2e3);
      } catch (f) {
        console.error("There was an error copying content to clipboard", f);
      }
    }
    const { highlighter: o } = ([e, t] = Kr(() => wo()), e = await e, t(), e), s = o.codeToHtml(r.code, { lang: c.value, theme: "css-variables" }), u = () => Vr("div", { innerHTML: s.replace('class="shiki"', 'class="shiki not-prose"') });
    return (f, d) => (N(), T("div", {
      class: "relative",
      onMouseenter: d[1] || (d[1] = (h) => l.value = !0),
      onMouseleave: d[2] || (d[2] = (h) => l.value = !1)
    }, [
      te(Me, {
        name: "fade-language",
        "enter-active-class": "opacity-1 transition-opacity duration-200",
        "leave-active-class": "opacity-0 transition-opacity duration-200"
      }, {
        default: we(() => [
          ot(R("span", { class: "absolute top-1 right-1 px-3 text-primary-300" }, K(c.value), 513), [
            [at, !l.value]
          ])
        ]),
        _: 1
      }),
      te(Me, {
        name: "fade-copy",
        "enter-active-class": "opacity-1 transition-opacity duration-200",
        "leave-active-class": "opacity-0 transition-opacity duration-200"
      }, {
        default: we(() => [
          l.value ? (N(), ne(Zt, {
            key: 0,
            class: D(["absolute top-1 right-1", { "text-green-500": n.value }]),
            size: "sm",
            icon: n.value ? "check" : "copy",
            onClick: d[0] || (d[0] = (h) => a())
          }, null, 8, ["class", "icon"])) : Z("", !0)
        ]),
        _: 1
      }),
      te(u)
    ], 32));
  }
}), So = () => {
  const i = z(() => process.client && navigator && navigator.userAgent && navigator.userAgent.match(/Macintosh;/)), e = ee(" "), t = ei(), r = z(() => {
    var n, c, a, o;
    return ((n = t.value) == null ? void 0 : n.tagName) === "INPUT" || ((c = t.value) == null ? void 0 : c.tagName) === "TEXTAREA" || ((a = t.value) == null ? void 0 : a.contentEditable) === "true" ? ((o = t.value) == null ? void 0 : o.name) || !0 : !1;
  });
  return Yr(() => {
    e.value = i.value ? "⌘" : "Ctrl";
  }), {
    macOS: i,
    metaSymbol: e,
    activeElement: t,
    usingInput: r
  };
}, Vo = ti(So);
export {
  Mo as AsBadge,
  Zt as AsButton,
  jo as AsCard,
  Ko as AsCodeBlock,
  Uo as AsDarkModeToggle,
  tl as AsGraphic,
  st as AsIcon,
  rr as AsImg,
  Wo as AsKbd,
  zo as AsModal,
  Ho as AsParticleLoader,
  Fo as AsTextImage,
  ci as HeadlineShortcuts,
  oi as LayoutShortcuts,
  So as _useShortcuts,
  Qt as asIcons,
  ai as asNavigationIcons,
  si as asSocialIcons,
  ui as asTechIcons,
  Ao as btnSafelist,
  ni as btnShortcuts,
  re as btnSize,
  li as btnType,
  ue as btnVariant,
  Lo as btnVariantList,
  Ro as fonts,
  ir as graphicType,
  el as graphicTypeMap,
  fi as iconList,
  Io as iconSafelist,
  Eo as icons,
  tr as imgAspectRatios,
  Bo as imgAspectRatiosSafelist,
  pe as imgCaptionType,
  Go as imgCaptionTypeList,
  yt as imgFitModes,
  Do as imgFitModesList,
  er as imgLoadingMode,
  $o as imgLoadingModeList,
  xe as kbdSize,
  pi as miscIcons,
  ri as primary,
  Po as rules,
  ii as secondary,
  To as shortcuts,
  ut as textImgDirection,
  X as theme,
  Oo as typography,
  Vo as useShortcuts
};
