/**
 * name: @alvarosabu/ui
 * version: v3.0.0
 * (c) 2024
 * description: UI Library for my personal projects
 * author: Alvaro Saburido <hola@alvarosaburido.dev> (https://github.com/alvarosabu/)
 */
import t from "./html-BZB5lEhh.js";
const e = Object.freeze({ displayName: "HTML (Derivative)", injections: { "R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)": { comment: "Uses R: to ensure this matches after any other injections.", patterns: [{ match: "<", name: "invalid.illegal.bad-angle-bracket.html" }] } }, name: "html-derivative", patterns: [{ include: "text.html.basic#core-minus-invalid" }, { begin: "(</?)(\\w[^\\s>]*)(?<!/)", beginCaptures: { 1: { name: "punctuation.definition.tag.begin.html" }, 2: { name: "entity.name.tag.html" } }, end: "((?: ?/)?>)", endCaptures: { 1: { name: "punctuation.definition.tag.end.html" } }, name: "meta.tag.other.unrecognized.html.derivative", patterns: [{ include: "text.html.basic#attribute" }] }], scopeName: "text.html.derivative", embeddedLangs: ["html"] });
var n = [
  ...t,
  e
];
export {
  n as default
};
